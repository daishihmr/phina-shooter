{"version":3,"sources":["main.js","application.js","hudlabel.js","player.js","scorelabel.js","background.js","mainlayer.js","sidebarlayer.js","gamescene.js","loadingscene.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"phina-shooter.js","sourcesContent":["var SCREEN_WIDTH = 720;\r\nvar SCREEN_HEIGHT = 480;\r\n\r\nvar GAMEAREA_WIDTH = SCREEN_HEIGHT * 0.7;\r\nvar GAMEAREA_HEIGHT = SCREEN_HEIGHT;\r\n\r\nvar SIDEBAR_WIDTH = (SCREEN_WIDTH - GAMEAREA_WIDTH) * 0.5;\r\nvar SIDEBAR_HEIGHT = SCREEN_HEIGHT;\r\n\r\nvar FONT_SIZE_XL = 0.07 * SCREEN_WIDTH;\r\nvar FONT_SIZE_L = 0.03 * SCREEN_WIDTH;\r\nvar FONT_SIZE_M = 0.02 * SCREEN_WIDTH;\r\nvar FONT_SIZE_S = 0.012 * SCREEN_WIDTH;\r\n\r\nphina.main(function() {\r\n\r\n  var app = ps.Application();\r\n  app.run();\r\n  \r\n  app.enableStats();\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Application\", {\r\n    superClass: \"phina.display.CanvasApp\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        query: \"#app\",\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n      });\r\n      this.fps = 60;\r\n      \r\n      var loading = ps.LoadingScene({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        lie: false,\r\n        exitType: \"replace\",\r\n        nextScene: ps.GameScene,\r\n        assets: {\r\n          font: {\r\n            title: \"asset/Bangers/Bangers.ttf\",\r\n            main: \"asset/Anton/Anton.ttf\",\r\n            mono: \"asset/Share_Tech_Mono/ShareTechMono-Regular.ttf\",\r\n          }\r\n        }\r\n      });\r\n      this.replaceScene(loading);\r\n    }\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.HudLabel\", {\r\n    superClass: \"phina.display.Label\",\r\n\r\n    init: function(options) {\r\n      this.superInit(options.$safe({\r\n        fill: \"white\",\r\n        stroke: null,\r\n        fontSize: FONT_SIZE_M,\r\n        fontFamily: \"main\",\r\n        align: \"left\",\r\n        baseline: \"middle\",\r\n      }));\r\n    },\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Player\", {\r\n    superClass: \"phina.display.Sprite\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n    }\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.ScoreLabel\", {\r\n    superClass: \"phina.display.Label\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        fill: \"white\",\r\n        stroke: null,\r\n        fontSize: FONT_SIZE_M,\r\n        fontFamily: \"mono\",\r\n        align: \"right\",\r\n        baseline: \"middle\",\r\n      });\r\n\r\n      this.score = 9999999999999;\r\n    },\r\n\r\n    formatText: function() {\r\n      var v = \"\" + Math.floor(this._score);\r\n      if (12 < v.length) {\r\n        v = v.substring(0, v.length - 12) + \"兆\" + v.substring(v.length - 12);\r\n      }\r\n      if (8 < v.length) {\r\n        v = v.substring(0, v.length - 8) + \"億\" + v.substring(v.length - 8);\r\n      }\r\n      if (4 < v.length) {\r\n        v = v.substring(0, v.length - 4) + \"万\" + v.substring(v.length - 4);\r\n      }\r\n\r\n      this.text = v;\r\n    },\r\n\r\n    _accessor: {\r\n      score: {\r\n        get: function() {\r\n          return this._score;\r\n        },\r\n        set: function(v) {\r\n          this._score = v;\r\n          this.formatText();\r\n        }\r\n      }\r\n    }\r\n\r\n  });\r\n});\r\n","phina.main(function() {\r\n  var s = 10;\r\n  var l = s * Math.sqrt(3);\r\n  var bg = phina.graphics.Canvas();\r\n  bg.setSize(l * 2, s * 6);\r\n  bg.strokeStyle = \"hsla(240, 8%, 50%, 0.3)\";\r\n  bg.strokeLines(\r\n    l, 0,\r\n    l, s,\r\n    0, s * 2,\r\n    0, s * 4,\r\n    l, s * 5,\r\n    l, s * 6\r\n  );\r\n  bg.strokeLines(l, s, l * 2, s * 2);\r\n  bg.strokeLines(l, s * 5, l * 2, s * 4);\r\n  document.body.style.backgroundImage = \"url({0})\".format(bg.canvas.toDataURL());\r\n  document.body.style.backgroundRepeat = \"repeat\";\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.gamescene.MainLayer\", {\r\n    superClass: \"phina.display.Layer\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: GAMEAREA_WIDTH,\r\n        height: GAMEAREA_HEIGHT,\r\n      });\r\n      this.setOrigin(0, 0);\r\n      this.backgroundColor = \"hsl(240, 100%, 5%)\";\r\n    }\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.gamescene.SideBarLayer\", {\r\n    superClass: \"phina.display.Layer\",\r\n\r\n    skipDraw: false,\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SIDEBAR_WIDTH,\r\n        height: SIDEBAR_HEIGHT,\r\n      });\r\n      this.setOrigin(0, 0);\r\n      this.backgroundColor = \"hsl(0, 100%, 7%)\";\r\n    },\r\n\r\n    update: function(app) {\r\n      this.skipDraw = app.ticker.frame % 5 !== 0\r\n    },\r\n\r\n    draw: function(canvas) {\r\n      if (this.skipDraw) {\r\n        var image = this.canvas.domElement;\r\n        canvas.context.drawImage(image,\r\n          0, 0, image.width, image.height, -this.width * this.originX, -this.height * this.originY, this.width, this.height\r\n        );\r\n      } else {\r\n        phina.display.Layer.prototype.draw.call(this, canvas);\r\n      }\r\n    }\r\n\r\n  });\r\n  \r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.GameScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n\r\n      var sidebarGridX = phina.util.Grid(SIDEBAR_WIDTH, 16);\r\n      var sidebarGridY = phina.util.Grid(SIDEBAR_HEIGHT, 16);\r\n\r\n      this.fromJSON({\r\n        children: {\r\n          leftLayer: {\r\n            className: \"ps.gamescene.SideBarLayer\",\r\n            x: 0,\r\n            y: 0,\r\n            children: {\r\n\r\n              totalScoreLabel: {\r\n                className: \"ps.HudLabel\",\r\n                arguments: {\r\n                  text: \"TOTAL SCORE\",\r\n                },\r\n                x: sidebarGridX.span(1),\r\n                y: sidebarGridY.span(1),\r\n              },\r\n              totalScore: {\r\n                className: \"ps.ScoreLabel\",\r\n                x: sidebarGridX.span(15),\r\n                y: sidebarGridY.span(2),\r\n              },\r\n\r\n              stageScoreLabel: {\r\n                className: \"ps.HudLabel\",\r\n                arguments: {\r\n                  text: \"STAGE SCORE\",\r\n                },\r\n                x: sidebarGridX.span(1),\r\n                y: sidebarGridY.span(3),\r\n              },\r\n              stageScore: {\r\n                className: \"ps.ScoreLabel\",\r\n                x: sidebarGridX.span(15),\r\n                y: sidebarGridY.span(4),\r\n              },\r\n\r\n              psycheLabel: {\r\n                className: \"ps.HudLabel\",\r\n                arguments: {\r\n                  text: \"PSYCHE\",\r\n                },\r\n                x: sidebarGridX.span(1),\r\n                y: sidebarGridY.span(6),\r\n              },\r\n              psyche: {\r\n                className: \"ps.ScoreLabel\",\r\n                x: sidebarGridX.span(15),\r\n                y: sidebarGridY.span(7),\r\n              },\r\n\r\n            }\r\n          },\r\n          rightLayer: {\r\n            className: \"ps.gamescene.SideBarLayer\",\r\n            x: SCREEN_WIDTH - SIDEBAR_WIDTH,\r\n            y: 0,\r\n            children: {\r\n              gameTitleLabel: {\r\n                className: \"ps.HudLabel\",\r\n                arguments: {\r\n                  text: \"Phina Shooter\",\r\n                  align: \"center\",\r\n                  fontFamily: \"title\",\r\n                  fontSize: FONT_SIZE_L,\r\n                  fill: \"hsl(50, 80%, 80%)\",\r\n                  stroke: \"hsl(0, 100%, 50%)\",\r\n                },\r\n                x: sidebarGridX.center(),\r\n                y: sidebarGridY.span(15),\r\n              },\r\n            }\r\n          },\r\n          mainLayer: {\r\n            className: \"ps.gamescene.MainLayer\",\r\n            x: SIDEBAR_WIDTH,\r\n            y: 0,\r\n          },\r\n        }\r\n      });\r\n    },\r\n    \r\n    update: function() {\r\n    }\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.LoadingScene\", {\r\n    superClass: \"phina.game.LoadingScene\",\r\n\r\n    init: function(options) {\r\n      this.superInit(options);\r\n    }\r\n\r\n  });\r\n});\r\n"],"sourceRoot":"/source/"}