{"version":3,"sources":["main.js","application.js","assets.js","danmaku.js","danmaku_stage0.js","danmaku_stage1.js","danmaku_stage2.js","danmaku_stage3.js","danmaku_stage4.js","bombdisplay.js","bullet.js","enemy_stage0.js","enemy.js","enemylooper.js","enemyunit.js","backgroundlayer.js","bulletlayer.js","effectlayer.js","mainlayer.js","shotlayer.js","sidebarlayer.js","hudlabel.js","itemdisplay.js","outlinedsprite.js","player.js","scorelabel.js","shot.js","titlelogolabel.js","zankidisplay.js","bulletconfig.js","gamedata.js","background.js","endingscene.js","gameoverscene.js","gamescene.js","generateassetscene.js","loadingscene.js","nameentryscene.js","resultscene.js","settingscene.js","titlescene.js","tutorialscene.js","arcademodesequence.js","mainsequence.js","rankingscene.js","background0.js","background1.js","background2.js","stage.js","stage0.js","color.js","framebasedtweener.js","soundmanager.js","textureedit.js","timer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvnSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACprvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChnvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvtvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"phina-shooter.js","sourcesContent":["var DEBUG = true;\r\n\r\nvar SCREEN_WIDTH = 480;\r\nvar SCREEN_HEIGHT = 320;\r\n// var SCREEN_WIDTH = 720;\r\n// var SCREEN_HEIGHT = 480;\r\n// var SCREEN_WIDTH = 960;\r\n// var SCREEN_HEIGHT = 640;\r\n\r\nvar GAMEAREA_WIDTH = SCREEN_HEIGHT * 0.7;\r\nvar GAMEAREA_HEIGHT = SCREEN_HEIGHT;\r\n\r\nvar SIDEBAR_WIDTH = (SCREEN_WIDTH - GAMEAREA_WIDTH) * 0.5;\r\nvar SIDEBAR_HEIGHT = SCREEN_HEIGHT;\r\n\r\nvar FONT_SIZE_XL = ~~(0.07 * SCREEN_WIDTH);\r\nvar FONT_SIZE_L = ~~(0.03 * SCREEN_WIDTH);\r\nvar FONT_SIZE_M = ~~(0.02 * SCREEN_WIDTH);\r\nvar FONT_SIZE_S = ~~(0.01 * SCREEN_WIDTH);\r\n\r\nphina.input.Keyboard.KEY_CODE[\"shot\"] = phina.input.Keyboard.KEY_CODE[\"z\"];\r\nphina.input.Keyboard.KEY_CODE[\"bomb\"] = phina.input.Keyboard.KEY_CODE[\"x\"];\r\nphina.input.Keyboard.KEY_CODE[\"start\"] = phina.input.Keyboard.KEY_CODE[\"space\"];\r\n\r\nphina.input.Gamepad.BUTTON_CODE[\"shot\"] = phina.input.Gamepad.BUTTON_CODE[\"x\"];\r\nphina.input.Gamepad.BUTTON_CODE[\"bomb\"] = phina.input.Gamepad.BUTTON_CODE[\"a\"];\r\n\r\nphina.main(function() {\r\n  ps.Color.initialize();\r\n\r\n  var app = ps.Application();\r\n  app.run();\r\n\r\n  if (DEBUG) app.enableStats();\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Application\", {\r\n    superClass: \"phina.display.CanvasApp\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        query: \"#app\",\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n      });\r\n      this.fps = 60;\r\n      this.canvas.context.imageSmoothingEnabled = true;\r\n      this.domElement.style.imageRendering = \"pixelated\";\r\n\r\n      this.replaceScene(ps.MainSequence());\r\n\r\n      this.gamepads = phina.input.GamepadManager();\r\n    },\r\n\r\n    update: function() {\r\n      // this.mouse.update();\r\n      // this.touch.update();\r\n      // this.touchList.update();\r\n      this.keyboard.update();\r\n      this.gamepads.update();\r\n      \r\n      ps.SoundManager.update(this);\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Assets\", {\r\n    _static: {\r\n      get: function(name) {\r\n        switch (name) {\r\n\r\n          case \"common\":\r\n            return {\r\n              image: {\r\n                player: \"asset/player.png\",\r\n                bullet: \"asset/bullets.png\",\r\n                bomb: \"asset/bomb.png\",\r\n\r\n                zanki: \"asset/zankiIcon.png\",\r\n                bombIcon: \"asset/bombIcon.png\",\r\n              },\r\n\r\n              font: {\r\n                title: \"asset/Black_Ops_One/BlackOpsOne-Regular.ttf\",\r\n                main: \"asset/Press_Start_2P/PressStart2P-Regular.ttf\",\r\n                // mono: \"asset/VT323/VT323-Regular.ttf\",\r\n                mono: \"asset/Share_Tech_Mono/ShareTechMono-Regular.ttf\",\r\n              },\r\n              \r\n              sound: {\r\n                shot: \"asset/sen_ge_kijuu01.mp3\"\r\n              },\r\n            };\r\n\r\n          case \"stage0\":\r\n            return {\r\n              image: {\r\n                enemy_stage0: \"asset/enemy_stage0.png\",\r\n              },\r\n              sound: {\r\n                bgm: \"asset/ReBoot_FreeBGM.mp3\",\r\n              },\r\n            };\r\n\r\n          case \"stage1\":\r\n            return {\r\n              image: {\r\n                dummy: \"asset/zankiIcon.png\",\r\n              },\r\n            };\r\n\r\n          case \"stage2\":\r\n            return {\r\n              image: {\r\n                dummy: \"asset/zankiIcon.png\",\r\n              },\r\n            };\r\n\r\n          case \"stage3\":\r\n            return {\r\n              image: {\r\n                dummy: \"asset/zankiIcon.png\",\r\n              },\r\n            };\r\n\r\n          case \"stage4\":\r\n            return {\r\n              image: {\r\n                dummy: \"asset/zankiIcon.png\",\r\n              },\r\n            };\r\n\r\n        }\r\n      }\r\n    }\r\n  })\r\n});\r\n","phina.namespace(function() {\r\n\r\n  ps.danmaku = ps.danmaku || {};\r\n\r\n  var action = bulletml.dsl.action;\r\n  var actionRef = bulletml.dsl.actionRef;\r\n  var bullet = bulletml.dsl.bullet;\r\n  var bulletRef = bulletml.dsl.bulletRef;\r\n  var fire = bulletml.dsl.fire;\r\n  var fireRef = bulletml.dsl.fireRef;\r\n  var changeDirection = bulletml.dsl.changeDirection;\r\n  var changeSpeed = bulletml.dsl.changeSpeed;\r\n  var accel = bulletml.dsl.accel;\r\n  var wait = bulletml.dsl.wait;\r\n  var vanish = bulletml.dsl.vanish;\r\n  var repeat = bulletml.dsl.repeat;\r\n  var bindVar = bulletml.dsl.bindVar;\r\n  var notify = bulletml.dsl.notify;\r\n  var direction = bulletml.dsl.direction;\r\n  var speed = bulletml.dsl.speed;\r\n  var horizontal = bulletml.dsl.horizontal;\r\n  var vertical = bulletml.dsl.vertical;\r\n  var fireOption = bulletml.dsl.fireOption;\r\n  var offsetX = bulletml.dsl.offsetX;\r\n  var offsetY = bulletml.dsl.offsetY;\r\n  var autonomy = bulletml.dsl.autonomy;\r\n\r\n  var interval = function(v) {\r\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\r\n  };\r\n  var spd = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\r\n  };\r\n  var spdSeq = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\r\n  };\r\n\r\n  var R0 = bullet({\r\n    type: 4\r\n  });\r\n  var R1 = bullet({\r\n    type: 5\r\n  });\r\n  var R2 = bullet({\r\n    type: 6\r\n  });\r\n  var R3 = bullet({\r\n    type: 7\r\n  });\r\n  var B4 = bullet({\r\n    type: 8\r\n  });\r\n  var B5 = bullet({\r\n    type: 9\r\n  });\r\n  var R4 = bullet({\r\n    type: 10\r\n  });\r\n  var R5 = bullet({\r\n    type: 11\r\n  });\r\n  var DM = bullet({\r\n    dummy: true\r\n  });\r\n\r\n  // ザコヘリ用\r\n  var basic = function(s, dir) {\r\n    return new bulletml.Root({\r\n      top: action([\r\n        interval(10),\r\n        repeat(Infinity, [\r\n          fire(DM, spd(s), direction(dir)),\r\n          repeat(\"$burst + 1\", [\r\n            fire(R2, spdSeq(0.15), direction(0, \"sequence\")),\r\n          ]),\r\n          interval(50),\r\n        ]),\r\n      ]),\r\n    });\r\n  };\r\n  ps.danmaku.basic = basic(1, 0);\r\n  ps.danmaku.basicR1 = basic(1, -5);\r\n  ps.danmaku.basicL1 = basic(1, +5);\r\n  ps.danmaku.basicR2 = basic(1, -15);\r\n  ps.danmaku.basicL2 = basic(1, +15);\r\n  ps.danmaku.basicF = basic(1.2, 0);\r\n  ps.danmaku.basicFR1 = basic(1.2, -5);\r\n  ps.danmaku.basicFL1 = basic(1.2, +5);\r\n  ps.danmaku.basicFR2 = basic(1.2, -15);\r\n  ps.danmaku.basicFL2 = basic(1.2, +15);\r\n\r\n  // ザコヘリ3way\r\n  var basic3way = function(dir) {\r\n    return new bulletml.Root({\r\n      top: action([\r\n        interval(10),\r\n        repeat(Infinity, [\r\n          fire(DM, spd(1), direction(dir - 7)),\r\n          repeat(\"$burst + 1\", [\r\n            fire(R2, spdSeq(0), direction(0, \"sequence\")),\r\n            fire(R2, spdSeq(0), direction(7, \"sequence\")),\r\n            fire(R2, spdSeq(0), direction(7, \"sequence\")),\r\n            fire(DM, spdSeq(0.05), direction(-14, \"sequence\")),\r\n          ]),\r\n          interval(50),\r\n        ]),\r\n      ]),\r\n    });\r\n  };\r\n  ps.danmaku.basic3way = basic3way(0);\r\n  ps.danmaku.basic3wayR1 = basic3way(-5);\r\n  ps.danmaku.basic3wayL1 = basic3way(+5);\r\n  ps.danmaku.basic3wayR2 = basic3way(-15);\r\n  ps.danmaku.basic3wayL2 = basic3way(+15);\r\n\r\n  // ザコ戦車用\r\n  var forward = function(s, dir) {\r\n    return new bulletml.Root({\r\n      top: action([\r\n        interval(10),\r\n        repeat(Infinity, [\r\n          repeat(3, [\r\n            fire(DM, spd(s), direction(dir, \"relative\")),\r\n            repeat(\"$burst + 1\", [\r\n              fire(R2, spdSeq(0.15), direction(0, \"sequence\")),\r\n            ]),\r\n            interval(10),\r\n          ]),\r\n          interval(50),\r\n        ]),\r\n      ]),\r\n    });\r\n  };\r\n  ps.danmaku.forward = forward(1, 0);\r\n  ps.danmaku.forwardR1 = forward(1, -5);\r\n  ps.danmaku.forwardL1 = forward(1, +5);\r\n  ps.danmaku.forwardR2 = forward(1, -15);\r\n  ps.danmaku.forwardL2 = forward(1, +15);\r\n  ps.danmaku.forwardF = forward(1.2, 0);\r\n  ps.danmaku.forwardFR1 = forward(1.2, -5);\r\n  ps.danmaku.forwardFL1 = forward(1.2, +5);\r\n  ps.danmaku.forwardFR2 = forward(1.2, -15);\r\n  ps.danmaku.forwardFL2 = forward(1.2, +15);\r\n\r\n  // ザコ戦車3way\r\n  var forward3way = function(s, dir) {\r\n    return new bulletml.Root({\r\n      top: action([\r\n        interval(10),\r\n        repeat(Infinity, [\r\n          repeat(3, [\r\n            fire(DM, spd(s), direction(dir + \"-5\", \"relative\")),\r\n            repeat(\"$burst + 1\", [\r\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\r\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\r\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\r\n              fire(DM, spdSeq(0.15), direction(-15, \"sequence\")),\r\n            ]),\r\n            interval(10),\r\n          ]),\r\n          interval(50),\r\n        ]),\r\n      ]),\r\n    });\r\n  };\r\n  ps.danmaku.forward3way = forward3way(1, 0);\r\n  ps.danmaku.forward3wayR1 = forward3way(1, -5);\r\n  ps.danmaku.forward3wayL1 = forward3way(1, +5);\r\n  ps.danmaku.forward3wayR2 = forward3way(1, -15);\r\n  ps.danmaku.forward3wayL2 = forward3way(1, +15);\r\n  ps.danmaku.forward3wayF = forward3way(1.2, 0);\r\n  ps.danmaku.forward3wayFR1 = forward3way(1.2, -5);\r\n  ps.danmaku.forward3wayFL1 = forward3way(1.2, +5);\r\n  ps.danmaku.forward3wayFR2 = forward3way(1.2, -15);\r\n  ps.danmaku.forward3wayFL2 = forward3way(1.2, +15);\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  ps.danmaku = ps.danmaku || {};\r\n\r\n  var action = bulletml.dsl.action;\r\n  var actionRef = bulletml.dsl.actionRef;\r\n  var bullet = bulletml.dsl.bullet;\r\n  var bulletRef = bulletml.dsl.bulletRef;\r\n  var fire = bulletml.dsl.fire;\r\n  var fireRef = bulletml.dsl.fireRef;\r\n  var changeDirection = bulletml.dsl.changeDirection;\r\n  var changeSpeed = bulletml.dsl.changeSpeed;\r\n  var accel = bulletml.dsl.accel;\r\n  var wait = bulletml.dsl.wait;\r\n  var vanish = bulletml.dsl.vanish;\r\n  var repeat = bulletml.dsl.repeat;\r\n  var bindVar = bulletml.dsl.bindVar;\r\n  var notify = bulletml.dsl.notify;\r\n  var direction = bulletml.dsl.direction;\r\n  var speed = bulletml.dsl.speed;\r\n  var horizontal = bulletml.dsl.horizontal;\r\n  var vertical = bulletml.dsl.vertical;\r\n  var fireOption = bulletml.dsl.fireOption;\r\n  var offsetX = bulletml.dsl.offsetX;\r\n  var offsetY = bulletml.dsl.offsetY;\r\n  var autonomy = bulletml.dsl.autonomy;\r\n\r\n  var interval = function(v) {\r\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\r\n  };\r\n  var spd = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\r\n  };\r\n  var spdSeq = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\r\n  };\r\n\r\n  var R0 = function(action) {\r\n    return bullet(action, {\r\n      type: 4\r\n    });\r\n  };\r\n  var R1 = function(action) {\r\n    return bullet(action, {\r\n      type: 5\r\n    });\r\n  };\r\n  var R2 = function(action) {\r\n    return bullet(action, {\r\n      type: 6\r\n    });\r\n  };\r\n  var R3 = function(action) {\r\n    return bullet(action, {\r\n      type: 7\r\n    });\r\n  };\r\n  var B4 = function(action) {\r\n    return bullet(action, {\r\n      type: 8\r\n    });\r\n  };\r\n  var B5 = function(action) {\r\n    return bullet(action, {\r\n      type: 9\r\n    });\r\n  };\r\n  var R4 = function(action) {\r\n    return bullet(action, {\r\n      type: 10\r\n    });\r\n  };\r\n  var R5 = function(action) {\r\n    return bullet(action, {\r\n      type: 11\r\n    });\r\n  };\r\n  var DM = function(action) {\r\n    return bullet(action, {\r\n      dummy: true\r\n    });\r\n  };\r\n\r\n  // 黒川\r\n  ps.danmaku.kurokawa1 = new bulletml.Root({\r\n    top: action([\r\n      interval(20),\r\n      repeat(Infinity, [\r\n        repeat(3, [\r\n          fire(DM, spd(1.2)),\r\n          repeat(3, [\r\n            fire(R0, spdSeq(0), direction(0, \"sequence\")),\r\n            wait(6),\r\n          ]),\r\n          interval(12),\r\n        ]),\r\n        interval(50),\r\n      ]),\r\n    ]),\r\n  });\r\n\r\n  // 秋元\r\n  ps.danmaku.akimoto1 = new bulletml.Root({\r\n    top0: action([\r\n      repeat(Infinity, [\r\n        interval(20),\r\n        fire(R2, spd(1.0), direction(-30)),\r\n        repeat(8, [\r\n          fire(R2, spdSeq(0), direction(60 / 8, \"sequence\")),\r\n        ]),\r\n        interval(80),\r\n      ]),\r\n    ]),\r\n    top1: action([\r\n      repeat(Infinity, [\r\n        interval(50),\r\n        fire(R1, spd(1.2), direction(-10)),\r\n        repeat(6, [\r\n          fire(R1, spdSeq(0), direction(20 / 6, \"sequence\")),\r\n        ]),\r\n        interval(50),\r\n      ]),\r\n    ]),\r\n  });\r\n\r\n  // 黄瀬\r\n  ps.danmaku.kise1 = new bulletml.Root({\r\n    top: action([\r\n      interval(20),\r\n      repeat(Infinity, [\r\n        fire(DM, spd(0.6)),\r\n        repeat(5, [\r\n          repeat(9, [\r\n            fire(R4, spdSeq(0.02), direction(360 / (9 - 1), \"sequence\")),\r\n          ]),\r\n          wait(4),\r\n          fire(DM, direction(7, \"sequence\"), spd(0.6)),\r\n        ]),\r\n        interval(50),\r\n      ]),\r\n    ]),\r\n  });\r\n\r\n  // 雪城1\r\n  ps.danmaku.yukishiro1 = new bulletml.Root({\r\n    top: action([\r\n      wait(120),\r\n      fire(DM, spd(0.6)),\r\n      repeat(3, [\r\n        bindVar(\"dd\", \"$loop.index\"),\r\n        fire(R4, spdSeq(0.08), direction(-60)),\r\n        repeat(8, [\r\n          repeat(8, [\r\n            fire(R4, spdSeq(0), direction(120 / 8, \"sequence\")),\r\n          ]),\r\n          wait(5),\r\n          fire(R4, spdSeq(0), direction(\"-120 + $dd * 1.4\", \"sequence\")),\r\n        ]),\r\n        wait(30),\r\n        fire(R4, spdSeq(0.08), direction(-60)),\r\n        repeat(8, [\r\n          repeat(8, [\r\n            fire(R4, spdSeq(0), direction(120 / 8, \"sequence\")),\r\n          ]),\r\n          wait(5),\r\n          fire(R4, spdSeq(0), direction(\"-120 - ($dd + 1) * 1.4\", \"sequence\")),\r\n        ]),\r\n        wait(30),\r\n      ]),\r\n      notify(\"end\", {\r\n        next: \"yukishiro2\"\r\n      }),\r\n    ]),\r\n  });\r\n  // 雪城2\r\n  ps.danmaku.yukishiro2 = new bulletml.Root({\r\n    top: action([\r\n      interval(60),\r\n      repeat(10, [\r\n        fire(DM(actionRef(\"b\")), speed(10), direction(-90, \"absolute\")),\r\n        fire(DM(actionRef(\"b\")), speed(10), direction(+90, \"absolute\")),\r\n        interval(30),\r\n      ]),\r\n      notify(\"end\", {\r\n        next: \"yukishiro3\"\r\n      }),\r\n    ]),\r\n    b: action([\r\n      wait(2),\r\n      fire(R2, spd(0.9), direction(-60)),\r\n      repeat(10, [\r\n        fire(R2, spdSeq(0), direction(120 / 10, \"sequence\")),\r\n      ]),\r\n    ]),\r\n  });\r\n  // 雪城3\r\n  ps.danmaku.yukishiro3 = new bulletml.Root({\r\n    top: action([\r\n      interval(60),\r\n      repeat(6, [\r\n        bindVar(\"p\", \"$loop.index\"),\r\n        repeat(10, [\r\n          fire(DM(actionRef(\"b\", 180 - 10, \"-($loop.index + $p * 6)\")), speed(10), direction(-90, \"absolute\")),\r\n          fire(DM(actionRef(\"b\", 180 + 10, \"+($loop.index + $p * 6)\")), speed(10), direction(+90, \"absolute\")),\r\n          interval(8),\r\n        ]),\r\n        interval(25),\r\n      ]),\r\n      notify(\"end\", {\r\n        next: \"yukishiro1\"\r\n      }),\r\n    ]),\r\n    b: action([\r\n      wait(2),\r\n      fire(R4, spd(0.7), direction(\"$1 + Math.sin($2 * 0.35) * 30 - 10\", \"absolute\")),\r\n      fire(R5, spdSeq(0), direction(10, \"sequence\")),\r\n      fire(R4, spdSeq(0), direction(10, \"sequence\")),\r\n    ]),\r\n  });\r\n\r\n  // 美墨1-1\r\n  ps.danmaku.misumi11 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi12\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨1-2\r\n  ps.danmaku.misumi12 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi13\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨1-3\r\n  ps.danmaku.misumi13 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi11\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨2-1\r\n  ps.danmaku.misumi21 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi22\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨2-2\r\n  ps.danmaku.misumi22 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi23\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨2-3\r\n  ps.danmaku.misumi23 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi21\",\r\n      }),\r\n    ]),\r\n  });\r\n  // 美墨3-1\r\n  ps.danmaku.misumi31 = new bulletml.Root({\r\n    top: action([\r\n      notify(\"end\", {\r\n        next: \"misumi31\",\r\n      }),\r\n    ]),\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  \r\n  ps.danmaku = ps.danmaku || {};\r\n\r\n  var action = bulletml.dsl.action;\r\n  var actionRef = bulletml.dsl.actionRef;\r\n  var bullet = bulletml.dsl.bullet;\r\n  var bulletRef = bulletml.dsl.bulletRef;\r\n  var fire = bulletml.dsl.fire;\r\n  var fireRef = bulletml.dsl.fireRef;\r\n  var changeDirection = bulletml.dsl.changeDirection;\r\n  var changeSpeed = bulletml.dsl.changeSpeed;\r\n  var accel = bulletml.dsl.accel;\r\n  var wait = bulletml.dsl.wait;\r\n  var vanish = bulletml.dsl.vanish;\r\n  var repeat = bulletml.dsl.repeat;\r\n  var bindVar = bulletml.dsl.bindVar;\r\n  var notify = bulletml.dsl.notify;\r\n  var direction = bulletml.dsl.direction;\r\n  var speed = bulletml.dsl.speed;\r\n  var horizontal = bulletml.dsl.horizontal;\r\n  var vertical = bulletml.dsl.vertical;\r\n  var fireOption = bulletml.dsl.fireOption;\r\n  var offsetX = bulletml.dsl.offsetX;\r\n  var offsetY = bulletml.dsl.offsetY;\r\n  var autonomy = bulletml.dsl.autonomy;\r\n\r\n  var interval = function(v) {\r\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\r\n  };\r\n  var spd = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\r\n  };\r\n  var spdSeq = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\r\n  };\r\n\r\n  var R0 = bullet({\r\n    type: 4\r\n  });\r\n  var R1 = bullet({\r\n    type: 5\r\n  });\r\n  var R2 = bullet({\r\n    type: 6\r\n  });\r\n  var R3 = bullet({\r\n    type: 7\r\n  });\r\n  var B4 = bullet({\r\n    type: 8\r\n  });\r\n  var B5 = bullet({\r\n    type: 9\r\n  });\r\n  var R4 = bullet({\r\n    type: 10\r\n  });\r\n  var R5 = bullet({\r\n    type: 11\r\n  });\r\n  var DM = bullet({\r\n    dummy: true\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  \r\n  ps.danmaku = ps.danmaku || {};\r\n\r\n  var action = bulletml.dsl.action;\r\n  var actionRef = bulletml.dsl.actionRef;\r\n  var bullet = bulletml.dsl.bullet;\r\n  var bulletRef = bulletml.dsl.bulletRef;\r\n  var fire = bulletml.dsl.fire;\r\n  var fireRef = bulletml.dsl.fireRef;\r\n  var changeDirection = bulletml.dsl.changeDirection;\r\n  var changeSpeed = bulletml.dsl.changeSpeed;\r\n  var accel = bulletml.dsl.accel;\r\n  var wait = bulletml.dsl.wait;\r\n  var vanish = bulletml.dsl.vanish;\r\n  var repeat = bulletml.dsl.repeat;\r\n  var bindVar = bulletml.dsl.bindVar;\r\n  var notify = bulletml.dsl.notify;\r\n  var direction = bulletml.dsl.direction;\r\n  var speed = bulletml.dsl.speed;\r\n  var horizontal = bulletml.dsl.horizontal;\r\n  var vertical = bulletml.dsl.vertical;\r\n  var fireOption = bulletml.dsl.fireOption;\r\n  var offsetX = bulletml.dsl.offsetX;\r\n  var offsetY = bulletml.dsl.offsetY;\r\n  var autonomy = bulletml.dsl.autonomy;\r\n\r\n  var interval = function(v) {\r\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\r\n  };\r\n  var spd = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\r\n  };\r\n  var spdSeq = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\r\n  };\r\n\r\n  var R0 = bullet({\r\n    type: 4\r\n  });\r\n  var R1 = bullet({\r\n    type: 5\r\n  });\r\n  var R2 = bullet({\r\n    type: 6\r\n  });\r\n  var R3 = bullet({\r\n    type: 7\r\n  });\r\n  var B4 = bullet({\r\n    type: 8\r\n  });\r\n  var B5 = bullet({\r\n    type: 9\r\n  });\r\n  var R4 = bullet({\r\n    type: 10\r\n  });\r\n  var R5 = bullet({\r\n    type: 11\r\n  });\r\n  var DM = bullet({\r\n    dummy: true\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  \r\n  ps.danmaku = ps.danmaku || {};\r\n\r\n  var action = bulletml.dsl.action;\r\n  var actionRef = bulletml.dsl.actionRef;\r\n  var bullet = bulletml.dsl.bullet;\r\n  var bulletRef = bulletml.dsl.bulletRef;\r\n  var fire = bulletml.dsl.fire;\r\n  var fireRef = bulletml.dsl.fireRef;\r\n  var changeDirection = bulletml.dsl.changeDirection;\r\n  var changeSpeed = bulletml.dsl.changeSpeed;\r\n  var accel = bulletml.dsl.accel;\r\n  var wait = bulletml.dsl.wait;\r\n  var vanish = bulletml.dsl.vanish;\r\n  var repeat = bulletml.dsl.repeat;\r\n  var bindVar = bulletml.dsl.bindVar;\r\n  var notify = bulletml.dsl.notify;\r\n  var direction = bulletml.dsl.direction;\r\n  var speed = bulletml.dsl.speed;\r\n  var horizontal = bulletml.dsl.horizontal;\r\n  var vertical = bulletml.dsl.vertical;\r\n  var fireOption = bulletml.dsl.fireOption;\r\n  var offsetX = bulletml.dsl.offsetX;\r\n  var offsetY = bulletml.dsl.offsetY;\r\n  var autonomy = bulletml.dsl.autonomy;\r\n\r\n  var interval = function(v) {\r\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\r\n  };\r\n  var spd = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\r\n  };\r\n  var spdSeq = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\r\n  };\r\n\r\n  var R0 = bullet({\r\n    type: 4\r\n  });\r\n  var R1 = bullet({\r\n    type: 5\r\n  });\r\n  var R2 = bullet({\r\n    type: 6\r\n  });\r\n  var R3 = bullet({\r\n    type: 7\r\n  });\r\n  var B4 = bullet({\r\n    type: 8\r\n  });\r\n  var B5 = bullet({\r\n    type: 9\r\n  });\r\n  var R4 = bullet({\r\n    type: 10\r\n  });\r\n  var R5 = bullet({\r\n    type: 11\r\n  });\r\n  var DM = bullet({\r\n    dummy: true\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  \r\n  ps.danmaku = ps.danmaku || {};\r\n\r\n  var action = bulletml.dsl.action;\r\n  var actionRef = bulletml.dsl.actionRef;\r\n  var bullet = bulletml.dsl.bullet;\r\n  var bulletRef = bulletml.dsl.bulletRef;\r\n  var fire = bulletml.dsl.fire;\r\n  var fireRef = bulletml.dsl.fireRef;\r\n  var changeDirection = bulletml.dsl.changeDirection;\r\n  var changeSpeed = bulletml.dsl.changeSpeed;\r\n  var accel = bulletml.dsl.accel;\r\n  var wait = bulletml.dsl.wait;\r\n  var vanish = bulletml.dsl.vanish;\r\n  var repeat = bulletml.dsl.repeat;\r\n  var bindVar = bulletml.dsl.bindVar;\r\n  var notify = bulletml.dsl.notify;\r\n  var direction = bulletml.dsl.direction;\r\n  var speed = bulletml.dsl.speed;\r\n  var horizontal = bulletml.dsl.horizontal;\r\n  var vertical = bulletml.dsl.vertical;\r\n  var fireOption = bulletml.dsl.fireOption;\r\n  var offsetX = bulletml.dsl.offsetX;\r\n  var offsetY = bulletml.dsl.offsetY;\r\n  var autonomy = bulletml.dsl.autonomy;\r\n\r\n  var interval = function(v) {\r\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\r\n  };\r\n  var spd = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\r\n  };\r\n  var spdSeq = function(v) {\r\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\r\n  };\r\n\r\n  var R0 = bullet({\r\n    type: 4\r\n  });\r\n  var R1 = bullet({\r\n    type: 5\r\n  });\r\n  var R2 = bullet({\r\n    type: 6\r\n  });\r\n  var R3 = bullet({\r\n    type: 7\r\n  });\r\n  var B4 = bullet({\r\n    type: 8\r\n  });\r\n  var B5 = bullet({\r\n    type: 9\r\n  });\r\n  var R4 = bullet({\r\n    type: 10\r\n  });\r\n  var R5 = bullet({\r\n    type: 11\r\n  });\r\n  var DM = bullet({\r\n    dummy: true\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.BombDisplay\", {\r\n    superClass: \"ps.ItemDisplay\",\r\n\r\n    init: function(initialValue) {\r\n      this.superInit(\"bombIcon\", initialValue);\r\n    },\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Bullet\", {\r\n    superClass: \"ps.OutlinedSprite\",\r\n\r\n    runner: null,\r\n    active: false,\r\n\r\n    init: function() {\r\n      this.superInit(\"bullet\", 24, 24);\r\n      this.age = 0;\r\n      this.boundingType = \"circle\";\r\n      this.radius = 2;\r\n    },\r\n\r\n    onremoved: function() {\r\n      this.bulletLayer.pool.push(this);\r\n    },\r\n\r\n    update: function(app) {\r\n      var runner = this.runner;\r\n      if (runner) {\r\n        var bx = this.x;\r\n        var by = this.y;\r\n        runner.x = bx;\r\n        runner.y = by;\r\n        runner.update();\r\n        var dx = runner.x - bx;\r\n        var dy = runner.y - by;\r\n\r\n        this.x += dx * ps.Bullet.globalSpeedRate;\r\n        this.y += dy * ps.Bullet.globalSpeedRate;\r\n\r\n        if (this.x < -12 || GAMEAREA_WIDTH + 12 < this.x || this.y < -12 || GAMEAREA_HEIGHT + 12 < this.y) {\r\n          this.remove();\r\n          return;\r\n        }\r\n\r\n        this.rotation = Math.atan2(this.y - by, this.x - bx) * 180 / Math.PI;\r\n\r\n        this.age += 1;\r\n        \r\n        if (!this.active) {\r\n          this.frameIndex += 1;\r\n          if (this.frameIndex <= 0 || 44 < this.frameIndex) {\r\n            this.remove();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    spawn: function(runner, spec) {\r\n      this.x = runner.x;\r\n      this.y = runner.y;\r\n      this.runner = runner;\r\n      this.frameIndex = spec.type || 0;\r\n      this.visible = !spec.dummy;\r\n      this.active = true;\r\n      this.outline.visible = true;\r\n      return this;\r\n    },\r\n    \r\n    erase: function() {\r\n      if (!this.visible) {\r\n        this.remove();\r\n      }\r\n      \r\n      this.active = false;\r\n      this.frameIndex = 12;\r\n      this.outline.visible = false;\r\n      this.runner.fireable = false;\r\n      return this;\r\n    },\r\n\r\n    hitTest: function(_x, _y) {\r\n      if (!this.visible || !this.active || !this.parent) return false;\r\n\r\n      var x = _x - this.x;\r\n      var y = _y - this.y;\r\n\r\n      if ((x * x + y * y) < (this.radius * this.radius)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    _static: {\r\n      globalSpeedRate: 1.0,\r\n    },\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Kujo1\", {\r\n    superClass: \"ps.Enemy\",\r\n    init: function(params) {\r\n      this.superInit(\"enemy_stage0\", 24, 24, params.$safe({\r\n        boundingType: \"circle\",\r\n        radius: 12,\r\n        danmakuName: \"basic\",\r\n        hp: 2,\r\n      }));\r\n      this.setSrcRect(32, 0, 24, 24);\r\n\r\n      var propeler = ps.OutlinedSprite(\"enemy_stage0\", 32, 32)\r\n        .addChildTo(this)\r\n        .on(\"enterframe\", function() {\r\n          this.rotation += 20;\r\n        })\r\n        .setSrcRect(0, 128, 32, 32);\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .wait(params.wait)\r\n        .call(function() {\r\n          self.activate();\r\n          self.startAttack();\r\n\r\n          console.log(\"activate\");\r\n        })\r\n        .by({\r\n          y: GAMEAREA_HEIGHT * 1.0\r\n        }, 80, \"easeOutQuad\")\r\n        .wait(120)\r\n        .to({\r\n          y: params.y\r\n        }, 80, \"easeInQuad\");\r\n    },\r\n\r\n    onenterframe: function(e) {\r\n      var app = e.app;\r\n      var player = app.currentScene.player;\r\n      this.rotation = Math.atan2(player.y - this.y, player.x - this.x) * Math.RAD_TO_DEG;\r\n    },\r\n\r\n    onkilled: function() {\r\n      this.remove();\r\n    },\r\n  });\r\n\r\n  phina.define(\"ps.Kiryu1\", {\r\n    superClass: \"ps.Enemy\",\r\n    init: function(params) {\r\n      this.superInit(\"enemy_stage0\", 24, 24, params.$safe({\r\n        boundingType: \"circle\",\r\n        radius: 12,\r\n        danmakuName: \"basic\",\r\n        hp: 2,\r\n      }));\r\n      this.setSrcRect(0, 0, 24, 24);\r\n\r\n      this.move = phina.geom.Vector2(0, 1);\r\n\r\n      var propeler = ps.OutlinedSprite(\"enemy_stage0\", 32, 32)\r\n        .addChildTo(this)\r\n        .on(\"enterframe\", function() {\r\n          this.rotation += 20;\r\n        })\r\n        .setSrcRect(0, 128, 32, 32);\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .wait(params.wait)\r\n        .call(function() {\r\n          self.activate();\r\n          self.startAttack();\r\n        });\r\n    },\r\n\r\n    onenterframe: function(e) {\r\n      var app = e.app;\r\n      var player = app.currentScene.player;\r\n      this.rotation = Math.atan2(player.y - this.y, player.x - this.x) * Math.RAD_TO_DEG;\r\n      if (this.y < player.y) {\r\n        var delta = phina.geom.Vector2(player.x - this.x, player.y - this.y).normalize().mul(0.3);\r\n        this.move.add(delta).normalize().mul(3);\r\n      }\r\n      this.position.add(this.move);\r\n    },\r\n\r\n    onkilled: function() {\r\n      this.remove();\r\n    },\r\n  });\r\n\r\n  phina.define(\"ps.Kise1\", {\r\n    superClass: \"ps.Enemy\",\r\n    init: function(params) {\r\n      this.superInit(\"enemy_stage0\", 32, 32, params.$safe({\r\n        boundingType: \"circle\",\r\n        radius: 16,\r\n        danmakuName: \"kise1\",\r\n        hp: 10,\r\n      }));\r\n      this.setSrcRect(0, 32, 32, 32);\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .wait(params.wait)\r\n        .call(function() {\r\n          self.activate();\r\n          self.startAttack();\r\n        });\r\n    },\r\n\r\n    onenterframe: function(e) {\r\n      this.y += 0.25;\r\n    },\r\n\r\n    onkilled: function() {\r\n      this.remove();\r\n    },\r\n  });\r\n\r\n  phina.define(\"ps.Natsuki1\", {\r\n    superClass: \"ps.Enemy\",\r\n    init: function(params) {\r\n      this.superInit(\"enemy_stage0\", 32, 32, params.$safe({\r\n        boundingType: \"circle\",\r\n        radius: 16,\r\n        danmakuName: \"forward\",\r\n        hp: 2,\r\n      }));\r\n      this.setSrcRect(32, 32, 32, 32);\r\n\r\n      this.direction = params.direction * Math.DEG_TO_RAD;\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .wait(params.wait)\r\n        .call(function() {\r\n          self.activate();\r\n          self.startAttack();\r\n        });\r\n    },\r\n\r\n    onenterframe: function(e) {\r\n      var app = e.app;\r\n      this.x += Math.cos(this.direction) * 0.75;\r\n      this.y += Math.sin(this.direction) * 0.75;\r\n      this.rotation = this.direction * Math.RAD_TO_DEG;\r\n\r\n      var player = app.currentScene.player;\r\n      var t = Math.atan2(player.y - this.y, player.x - this.x) + Math.PI * 2;\r\n      if (this.runner) this.runner.direction = ~~((t + U225) / U45) * U45;\r\n    },\r\n\r\n    onkilled: function() {\r\n      this.remove();\r\n    },\r\n  });\r\n\r\n  phina.define(\"ps.Kurokawa1\", {\r\n    superClass: \"ps.Enemy\",\r\n    init: function(params) {\r\n      this.superInit(\"enemy_stage0\", 64, 64, params.$safe({\r\n        boundingType: \"circle\",\r\n        radius: 30,\r\n        danmakuName: \"kurokawa1\",\r\n        hp: 30,\r\n      }));\r\n      this.setSrcRect(64, 0, 64, 64);\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .wait(params.wait)\r\n        .call(function() {\r\n          self.activate();\r\n          self.startAttack();\r\n        })\r\n        .by({\r\n          y: GAMEAREA_HEIGHT * 0.3\r\n        }, 40, \"easeOutQuad\");\r\n    },\r\n\r\n    onenterframe: function(e) {\r\n      this.y += 0.5;\r\n    },\r\n\r\n    onkilled: function() {\r\n      this.remove();\r\n    },\r\n  });\r\n\r\n  phina.define(\"ps.Akimoto1\", {\r\n    superClass: \"ps.Enemy\",\r\n    init: function(params) {\r\n      this.superInit(\"enemy_stage0\", 128, 64, params.$safe({\r\n        boundingType: \"rect\",\r\n        boundingWidth: 90,\r\n        boundingHeight: 30,\r\n        danmakuName: \"akimoto1\",\r\n        hp: 60,\r\n      }));\r\n      this.setSrcRect(0, 64, 128, 64);\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .wait(params.wait)\r\n        .call(function() {\r\n          self.activate();\r\n          self.startAttack();\r\n        })\r\n        .by({\r\n          y: GAMEAREA_HEIGHT * 0.3\r\n        }, 40, \"easeOutQuad\");\r\n    },\r\n\r\n    onenterframe: function(e) {\r\n      this.y += 0.4;\r\n    },\r\n\r\n    onkilled: function() {\r\n      this.remove();\r\n    },\r\n  });\r\n\r\n  phina.define(\"ps.Yukishiro1\", {\r\n    superClass: \"ps.Enemy\",\r\n    init: function(params) {\r\n      this.superInit(\"enemy_stage0\", 192, 96, params.$safe({\r\n        boundingType: \"rect\",\r\n        boundingWidth: 190,\r\n        boundingHeight: 60,\r\n        danmakuName: \"yukishiro1\",\r\n        // hp: 300,\r\n        hp: 3,\r\n        eraseBullet: true,\r\n      }));\r\n      this.setSrcRect(128, 0, 192, 96);\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .wait(params.wait)\r\n        .call(function() {\r\n          self.activate();\r\n          self.startAttack();\r\n        })\r\n        .to({\r\n          y: GAMEAREA_HEIGHT * 0.20\r\n        }, 60, \"easeOutQuad\")\r\n        .call(function() {\r\n          self.ftweener\r\n            .clear()\r\n            .to({\r\n              x: GAMEAREA_WIDTH * 0.6,\r\n              y: GAMEAREA_HEIGHT * 0.24,\r\n            }, 150, \"easeInOutQuad\")\r\n            .to({\r\n              x: GAMEAREA_WIDTH * 0.5,\r\n              y: GAMEAREA_HEIGHT * 0.28,\r\n            }, 150, \"easeInOutQuad\")\r\n            .to({\r\n              x: GAMEAREA_WIDTH * 0.4,\r\n              y: GAMEAREA_HEIGHT * 0.24,\r\n            }, 150, \"easeInOutQuad\")\r\n            .to({\r\n              x: GAMEAREA_WIDTH * 0.5,\r\n              y: GAMEAREA_HEIGHT * 0.20,\r\n            }, 150, \"easeInOutQuad\")\r\n            .setLoop(true);\r\n        });\r\n    },\r\n    onbulletend: function(e) {\r\n      this.startAttack(e.next);\r\n    },\r\n\r\n    onkilled: function() {\r\n      this.remove();\r\n    },\r\n  });\r\n\r\n  phina.define(\"ps.Misumi1\", {\r\n    superClass: \"ps.Enemy\",\r\n    init: function(params) {\r\n      var MAX_HP = 600;\r\n      this.superInit(\"enemy_stage0\", 192, 96, params.$safe({\r\n        boundingType: \"rect\",\r\n        boundingWidth: 190,\r\n        boundingHeight: 60,\r\n        danmakuName: \"misumi11\",\r\n        hp: MAX_HP,\r\n        eraseBullet: true,\r\n      }));\r\n      this.setSrcRect(128, 96, 192, 96);\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .wait(params.wait)\r\n        .call(function() {\r\n          self.activate();\r\n          self.startAttack();\r\n        })\r\n        .to({\r\n          y: GAMEAREA_HEIGHT * 0.20\r\n        }, 60, \"easeOutQuad\")\r\n        .call(function() {\r\n          self.ftweener\r\n            .clear()\r\n            .to({\r\n              x: GAMEAREA_WIDTH * 0.6,\r\n              y: GAMEAREA_HEIGHT * 0.24,\r\n            }, 150, \"easeInOutQuad\")\r\n            .to({\r\n              x: GAMEAREA_WIDTH * 0.5,\r\n              y: GAMEAREA_HEIGHT * 0.28,\r\n            }, 150, \"easeInOutQuad\")\r\n            .to({\r\n              x: GAMEAREA_WIDTH * 0.4,\r\n              y: GAMEAREA_HEIGHT * 0.24,\r\n            }, 150, \"easeInOutQuad\")\r\n            .to({\r\n              x: GAMEAREA_WIDTH * 0.5,\r\n              y: GAMEAREA_HEIGHT * 0.20,\r\n            }, 150, \"easeInOutQuad\")\r\n            .setLoop(true);\r\n        });\r\n\r\n      this.on(\"damaged\", function(e) {\r\n        if (e.after <= MAX_HP * 0.6 && MAX_HP * 0.6 < e.before) {\r\n          var gameScene = this.parent.parent;\r\n          gameScene.bulletLayer.eraseAll();\r\n          this.startAttack(\"misumi21\");\r\n        } else if (e.after <= MAX_HP * 0.2 && MAX_HP * 0.2 < e.before) {\r\n          var gameScene = this.parent.parent;\r\n          gameScene.bulletLayer.eraseAll();\r\n          this.startAttack(\"misumi31\");\r\n        }\r\n      });\r\n    },\r\n    onbulletend: function(e) {\r\n      this.startAttack(e.next);\r\n    },\r\n\r\n    onkilled: function() {\r\n      this.remove();\r\n    },\r\n  });\r\n\r\n  var U45 = Math.PI * 2 / 8;\r\n  var U225 = Math.PI * 2 / 16;\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Enemy\", {\r\n    superClass: \"ps.OutlinedSprite\",\r\n\r\n    hp: 0,\r\n    score: 0,\r\n\r\n    danmakuName: null,\r\n    runner: null,\r\n\r\n    eraseBullet: false,\r\n\r\n    _active: false,\r\n    entered: false,\r\n\r\n    init: function(texture, width, height, params) {\r\n      this.superInit(texture, width, height);\r\n      this.$extend(params);\r\n      this.on(\"enterframe\", function() {\r\n        if (this.runner === null) return;\r\n        if (!this._active) return;\r\n\r\n        this.runner.x = this.position.x;\r\n        this.runner.y = this.position.y;\r\n        this.runner.update();\r\n        this.runner.onNotify = function(eventType, event) {\r\n          this.flare(\"bullet\" + eventType, event);\r\n        }.bind(this);\r\n      });\r\n\r\n      this.on(\"killed\", function() {\r\n        if (this.eraseBullet) {\r\n          var gameScene = this.parent.parent;\r\n          gameScene.bulletLayer.eraseAll();\r\n        }\r\n        this.unactivate();\r\n        this.runner = null;\r\n      });\r\n    },\r\n\r\n    activate: function() {\r\n      this._active = true;\r\n      this.outline.visible = true;\r\n      return this;\r\n    },\r\n    unactivate: function() {\r\n      this._active = false;\r\n      this.outline.visible = false;\r\n      return this;\r\n    },\r\n\r\n    startAttack: function(danmakuName) {\r\n      if (danmakuName) this.danmakuName = danmakuName;\r\n      this.runner = ps.danmaku[this.danmakuName].createRunner(ps.BulletConfig);\r\n    },\r\n\r\n    hitTestRect: function(_x, _y) {\r\n      var x = _x - this.position.x;\r\n      var y = _y - this.position.y;\r\n\r\n      var left = -this.boundingWidth * this.originX;\r\n      var right = +this.boundingWidth * (1 - this.originX);\r\n      var top = -this.boundingHeight * this.originY;\r\n      var bottom = +this.boundingHeight * (1 - this.originY);\r\n\r\n      return (left < x && x < right) && (top < y && y < bottom);\r\n    },\r\n\r\n    hitTestCircle: function(_x, _y) {\r\n      var x = _x - this.position.x;\r\n      var y = _y - this.position.y;\r\n\r\n      if ((x * x + y * y) < (this.radius * this.radius)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    update: function() {\r\n      if (!this.entered) {\r\n        this.entered = (-this.width * this.originX) < this.x &&\r\n          this.x < (GAMEAREA_WIDTH + this.width * this.originX) &&\r\n          (-this.height * this.originY) < this.y &&\r\n          this.y < (GAMEAREA_HEIGHT + this.height * this.originY);\r\n      }\r\n\r\n      if (this.entered) {\r\n        if (this.x < (-this.width * this.originX) ||\r\n          (GAMEAREA_WIDTH + this.width * this.originX) < this.x ||\r\n          this.y < (-this.height * this.originY) ||\r\n          (GAMEAREA_HEIGHT + this.height * this.originY) < this.y) {\r\n          this.remove();\r\n          return;\r\n        }\r\n      }\r\n    },\r\n\r\n    damage: function(power) {\r\n      if (this.hp <= 0) return false;\r\n      if (!this.entered) return false;\r\n\r\n      var before = this.hp;\r\n      this.hp -= power;\r\n\r\n      if (this.hp <= 0) {\r\n        this.flare(\"killed\");\r\n      } else {\r\n        this.flare(\"damaged\", {\r\n          before: before,\r\n          after: this.hp,\r\n        });\r\n      }\r\n\r\n      return this.hp <= 0;\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.EnemyLooper\", {\r\n    superClass: \"phina.app.Object2D\",\r\n\r\n    init: function(params) {\r\n      this.superInit();\r\n      this.params = params;\r\n      this.enemyClass = phina.using(params.enemyClassName);\r\n      this.setPosition(params.x, params.y);\r\n      this.maxCount = params.maxCount;\r\n      this.limitAge = params.limitAge;\r\n\r\n      this.count = 0;\r\n\r\n      this.one(\"added\", function() {\r\n        this.spawn();\r\n        this.age = 0;\r\n      });\r\n    },\r\n\r\n    update: function() {\r\n      this.age += 1;\r\n    },\r\n\r\n    spawn: function() {\r\n      this.count += 1;\r\n      if (this.limitAge <= this.age || this.maxCount < this.count) {\r\n        this.remove();\r\n        return;\r\n      }\r\n\r\n      var self = this;\r\n      this.one(\"enterframe\", function() {\r\n        var enemy = self.enemyClass(self.params)\r\n          .setPosition(self.x, self.y)\r\n          .addChildTo(self.parent);\r\n\r\n        var next = function() {\r\n          self.spawn();\r\n          this.off(\"removed\", next);\r\n          this.off(\"killed\", next);\r\n          this.off(\"annihilated\", next);\r\n        };\r\n\r\n        enemy\r\n          .on(\"removed\", next)\r\n          .on(\"killed\", next)\r\n          .on(\"annihilated\", next);\r\n      });\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.EnemyUnit\", {\r\n    superClass: \"phina.app.Object2D\",\r\n\r\n    init: function(params) {\r\n      this.superInit();\r\n\r\n      this.enemyClass = phina.using(params.enemyClassName);\r\n      this.formation = ps.EnemyUnit.formations[params.formation];\r\n\r\n      this.one(\"enterframe\", function() {\r\n        var self = this;\r\n        this.formation.forEach(function(f) {\r\n          self\r\n            .enemyClass(params.$extend({\r\n              x: params.x + f.x,\r\n              y: params.y + f.y,\r\n              wait: params.wait + f.wait,\r\n            }))\r\n            .on(\"killed\", function() {\r\n              self.flare(\"killedOne\");\r\n            })\r\n            .on(\"removed\", function() {\r\n              self.flare(\"removedOne\");\r\n            });\r\n        });\r\n      });\r\n\r\n      var killedCount = 0;\r\n      this.on(\"killedOne\", function() {\r\n        killedCount += 1;\r\n        if (killedCount === this.formation.length) {\r\n          this.flare(\"annihilated\");\r\n        }\r\n      });\r\n      var removedCount = 0;\r\n      this.on(\"removedOne\", function() {\r\n        removedCount += 1;\r\n        if (removedCount === this.formation.length && killedCount < this.formation.length) {\r\n          this.flare(\"annihilated\");\r\n        }\r\n      });\r\n\r\n      this.on(\"annihilated\", function() {\r\n        this.remove();\r\n      });\r\n    },\r\n\r\n    _static: {\r\n      formations: {\r\n\r\n        // basic\r\n\r\n        \"basic0\": [{\r\n          x: GAMEAREA_WIDTH * -0.1,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.0,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 10,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.1,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 10,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.05,\r\n          y: GAMEAREA_HEIGHT * -0.1,\r\n          wait: 20,\r\n        }, ],\r\n\r\n        \"basic1\": [{\r\n          x: GAMEAREA_WIDTH * -0.1,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 20,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.0,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 10,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.1,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 30,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.15,\r\n          y: GAMEAREA_HEIGHT * -0.1,\r\n          wait: 20,\r\n        }, ],\r\n\r\n        \"basic2\": [{\r\n          x: GAMEAREA_WIDTH * -0.1,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 20,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.0,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 10,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.1,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 50,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.2,\r\n          y: GAMEAREA_HEIGHT * -0.1,\r\n          wait: 20,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.05,\r\n          y: GAMEAREA_HEIGHT * -0.1,\r\n          wait: 20,\r\n        }, ],\r\n\r\n        // wide\r\n\r\n        \"wide0\": [{\r\n          x: GAMEAREA_WIDTH * -0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * -0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.0,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, ],\r\n\r\n        \"wide1\": [{\r\n          x: GAMEAREA_WIDTH * -0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * -0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 10,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.0,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 20,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 30,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 40,\r\n        }, ],\r\n\r\n        \"wide2\": [{\r\n          x: GAMEAREA_WIDTH * -0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 40,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * -0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 30,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.0,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 20,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 10,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, ],\r\n\r\n        \"wide3\": [{\r\n          x: GAMEAREA_WIDTH * -0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 40,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * -0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 60,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.0,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 20,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 40,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, ],\r\n\r\n        \"wide4\": [{\r\n          x: GAMEAREA_WIDTH * -0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 20,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * -0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 0,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.0,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 40,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.2,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 20,\r\n        }, {\r\n          x: GAMEAREA_WIDTH * 0.4,\r\n          y: GAMEAREA_HEIGHT * 0.0,\r\n          wait: 60,\r\n        }, ],\r\n\r\n        // line\r\n\r\n        \"line4\": [{\r\n          x: 40 * -0,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * -1,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * -2,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * -3,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * -4,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, ],\r\n\r\n        \"line6\": [{\r\n          x: 40 * +0,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * +1,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * +2,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * +3,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * +4,\r\n          y: 40 * +0,\r\n          wait: 0,\r\n        }, ],\r\n\r\n        \"line7\": [{\r\n          x: 40 * -0,\r\n          y: 40 * -0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * -1,\r\n          y: 40 * -1,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * -2,\r\n          y: 40 * -2,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * -3,\r\n          y: 40 * -3,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * -4,\r\n          y: 40 * -4,\r\n          wait: 0,\r\n        }, ],\r\n\r\n        \"line8\": [{\r\n          x: 0,\r\n          y: 40 * -0,\r\n          wait: 0,\r\n        }, {\r\n          x: 0,\r\n          y: 40 * -1,\r\n          wait: 0,\r\n        }, {\r\n          x: 0,\r\n          y: 40 * -2,\r\n          wait: 0,\r\n        }, {\r\n          x: 0,\r\n          y: 40 * -3,\r\n          wait: 0,\r\n        }, {\r\n          x: 0,\r\n          y: 40 * -4,\r\n          wait: 0,\r\n        }, ],\r\n\r\n        \"line9\": [{\r\n          x: 40 * +0,\r\n          y: 40 * -0,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * +1,\r\n          y: 40 * -1,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * +2,\r\n          y: 40 * -2,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * +3,\r\n          y: 40 * -3,\r\n          wait: 0,\r\n        }, {\r\n          x: 40 * +4,\r\n          y: 40 * -4,\r\n          wait: 0,\r\n        }, ],\r\n\r\n      }\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.BackgroundLayer\", {\r\n    superClass: \"phina.display.Layer\",\r\n\r\n    _cameraOffsetX: 0,\r\n\r\n    renderChildBySelf: true,\r\n    skip: false,\r\n\r\n    init: function(params) {\r\n      this.superInit({\r\n        width: GAMEAREA_WIDTH,\r\n        height: GAMEAREA_HEIGHT,\r\n      });\r\n      this.setOrigin(0, 0);\r\n      this.backgroundColor = params.backgroundColor;\r\n\r\n      this.stroke = params.stroke;\r\n      this.fill = params.fill;\r\n      this.lineWidth = 1;\r\n\r\n      this.camera = ps.bg.Camera().addChildTo(this);\r\n    },\r\n\r\n    update: function(app) {\r\n      this.skip = app.ticker.frame % 3 !== 0;\r\n    },\r\n\r\n    render: function() {\r\n      var self = this;\r\n      var cam = this.camera;\r\n      var canvas = this.canvas;\r\n      var w = canvas.canvas.width;\r\n      var h = canvas.canvas.height;\r\n\r\n      canvas.clearColor(this.backgroundColor);\r\n\r\n      if (self.stroke) {\r\n        canvas.strokeStyle = self.stroke;\r\n        canvas.context.lineWidth = self.lineWidth;\r\n      }\r\n      if (self.fill) {\r\n        canvas.fillStyle = self.fill;\r\n        canvas.fill();\r\n      }\r\n\r\n      for (var i = 0, len = this.children.length; i < len; i++) {\r\n        var child = this.children[i];\r\n        if (child instanceof ps.bg.Polygon) {\r\n          var src = child.render(cam);\r\n          var positions = [];\r\n          for (var s = 0, slen = src.length; s < slen; s++) {\r\n            var pos = src[s];\r\n            if (pos[3] < 0) {\r\n              positions = [];\r\n              break;\r\n            } else {\r\n              positions.push(((pos[0] / pos[3]) + 0.5) * w);\r\n              positions.push((-(pos[1] / pos[3]) + 0.5) * h);\r\n            }\r\n          }\r\n\r\n          var alpha = Math.clamp(1.0 - src[0][2] * 0.032, 0.0, 1.0);\r\n          if (alpha < 0.01) continue;\r\n          canvas.context.globalAlpha = alpha;\r\n\r\n          if (4 <= positions.length) {\r\n            canvas.beginPath();\r\n            canvas.lines.apply(canvas, positions);\r\n            canvas.closePath();\r\n            if (self.stroke) canvas.stroke();\r\n            if (self.fill) canvas.fill();\r\n          } else if (positions.length === 2) {\r\n            canvas.beginPath();\r\n            canvas.rect(positions[0], positions[1], 1, 1);\r\n            canvas.closePath();\r\n            if (self.stroke) canvas.stroke();\r\n            if (self.fill) canvas.fill();\r\n          }\r\n        }\r\n      }\r\n\r\n      canvas.context.globalAlpha = 1.0;\r\n    },\r\n\r\n    draw: function(canvas) {\r\n      if (!this.skip) this.render();\r\n\r\n      var image = this.canvas.domElement;\r\n      canvas.context.drawImage(image,\r\n        0, 0, image.width, image.height, -this.width * this.originX, -this.height * this.originY, this.width, this.height\r\n      );\r\n    },\r\n  });\r\n\r\n  phina.define(\"ps.bg.Camera\", {\r\n    superClass: \"phina.app.Element\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n\r\n      this.position = vec3.set(vec3.create(), 5, 3, 50);\r\n      this.target = vec3.set(vec3.create(), 0, 0, 0);\r\n      this.up = vec3.set(vec3.create(), 0, 1, 0);\r\n\r\n      this.vMatrix = mat4.create();\r\n      this.pMatrix = mat4.perspective(mat4.create(), 70, GAMEAREA_WIDTH / GAMEAREA_HEIGHT, 0.1, 10000);\r\n\r\n      this.vpMatrix = mat4.create();\r\n\r\n      this.needsUpdate = true;\r\n    },\r\n\r\n    update: function() {\r\n      if (this.needsUpdate) {\r\n        mat4.lookAt(this.vMatrix, this.position, this.target, this.up);\r\n        mat4.mul(this.vpMatrix, this.pMatrix, this.vMatrix);\r\n        this.needsUpdate = false;\r\n      }\r\n    },\r\n\r\n    _accessor: {\r\n      x: {\r\n        get: function() {\r\n          return this.position[0];\r\n        },\r\n        set: function(v) {\r\n          this.position[0] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      y: {\r\n        get: function() {\r\n          return this.position[1];\r\n        },\r\n        set: function(v) {\r\n          this.position[1] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      z: {\r\n        get: function() {\r\n          return this.position[2];\r\n        },\r\n        set: function(v) {\r\n          this.position[2] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      targetX: {\r\n        get: function() {\r\n          return this.target[0];\r\n        },\r\n        set: function(v) {\r\n          this.target[0] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      targetY: {\r\n        get: function() {\r\n          return this.target[1];\r\n        },\r\n        set: function(v) {\r\n          this.target[1] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      targetZ: {\r\n        get: function() {\r\n          return this.target[2];\r\n        },\r\n        set: function(v) {\r\n          this.target[2] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      upX: {\r\n        get: function() {\r\n          return this.up[0];\r\n        },\r\n        set: function(v) {\r\n          this.up[0] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      upY: {\r\n        get: function() {\r\n          return this.up[1];\r\n        },\r\n        set: function(v) {\r\n          this.up[1] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      upZ: {\r\n        get: function() {\r\n          return this.up[2];\r\n        },\r\n        set: function(v) {\r\n          this.up[2] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.bg.Polygon\", {\r\n    superClass: \"phina.app.Element\",\r\n\r\n    init: function(params) {\r\n      this.superInit();\r\n\r\n      this.vertices = params.vertices.map(function(vertex) {\r\n        return vec4.set(vec4.create(), vertex[0], vertex[1], vertex[2], 1);\r\n      });\r\n\r\n      this.calcPosition = this.vertices.map(function(vertex) {\r\n        return vec4.clone(vertex);\r\n      });\r\n\r\n      // this.rotation = quat.create();\r\n      this.translation = vec3.create();\r\n      // this.scale = vec3.set(vec3.create(), 1, 1, 1);\r\n\r\n      this.mMatrix = mat4.create();\r\n      this.mvpMatrix = mat4.create();\r\n\r\n      this.needsUpdate = true;\r\n    },\r\n\r\n    update: function() {\r\n      if (this.needsUpdate) {\r\n        // mat4.fromRotationTranslationScale(this.mMatrix, this.rotation, this.translation, this.scale);\r\n        mat4.fromTranslation(this.mMatrix, this.translation);\r\n        this.needsUpdate = false;\r\n      }\r\n    },\r\n\r\n    render: function(camera) {\r\n      var vertices = this.vertices;\r\n      var calcPosition = this.calcPosition;\r\n      var mvp = mat4.mul(this.mvpMatrix, camera.vpMatrix, this.mMatrix);\r\n\r\n      for (var i = 0, len = vertices.length; i < len; i++) {\r\n        var vertex = vertices[i];\r\n        vec4.transformMat4(calcPosition[i], vertex, mvp);\r\n      }\r\n\r\n      return calcPosition;\r\n    },\r\n\r\n    setTranslation: function(x, y, z) {\r\n      this.translation[0] = x;\r\n      this.translation[1] = y;\r\n      this.translation[2] = z;\r\n      return this;\r\n    },\r\n\r\n    _accessor: {\r\n      x: {\r\n        get: function() {\r\n          return this.translation[0];\r\n        },\r\n        set: function(v) {\r\n          this.translation[0] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      y: {\r\n        get: function() {\r\n          return this.translation[1];\r\n        },\r\n        set: function(v) {\r\n          this.translation[1] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n      z: {\r\n        get: function() {\r\n          return this.translation[2];\r\n        },\r\n        set: function(v) {\r\n          this.translation[2] = v;\r\n          this.needsUpdate = true;\r\n        }\r\n      },\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.BulletLayer\", {\r\n    superClass: \"phina.display.CanvasElement\",\r\n\r\n    pool: null,\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: GAMEAREA_WIDTH,\r\n        height: GAMEAREA_HEIGHT,\r\n      });\r\n      this.setOrigin(0, 0);\r\n\r\n      var self = this;\r\n      this.pool = Array.range(0, 256).map(function() {\r\n        var b = ps.Bullet();\r\n        b.bulletLayer = self;\r\n        return b;\r\n      });\r\n    },\r\n\r\n    spawn: function(runner, spec) {\r\n      var bullet = this.pool.shift();\r\n      if (!bullet) return;\r\n      \r\n      bullet.spawn(runner, spec);\r\n      bullet.addChildTo(this);\r\n    },\r\n    \r\n    eraseAll: function() {\r\n      console.log (\"eraseAll\");\r\n      var bs = this.children.slice();\r\n      var b;\r\n      for (var i = 0, len = bs.length; i < len; i++) {\r\n        b = bs[i];\r\n        b.erase();\r\n      }\r\n    },\r\n\r\n    update: function() {\r\n      var bs = this.children.slice(0);\r\n      for (var i = 0, len = bs.length; i < len; i++) {\r\n        var b = bs[i];\r\n        if (b.x < 0 || GAMEAREA_WIDTH < b.x || b.y < 0 || GAMEAREA_HEIGHT < b.y) {\r\n          b.remove();\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.EffectLayer\", {\r\n    superClass: \"phina.display.CanvasElement\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.gamescene.MainLayer\", {\r\n    superClass: \"phina.display.Layer\",\r\n\r\n    init: function(params) {\r\n      this.superInit({\r\n        width: GAMEAREA_WIDTH,\r\n        height: GAMEAREA_HEIGHT,\r\n      });\r\n      this.setOrigin(0, 0);\r\n      this.backgroundColor = null;\r\n\r\n      var self = this;\r\n\r\n      this.fromJSON({\r\n        children: {\r\n          backgroundLayer: {\r\n            className: params.stage.backgroundClassName,\r\n            // onenterframe: function() {\r\n            //   this.cameraOffsetX = (GAMEAREA_WIDTH * 0.5 - self.player.x) * 0.2;\r\n            // },\r\n          },\r\n\r\n          scoreItemLayer: {\r\n            className: \"phina.display.CanvasElement\",\r\n            // onenterframe: function() {\r\n            //   this.x = (GAMEAREA_WIDTH * 0.5 - self.player.x) * 0.2;\r\n            // },\r\n          },\r\n\r\n          deadEnemyLayer: {\r\n            className: \"phina.display.CanvasElement\",\r\n            // onenterframe: function() {\r\n            //   this.x = (GAMEAREA_WIDTH * 0.5 - self.player.x) * 0.2;\r\n            // },\r\n          },\r\n\r\n          effectLayer0: {\r\n            className: \"phina.display.CanvasElement\",\r\n          },\r\n\r\n          enemyLayer: {\r\n            className: \"phina.display.CanvasElement\",\r\n            // onenterframe: function() {\r\n            //   this.x = (GAMEAREA_WIDTH * 0.5 - self.player.x) * 0.2;\r\n            // },\r\n          },\r\n\r\n          shotLayer: {\r\n            className: \"ps.ShotLayer\",\r\n          },\r\n\r\n          player: {\r\n            className: \"ps.Player\",\r\n            visible: false,\r\n          },\r\n\r\n          itemLayer: {\r\n            className: \"phina.display.CanvasElement\",\r\n          },\r\n\r\n          effectLayer1: {\r\n            className: \"phina.display.CanvasElement\",\r\n            children: {\r\n              playerBurners: {\r\n                className: \"phina.display.CanvasElement\",\r\n                children: {\r\n                  playerBurnerL: {\r\n                    className: \"ps.AfterBurner\",\r\n                    onenterframe: function() {\r\n                      this.position.x = self.player.position.x - 4;\r\n                      this.position.y = self.player.position.y + 12;\r\n                    }\r\n                  },\r\n                  playerBurnerR: {\r\n                    className: \"ps.AfterBurner\",\r\n                    onenterframe: function() {\r\n                      this.position.x = self.player.position.x + 4;\r\n                      this.position.y = self.player.position.y + 12;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            },\r\n          },\r\n\r\n          bulletLayer: {\r\n            className: \"ps.BulletLayer\",\r\n            // onenterframe: function() {\r\n            //   this.x = (GAMEAREA_WIDTH * 0.5 - self.player.x) * 0.2;\r\n            // },\r\n          },\r\n\r\n          playerMarker: {\r\n            className: \"phina.display.CircleShape\",\r\n            arguments: {\r\n              radius: 3,\r\n              fill: \"hsl(240,100%,90%)\",\r\n              stroke: \"hsl(240,70%,50%)\",\r\n              strokeWidth: 1.3,\r\n            },\r\n            onenterframe: function(e) {\r\n              this.setScale(0.9 + Math.sin(e.app.ticker.frame * 0.3) * 0.1);\r\n              this.position = self.player.position;\r\n            },\r\n          }\r\n        }\r\n      });\r\n\r\n      this.player.parts.push(this.effectLayer1.playerBurners.playerBurnerL);\r\n      this.player.parts.push(this.effectLayer1.playerBurners.playerBurnerR);\r\n      this.player.parts.push(this.playerMarker);\r\n    }\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.ShotLayer\", {\r\n    superClass: \"phina.display.CanvasElement\",\r\n\r\n    pool: null,\r\n\r\n    init: function() {\r\n      this.superInit();\r\n      var self = this;\r\n      this.pool = Array.range(0, 28).map(function() {\r\n        var shot = ps.Shot();\r\n        shot.shotLayer = self;\r\n        return shot;\r\n      });\r\n    },\r\n\r\n    fireVulcan: function(frameIndex, x, y, direction, power) {\r\n      var shot = this.pool.shift();\r\n      if (shot) {\r\n        shot.setup(frameIndex, x, y, direction, power).addChildTo(this);\r\n      }\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.gamescene.SideBarLayer\", {\r\n    superClass: \"phina.display.Layer\",\r\n\r\n    skipDraw: false,\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SIDEBAR_WIDTH,\r\n        height: SIDEBAR_HEIGHT,\r\n      });\r\n      this.setOrigin(0, 0);\r\n      this.backgroundColor = ps.Color.pri[0];\r\n      this.gridX = phina.util.Grid(SIDEBAR_WIDTH, 16);\r\n      this.gridY = phina.util.Grid(SIDEBAR_HEIGHT, 17);\r\n    },\r\n\r\n    bindGameData: function(gameData) {},\r\n\r\n    update: function(app) {\r\n      this.skipDraw = app.ticker.frame % 5 !== 0\r\n    },\r\n\r\n    draw: function(canvas) {\r\n      if (this.skipDraw) {\r\n        var image = this.canvas.domElement;\r\n        canvas.context.drawImage(image,\r\n          0, 0, image.width, image.height, -this.width * this.originX, -this.height * this.originY, this.width, this.height\r\n        );\r\n      } else {\r\n        phina.display.Layer.prototype.draw.call(this, canvas);\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  phina.define(\"ps.gamescene.LeftSideBar\", {\r\n    superClass: \"ps.gamescene.SideBarLayer\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n      this.fromJSON({\r\n        children: {\r\n          scoreLabel: {\r\n            className: \"ps.HudLabel\",\r\n            arguments: {\r\n              text: \"SCORE\",\r\n            },\r\n            x: this.gridX.span(1),\r\n            y: this.gridY.span(1),\r\n          },\r\n          score: {\r\n            className: \"ps.ScoreLabel\",\r\n            x: this.gridX.span(15),\r\n            y: this.gridY.span(2),\r\n          },\r\n\r\n          psycheLabel: {\r\n            className: \"ps.HudLabel\",\r\n            arguments: {\r\n              text: \"PSYCHE\",\r\n            },\r\n            x: this.gridX.span(1),\r\n            y: this.gridY.span(3),\r\n          },\r\n          psyche: {\r\n            className: \"ps.ScoreLabel\",\r\n            x: this.gridX.span(15),\r\n            y: this.gridY.span(4),\r\n          },\r\n\r\n          highScoreLabel: {\r\n            className: \"ps.HudLabel\",\r\n            arguments: {\r\n              text: \"HIGH SCORE\",\r\n            },\r\n            x: this.gridX.span(1),\r\n            y: this.gridY.span(15),\r\n          },\r\n          highScore: {\r\n            className: \"ps.ScoreLabel\",\r\n            x: this.gridX.span(15),\r\n            y: this.gridY.span(16),\r\n          },\r\n        }\r\n      });\r\n    },\r\n\r\n    bindGameData: function(gameData) {\r\n      gameData.bind(\"score\", this.score);\r\n      gameData.bind(\"psyche\", this.psyche);\r\n      gameData.bind(\"highScore\", this.highScore);\r\n    },\r\n\r\n  });\r\n\r\n  phina.define(\"ps.gamescene.RightSideBar\", {\r\n    superClass: \"ps.gamescene.SideBarLayer\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n      this.fromJSON({\r\n        children: {\r\n          zankiLabel: {\r\n            className: \"ps.HudLabel\",\r\n            arguments: {\r\n              text: \"ZANKI\",\r\n            },\r\n            x: this.gridX.span(1),\r\n            y: this.gridY.span(1),\r\n          },\r\n          zanki: {\r\n            className: \"ps.ZankiDisplay\",\r\n            arguments: 3 - 1,\r\n            x: this.gridX.span(15),\r\n            y: this.gridY.span(2),\r\n          },\r\n\r\n          bombLabel: {\r\n            className: \"ps.HudLabel\",\r\n            arguments: {\r\n              text: \"BOMB\",\r\n            },\r\n            x: this.gridX.span(1),\r\n            y: this.gridY.span(3),\r\n          },\r\n          bomb: {\r\n            className: \"ps.BombDisplay\",\r\n            arguments: 3,\r\n            x: this.gridX.span(15),\r\n            y: this.gridY.span(4),\r\n          },\r\n\r\n          gameTitleLabel: {\r\n            className: \"ps.TitleLogoLabel\",\r\n            x: this.gridX.center(),\r\n            y: this.gridY.span(16),\r\n          },\r\n        }\r\n      });\r\n    },\r\n\r\n    bindGameData: function(gameData) {\r\n      gameData.bind(\"zanki\", this.zanki);\r\n      gameData.bind(\"bomb\", this.bomb);\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.HudLabel\", {\r\n    superClass: \"phina.display.Label\",\r\n\r\n    init: function(options) {\r\n      this.superInit(options.$safe({\r\n        fill: ps.Color.sec0[14],\r\n        stroke: ps.Color.sec0[6],\r\n        fontSize: FONT_SIZE_M,\r\n        fontFamily: \"main\",\r\n        align: \"left\",\r\n        baseline: \"middle\",\r\n      }));\r\n    },\r\n    \r\n    update: function(app) {\r\n      this.alpha = 1.0;\r\n    },\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.ItemDisplay\", {\r\n    superClass: \"phina.display.CanvasElement\",\r\n\r\n    init: function(textureName, initialValue) {\r\n      this.superInit();\r\n      this.setOrigin(1, 0.5);\r\n      this.textureName = textureName;\r\n\r\n      this._count = initialValue || 0;\r\n      this.updateView();\r\n    },\r\n\r\n    updateView: function() {\r\n      var self = this;\r\n      var t = this.textureName;\r\n      var count = this._count;\r\n\r\n      if (0 < count - this.children.length) {\r\n        (count - this.children.length).times(function(i) {\r\n          var newItem = phina.display.Sprite(t);\r\n          newItem.setPosition(self.children.length * -newItem.width * 1.02, 0)\r\n            .addChildTo(self);\r\n        });\r\n      }\r\n\r\n      this.children.forEach(function(child, i) {\r\n        child.visible = i < count;\r\n      });\r\n    },\r\n\r\n    _accessor: {\r\n      value: {\r\n        get: function() {\r\n          return this._count;\r\n        },\r\n        set: function(v) {\r\n          this._count = v;\r\n          this.updateView();\r\n        }\r\n      }\r\n    }\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.OutlinedSprite\", {\r\n    superClass: \"phina.display.Sprite\",\r\n\r\n    init: function(texture, width, height) {\r\n      this.superInit(texture, width, height);\r\n\r\n      var self = this;\r\n\r\n      this.outline = phina.display.Sprite(texture + \"Outline\", width, height).addChildTo(this);\r\n      this.outline.blendMode = \"lighter\";\r\n      this.outline.update = function(app) {\r\n        this.srcRect = self.srcRect;\r\n        this.alpha = ps.OutlinedSprite.staticAlpha;\r\n      };\r\n    },\r\n\r\n    setSrcRect: function(x, y, w, h) {\r\n      this.srcRect.x = x;\r\n      this.srcRect.y = y;\r\n      this.srcRect.width = w;\r\n      this.srcRect.height = h;\r\n      return this;\r\n    },\r\n\r\n    _static: {\r\n      staticAlpha: 1.0\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Player\", {\r\n    superClass: \"ps.OutlinedSprite\",\r\n\r\n    controllable: false,\r\n    muteki: false,\r\n\r\n    roll: 0,\r\n\r\n    speed: 3.6,\r\n\r\n    shotLayer: null,\r\n\r\n    trigger: 0,\r\n    shotPower: 0,\r\n    fireFrame: 0,\r\n\r\n    parts: null,\r\n\r\n    init: function() {\r\n      this.superInit(\"player\", 32, 32);\r\n      this.frameIndex = 4;\r\n      this.x = GAMEAREA_WIDTH * 0.5;\r\n      this.y = GAMEAREA_HEIGHT * 1.2;\r\n      this.controllable = false;\r\n      this.muteki = true;\r\n      this.parts = [];\r\n    },\r\n\r\n    update: function(app) {\r\n      if (!this.controllable) return;\r\n\r\n      var frame = app.ticker.frame;\r\n\r\n      var keyboard = app.keyboard;\r\n      var gamepad = app.gamepads.get(0);\r\n      // var pointer = app.pointer;\r\n\r\n      moveVector.set(0, 0);\r\n\r\n      moveVector.add(keyboard.getKeyDirection().mul(this.speed));\r\n      if (gamepad) {\r\n        var stick = gamepad.getStickDirection();\r\n        if (0.4 < stick.length()) {\r\n          moveVector.add(stick.normalize().mul(this.speed));\r\n        }\r\n      }\r\n      // if (pointer.getPointing()) {\r\n      //   moveVector.add(pointer.deltaPosition.mul(2));\r\n      // }\r\n\r\n      if (moveVector.x) {\r\n        this.roll = Math.clamp(this.roll + moveVector.x * 0.1, -4, 4);\r\n      } else {\r\n        this.roll *= 0.8;\r\n        if (Math.abs(this.roll) < 0.1) {\r\n          this.roll = 0;\r\n        }\r\n      }\r\n      if (this.roll !== 0) {\r\n        var sign = this.roll / Math.abs(this.roll);\r\n        var r = ~~(Math.abs(this.roll)) * sign;\r\n        this.frameIndex = Math.clamp(4 + r, 0, 8);\r\n      }\r\n\r\n      var position = this.position;\r\n      position.add(moveVector);\r\n      position.x = Math.clamp(position.x, 4, GAMEAREA_WIDTH - 4);\r\n      position.y = Math.clamp(position.y, 4, GAMEAREA_HEIGHT - 4);\r\n\r\n      if (keyboard.getKeyDown(\"shot\") || gamepad.getKeyDown(\"shot\")) {\r\n        this.shotPower = this.trigger - 14;\r\n        this.trigger = 14;\r\n      } else {\r\n        this.trigger -= 1;\r\n      }\r\n\r\n      if (0 < this.trigger && frame % 14 === 0) {\r\n        ps.SoundManager.playSound(\"shot\");\r\n      }\r\n\r\n      if (0 < this.trigger && frame % 4 === 0) {\r\n        var xv = Math.sin(this.fireFrame * 0.6) * 8;\r\n        var dv = Math.sin(this.fireFrame * 1.0) * 8;\r\n        this.shotLayer.fireVulcan(0, position.x - xv, position.y - 20, -90, 1.0 + Math.max(0, this.shotPower / 14));\r\n        this.shotLayer.fireVulcan(0, position.x + xv, position.y - 20, -90, 1.0 + Math.max(0, this.shotPower / 14));\r\n        this.shotLayer.fireVulcan(2, position.x - 14, position.y - 2, -90 - 12 + dv, 0.5 + Math.max(0, this.shotPower / 14 / 2));\r\n        this.shotLayer.fireVulcan(2, position.x + 14, position.y - 2, -90 + 12 - dv, 0.5 + Math.max(0, this.shotPower / 14 / 2));\r\n        this.fireFrame += 1;\r\n      }\r\n    },\r\n\r\n    launch: function() {\r\n      this.x = GAMEAREA_WIDTH * 0.5;\r\n      this.y = GAMEAREA_HEIGHT * 1.2;\r\n\r\n      this.controllable = false;\r\n      this.muteki = true;\r\n      this.visible = true;\r\n      this.roll = 0;\r\n      this.frameIndex = 4;\r\n      this.trigger = 0;\r\n      this.parts.forEach(function(part) {\r\n        part.visible = true;\r\n      });\r\n\r\n      var self = this;\r\n      this.ftweener\r\n        .clear()\r\n        .to({\r\n          y: GAMEAREA_HEIGHT * 0.8,\r\n        }, 60, \"easeOutBack\")\r\n        .call(function() {\r\n          self.controllable = true;\r\n          self.timer(180, function() {\r\n            self.muteki = false;\r\n          });\r\n        });\r\n    },\r\n\r\n    miss: function() {\r\n      this.controllable = false;\r\n      this.muteki = true;\r\n      this.visible = false;\r\n      this.parts.forEach(function(part) {\r\n        part.visible = false;\r\n      });\r\n    },\r\n\r\n  });\r\n\r\n  var moveVector = phina.geom.Vector2(0, 0);\r\n\r\n  phina.define(\"ps.AfterBurner\", {\r\n    superClass: \"phina.app.Object2D\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n    },\r\n\r\n    update: function(app) {\r\n      if (app.ticker.frame % 2 !== 0) return;\r\n      if (!this.visible) return;\r\n      var p = phina.display.Sprite(\"particleB\")\r\n        .setScale(0.125)\r\n        .setPosition(this.position.x, this.position.y)\r\n        .on(\"enterframe\", function() {\r\n          this.position.y += 1;\r\n          this.alpha -= 0.1;\r\n          if (this.alpha < 0.01) this.remove();\r\n        })\r\n        .addChildTo(this.parent);\r\n      p.blendMode = \"lighter\";\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.ScoreLabel\", {\r\n    superClass: \"phina.display.Label\",\r\n\r\n    init: function(options) {\r\n      this.superInit((options || {}).$safe({\r\n        fill: \"white\",\r\n        stroke: null,\r\n        fontSize: FONT_SIZE_L,\r\n        fontFamily: \"mono\",\r\n        align: \"right\",\r\n        baseline: \"middle\",\r\n      }));\r\n\r\n      this.value = 0;\r\n    },\r\n\r\n    formatText: function() {\r\n      var v = \"\" + Math.floor(this._score);\r\n      Array.range(5, 0).forEach(function(i) {\r\n        var s = i * 3;\r\n        if (s < v.length) {\r\n          v = v.substring(0, v.length - s) + \",\" + v.substring(v.length - s);\r\n        }\r\n      });\r\n\r\n      this.text = v;\r\n    },\r\n    // formatText: function() {\r\n    //   var v = \"\" + Math.floor(this._score);\r\n    //   if (12 < v.length) {\r\n    //     v = v.substring(0, v.length - 12) + \"兆\" + v.substring(v.length - 12);\r\n    //   }\r\n    //   if (8 < v.length) {\r\n    //     v = v.substring(0, v.length - 8) + \"億\" + v.substring(v.length - 8);\r\n    //   }\r\n    //   if (4 < v.length) {\r\n    //     v = v.substring(0, v.length - 4) + \"万\" + v.substring(v.length - 4);\r\n    //   }\r\n\r\n    //   this.text = v;\r\n    // },\r\n\r\n    _accessor: {\r\n      value: {\r\n        get: function() {\r\n          return this._score;\r\n        },\r\n        set: function(v) {\r\n          this._score = v;\r\n          this.formatText();\r\n        }\r\n      }\r\n    }\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  var speed = 12;\r\n\r\n  phina.define(\"ps.Shot\", {\r\n    superClass: \"phina.display.Sprite\",\r\n    \r\n    shotLayer: null,\r\n    power: 0,\r\n\r\n    init: function() {\r\n      this.superInit(\"bullet\", 24, 24);\r\n    },\r\n    \r\n    onremoved: function() {\r\n      this.shotLayer.pool.push(this);\r\n    },\r\n\r\n    setup: function(frameIndex, x, y, direction, power) {\r\n      this.frameIndex = frameIndex;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.rotation = direction;\r\n      this.power = power;\r\n      var rad = direction * Math.DEG_TO_RAD;\r\n      this.velocity = phina.geom.Vector2(Math.cos(rad) * speed, Math.sin(rad) * speed);\r\n      \r\n      return this;\r\n    },\r\n\r\n    update: function() {\r\n      this.power = Math.max(this.power * 0.95, 0.5);\r\n      var position = this.position;\r\n      position.add(this.velocity);\r\n      if (position.x < 0 || GAMEAREA_WIDTH < position.x || position.y < 0 || GAMEAREA_HEIGHT < position.y) {\r\n        this.remove();\r\n      }\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.TitleLogoLabel\", {\r\n    superClass: \"phina.display.Label\",\r\n\r\n    init: function(options) {\r\n      this.superInit((options || {}).$safe({\r\n        text: \"Phina Shooter\",\r\n        align: \"center\",\r\n        fontFamily: \"title\",\r\n        fontSize: FONT_SIZE_L,\r\n        stroke: ps.Color.pri[6],\r\n        fill: ps.Color.pri[13],\r\n      }));\r\n    }\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.ZankiDisplay\", {\r\n    superClass: \"ps.ItemDisplay\",\r\n\r\n    init: function(initialValue) {\r\n      this.superInit(\"zanki\", initialValue);\r\n    },\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.BulletConfig\", {\r\n    init: function() {},\r\n    _static: {\r\n\r\n      speedRate: 3,\r\n      target: null,\r\n      bulletLayer: null,\r\n\r\n      setup: function(target, bulletLayer) {\r\n        this.target = target;\r\n        this.bulletLayer = bulletLayer;\r\n\r\n        this.put(\"densityRank\", 0.00);\r\n        this.put(\"speedRank\", 0.00);\r\n        this.put(\"burst\", 0);\r\n      },\r\n\r\n      createNewBullet: function(runner, spec) {\r\n        this.bulletLayer.spawn(runner, spec);\r\n      },\r\n\r\n      put: function(name, value) {\r\n        bulletml.Walker.globalScope[\"$\" + name] = value;\r\n      },\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.GameData\", {\r\n    superClass: \"phina.util.EventDispatcher\",\r\n\r\n    currentStage: 0,\r\n\r\n    score: Math.randint(0, 100000000000),\r\n    zanki: 2,\r\n    bomb: 3,\r\n    psyche: Math.randint(0, 100000000000),\r\n    highScore: Math.randint(0, 100000000000),\r\n    rank: 0,\r\n\r\n    /**\r\n     * \"normal\" or \"every\"\r\n     */\r\n    extendMode: null,\r\n    extendScore: null,\r\n\r\n    init: function() {\r\n      this.superInit();\r\n      this._binder = {};\r\n\r\n      this.extendMode = \"normal\";\r\n      this.extendScore = [100000000, 200000000];\r\n    },\r\n\r\n    updateView: function(frame) {\r\n      if (frame % 5 !== 0) return;\r\n\r\n      var self = this;\r\n      self._binder.forIn(function(name, view) {\r\n        if (self[name] !== undefined) {\r\n          view.value = self[name];\r\n        }\r\n      });\r\n    },\r\n\r\n    addPsyche: function(v) {\r\n      this.psyche += v;\r\n    },\r\n\r\n    addScore: function(v) {\r\n      var self = this;\r\n      var before = this.score;\r\n      var after = this.score + v;\r\n\r\n      if (this.extendMode === \"normal\") {\r\n        for (var i = 0, len = this.extendScore.length; i < len; i++) {\r\n          var es = this.extendScore[i];\r\n          if (before < es && es <= after) {\r\n            self.zanki += 1;\r\n            self.flare(\"extend\");\r\n            break;\r\n          }\r\n        }\r\n      } else if (this.extendMode === \"every\") {\r\n        var es = this.extendScore[0];\r\n        if (Math.floor(before / es) < Math.floor(after / es)) {\r\n          this.zanki += 1;\r\n          this.flare(\"extend\");\r\n        }\r\n      }\r\n\r\n      this.score = after;\r\n    },\r\n\r\n    bind: function(propertyName, view) {\r\n      this._binder[propertyName] = view;\r\n    },\r\n\r\n    onbomb: function() {\r\n      this.bomb -= 1;\r\n    },\r\n\r\n    onkill: function(e) {\r\n\r\n    },\r\n\r\n    onmiss: function() {\r\n      this.zanki -= 1;\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.main(function() {\r\n  var s = 10;\r\n  var l = s * Math.sqrt(3);\r\n  var bg = phina.graphics.Canvas();\r\n  bg.setSize(l * 2, s * 6);\r\n  bg.strokeStyle = \"hsla(240, 8%, 50%, 0.3)\";\r\n  bg.strokeLines(\r\n    l, 0,\r\n    l, s,\r\n    0, s * 2,\r\n    0, s * 4,\r\n    l, s * 5,\r\n    l, s * 6\r\n  );\r\n  bg.strokeLines(l, s, l * 2, s * 2);\r\n  bg.strokeLines(l, s * 5, l * 2, s * 4);\r\n  document.body.style.backgroundImage = \"url({0})\".format(bg.canvas.toDataURL());\r\n  document.body.style.backgroundRepeat = \"repeat\";\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.EndingScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n      this.fromJSON({\r\n        children: {\r\n          label: {\r\n            className: \"ps.TitleLogoLabel\",\r\n            arguments: {\r\n              text: \"ending\"\r\n            },\r\n            x: GAMEAREA_WIDTH * 0.5,\r\n            y: GAMEAREA_HEIGHT * 0.5,\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.GameoverScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n\r\n      this.fromJSON({\r\n        children: {\r\n          label: {\r\n            className: \"ps.TitleLogoLabel\",\r\n            arguments: {\r\n              text: \"GAME OVER\"\r\n            },\r\n            x: GAMEAREA_WIDTH * 0.5,\r\n            y: GAMEAREA_HEIGHT * 0.5,\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.GameScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    stageId: null,\r\n    gameData: null,\r\n    \r\n    stage: null,\r\n    player: null,\r\n\r\n    init: function(params) {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"hsl(30, 60%, 60%)\",\r\n      });\r\n\r\n      this.stage = ps.Stage.create(params.stageId);\r\n\r\n      this.fromJSON({\r\n        children: {\r\n          mainLayer: {\r\n            className: \"ps.gamescene.MainLayer\",\r\n            arguments: {\r\n              stage: this.stage,\r\n            },\r\n            x: SIDEBAR_WIDTH,\r\n            y: 0,\r\n          },\r\n          leftSideBar: {\r\n            className: \"ps.gamescene.LeftSideBar\",\r\n            x: 0,\r\n            y: 0,\r\n          },\r\n          rightSideBar: {\r\n            className: \"ps.gamescene.RightSideBar\",\r\n            x: SCREEN_WIDTH - SIDEBAR_WIDTH,\r\n            y: 0,\r\n          },\r\n        }\r\n      });\r\n\r\n      var player = this.player = this.mainLayer.player;\r\n      player.shotLayer = this.mainLayer.shotLayer;\r\n\r\n      var gameData = this.gameData = params.gameData;\r\n      this.leftSideBar.bindGameData(gameData);\r\n      this.rightSideBar.bindGameData(gameData);\r\n      gameData.on(\"miss\", function() {});\r\n      gameData.on(\"gameover\", function() {});\r\n\r\n      ps.BulletConfig.setup(player, this.mainLayer.bulletLayer);\r\n\r\n      this.timer(120, function() {\r\n        player.launch();\r\n      });\r\n    },\r\n\r\n    update: function(app) {\r\n      this.stage.update(app);\r\n\r\n      var frame = app.ticker.frame;\r\n\r\n      this.gameData.updateView(frame);\r\n\r\n      ps.OutlinedSprite.staticAlpha = 0.5 + Math.sin(frame * 0.26) * 0.5;\r\n\r\n      this._hitTestShotVsEnemy();\r\n      this._hitTestBombVsEnemy();\r\n      this._hitTestBulletVsPlayer();\r\n      this._hitTestEnemyVsPlayer();\r\n    },\r\n\r\n    _hitTestShotVsEnemy: function() {\r\n      var enemies = this.mainLayer.enemyLayer.children;\r\n      var shots = this.mainLayer.shotLayer.children;\r\n      \r\n      // var offsetX = (GAMEAREA_WIDTH * 0.5 - this.player.x) * 0.2;\r\n      var offsetX = 0;\r\n\r\n      var es = enemies.slice();\r\n      var ss = shots.slice();\r\n\r\n      for (var si = 0, slen = ss.length; si < slen; si++) {\r\n        var s = ss[si];\r\n        for (var ei = 0, elen = es.length; ei < elen; ei++) {\r\n          var e = es[ei];\r\n          if (!e._active) continue;\r\n          if (e.hitTest(s.x + offsetX, s.y)) {\r\n            if (e.damage(s.power)) {\r\n              this.kill(e);\r\n            }\r\n            s.remove();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    _hitTestBombVsEnemy: function() {\r\n      var enemies = this.mainLayer.enemyLayer.children;\r\n\r\n      var es = enemies.slice();\r\n    },\r\n    _hitTestBulletVsPlayer: function() {\r\n      var bullets = this.mainLayer.bulletLayer.children;\r\n      var player = this.player;\r\n\r\n      if (player.muteki) return;\r\n\r\n      // var offsetX = (GAMEAREA_WIDTH * 0.5 - this.player.x) * 0.2;\r\n      var offsetX = 0;\r\n\r\n      var bs = bullets.slice();\r\n      for (var bi = 0, blen = bs.length; bi < blen; bi++) {\r\n        var b = bs[bi];\r\n        if (b.hitTest(player.x - offsetX, player.y)) {\r\n          this.flare(\"miss\");\r\n          console.log(\"miss by bullet\");\r\n          return;\r\n        }\r\n      }\r\n    },\r\n    _hitTestEnemyVsPlayer: function() {\r\n      var enemies = this.mainLayer.enemyLayer.children;\r\n      var player = this.player;\r\n\r\n      if (player.muteki) return;\r\n      \r\n      // var offsetX = (GAMEAREA_WIDTH * 0.5 - this.player.x) * 0.2;\r\n      var offsetX = 0;\r\n\r\n      var es = enemies.slice();\r\n      for (var ei = 0, elen = es.length; ei < elen; ei++) {\r\n        var e = es[ei];\r\n        if (!e._active) continue;\r\n        if (e.hitTest(player.x + offsetX, player.y)) {\r\n          this.flare(\"miss\");\r\n          console.log(\"miss by enemy\");\r\n          return;\r\n        }\r\n      }\r\n    },\r\n\r\n    launchEnemy: function(enemy) {\r\n      this.mainLayer.enemyLayer.addChild(enemy);\r\n    },\r\n\r\n    kill: function(enemy) {\r\n      this.gameData.flare(\"kill\", {\r\n        enemy: enemy\r\n      });\r\n    },\r\n\r\n    onmiss: function() {\r\n      this.gameData.flare(\"miss\");\r\n      var player = this.player;\r\n      player.miss();\r\n      if (this.gameData.zanki < 0) {\r\n        // TODO gameover\r\n      } else {\r\n        this.timer(60, function() {\r\n          player.launch();\r\n        });\r\n      }\r\n    },\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.GenerateAssetScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function(params) {\r\n      this.superInit();\r\n      this.one(\"enterframe\", function() {\r\n        this.generate(params.assetType);\r\n      });\r\n    },\r\n\r\n    generate: function(assetType) {\r\n      switch (assetType) {\r\n        case \"stage0\":\r\n          ps.TextureEdit.outline(\"enemy_stage0\", \"red\");\r\n\r\n          ps.TextureEdit.dark(\"enemy_stage0\");\r\n\r\n          break;\r\n\r\n        default:\r\n          ps.TextureEdit.outline(\"bullet\", \"rgba(255,180,0,0.5)\", 2);\r\n          ps.TextureEdit.outline(\"player\", \"rgba(0,100,255,0.5)\", 2);\r\n          ps.TextureEdit.outline(\"bomb\", \"lightgreen\", 2);\r\n\r\n          var c = phina.graphics.Canvas().setSize(32, 32);\r\n          c.clearColor(\"rgba(255, 255, 255, 0.5)\");\r\n          phina.asset.AssetManager.set(\"image\", \"particleW\", c);\r\n\r\n          c = phina.graphics.Canvas().setSize(32, 32);\r\n          c.clearColor(\"hsla(0, 100%, 70%, 0.5)\");\r\n          phina.asset.AssetManager.set(\"image\", \"particleR\", c);\r\n\r\n          c = phina.graphics.Canvas().setSize(32, 32);\r\n          c.clearColor(\"hsla(60, 100%, 70%, 0.5)\");\r\n          phina.asset.AssetManager.set(\"image\", \"particleY\", c);\r\n\r\n          c = phina.graphics.Canvas().setSize(32, 32);\r\n          c.clearColor(\"hsla(120, 100%, 70%, 0.5)\");\r\n          phina.asset.AssetManager.set(\"image\", \"particleG\", c);\r\n\r\n          c = phina.graphics.Canvas().setSize(32, 32);\r\n          c.clearColor(\"hsla(240, 100%, 70%, 0.5)\");\r\n          phina.asset.AssetManager.set(\"image\", \"particleB\", c);\r\n\r\n          break;\r\n      }\r\n\r\n      this.exit();\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.LoadingScene\", {\r\n    superClass: \"phina.game.LoadingScene\",\r\n\r\n    init: function(params) {\r\n      this.superInit({\r\n        assets: ps.Assets.get(params.assetType),\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        lie: false,\r\n        exitType: \"auto\",\r\n      });\r\n      this.fromJSON({\r\n        backgroundColor: \"black\",\r\n        children: {\r\n          label: {\r\n            className: \"ps.TitleLogoLabel\",\r\n            arguments: {\r\n              text: \"downloading\"\r\n            },\r\n            x: SCREEN_WIDTH * 0.5,\r\n            y: SCREEN_HEIGHT * 0.5,\r\n            onenterframe: function(e) {\r\n              var c = ~~(e.app.ticker.frame / 10) % 5;\r\n              this.text = \"downloading\" + \".\".repeat(c);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  });\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.NameEntryScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n      this.fromJSON({\r\n        children: {\r\n          label: {\r\n            className: \"ps.TitleLogoLabel\",\r\n            arguments: {\r\n              text: \"name entry\"\r\n            },\r\n            x: GAMEAREA_WIDTH * 0.5,\r\n            y: GAMEAREA_HEIGHT * 0.5,\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.ResultScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function(params) {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n\r\n      this.fromJSON({\r\n        gameData: params.gameData,\r\n        children: {\r\n          label: {\r\n            className: \"ps.TitleLogoLabel\",\r\n            arguments: {\r\n              text: \"result\"\r\n            },\r\n            x: GAMEAREA_WIDTH * 0.5,\r\n            y: GAMEAREA_HEIGHT * 0.5,\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.SettingScene\", {\r\n    superClass: \"phina.game.ManagerScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        scenes: [\r\n\r\n          {\r\n            label: \"top\",\r\n            className: \"ps.settingscene.Top\",\r\n          },\r\n\r\n        ],\r\n      });\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.settingscene.Top\", {\r\n    superClass: \"phina.app.CanvasScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n    }\r\n  });\r\n\r\n});","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.TitleScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n\r\n      this.fromJSON({\r\n        children: {\r\n          title: {\r\n            className: \"ps.TitleLogoLabel\",\r\n            arguments: {\r\n              fontSize: FONT_SIZE_XL,\r\n            },\r\n            x: SCREEN_WIDTH * 0.5,\r\n            y: SCREEN_HEIGHT * 0.5,\r\n          }\r\n        }\r\n      });\r\n\r\n      // TODO\r\n      this.tweener.wait(500).call(function() {\r\n        this.exit(\"arcadeMode\");\r\n      }.bind(this));\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.TutorialScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n      this.fromJSON({\r\n        children: {\r\n          label: {\r\n            className: \"ps.TitleLogoLabel\",\r\n            arguments: {\r\n              text: \"tutorial\"\r\n            },\r\n            x: GAMEAREA_WIDTH * 0.5,\r\n            y: GAMEAREA_HEIGHT * 0.5,\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  /**\r\n   * arcadeモード\r\n   */\r\n  phina.define(\"ps.ArcadeModeSequence\", {\r\n    superClass: \"phina.game.ManagerScene\",\r\n    \r\n    init: function() {\r\n      \r\n      var gameData = ps.GameData();\r\n      \r\n      this.superInit({\r\n        scenes: [\r\n\r\n          Array.range(0, 5).map(function(stageId) {\r\n            var stageName = \"stage{0}\".format(stageId);\r\n            if (stageId < 4) {\r\n              next = \"stage{0}preload\".format(stageId);\r\n            } else {\r\n              next = \"ending\";\r\n            }\r\n            return [\r\n\r\n              {\r\n                label: stageName + \"preload\",\r\n                className: \"ps.LoadingScene\",\r\n                arguments: {\r\n                  assetType: stageName\r\n                },\r\n              },\r\n\r\n              {\r\n                label: stageName + \"generate\",\r\n                className: \"ps.GenerateAssetScene\",\r\n                arguments: {\r\n                  assetType: stageName\r\n                },\r\n              },\r\n\r\n              {\r\n                label: stageName,\r\n                className: \"ps.GameScene\",\r\n                arguments: {\r\n                  stageId: stageId,\r\n                  gameData: gameData,\r\n                },\r\n              },\r\n\r\n              {\r\n                label: stageName + \"result\",\r\n                className: \"ps.ResultScene\",\r\n                arguments: {\r\n                  gameData: gameData,\r\n                },\r\n              },\r\n\r\n            ];\r\n          }),\r\n\r\n          {\r\n            label: \"ending\",\r\n            className: \"ps.EndingScene\",\r\n          },\r\n\r\n          {\r\n            label: \"gameover\",\r\n            className: \"ps.GameoverScene\",\r\n          },\r\n\r\n          {\r\n            label: \"nameEntry\",\r\n            className: \"ps.NameEntryScene\",\r\n          },\r\n\r\n        ].flatten(),\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.MainSequence\", {\r\n    superClass: \"phina.game.ManagerScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        scenes: [\r\n\r\n          {\r\n            label: \"load\",\r\n            className: \"ps.LoadingScene\",\r\n            arguments: {\r\n              assetType: \"common\"\r\n            },\r\n          },\r\n\r\n          {\r\n            label: \"generate\",\r\n            className: \"ps.GenerateAssetScene\",\r\n          },\r\n\r\n          {\r\n            label: \"title\",\r\n            className: \"ps.TitleScene\",\r\n          },\r\n\r\n          {\r\n            label: \"arcadeMode\",\r\n            className: \"ps.ArcadeModeSequence\",\r\n            nextLabel: \"title\",\r\n          },\r\n\r\n          {\r\n            label: \"tutorial\",\r\n            className: \"ps.TutorialScene\",\r\n            nextLabel: \"title\",\r\n          },\r\n\r\n          {\r\n            label: \"setting\",\r\n            className: \"ps.SettingScene\",\r\n            nextLabel: \"title\",\r\n          },\r\n\r\n          {\r\n            label: \"ranking\",\r\n            className: \"ps.RankingScene\",\r\n            nextLabel: \"title\",\r\n          },\r\n\r\n        ],\r\n      });\r\n    }\r\n  });\r\n\r\n});","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.RankingScene\", {\r\n    superClass: \"phina.display.CanvasScene\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        width: SCREEN_WIDTH,\r\n        height: SCREEN_HEIGHT,\r\n        backgroundColor: \"black\",\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Background0\", {\r\n    superClass: \"ps.BackgroundLayer\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        backgroundColor: ps.Color.pri[1],\r\n        fill: ps.Color.pria[7].format(0.2),\r\n        stroke: ps.Color.pri[4],\r\n      });\r\n\r\n      this.camera.x = 2;\r\n      this.camera.y = 35;\r\n      this.camera.z = 8;\r\n      this.camera.targetY = 3;\r\n      var frame = 0;\r\n      this.camera.on(\"enterframe\", function(e) {\r\n        this.y = 16 + Math.cos(frame * 0.001) * 13;\r\n        frame += 1;\r\n      });\r\n\r\n      var self = this;\r\n\r\n      var dx = 0.04;\r\n      var dz = 0.16;\r\n\r\n      var rangeX = 3.0 * 5.0;\r\n      var rangeZ = 4.0 * 5.6;\r\n\r\n      // 床\r\n      var vertices2 = [\r\n        [0, 0, 0],\r\n      ];\r\n      Array.range(-10, 10).forEach(function(z) {\r\n        Array.range(-10, 10).forEach(function(x) {\r\n          ps.bg.Polygon({\r\n              vertices: vertices2,\r\n            })\r\n            .setTranslation(x * 2.6, 0, z * 2.6)\r\n            .addChildTo(self)\r\n            .on(\"enterframe\", function() {\r\n              this.x += dx;\r\n              this.z += dz;\r\n\r\n              if (this.x < -rangeX) this.x += rangeX * 2;\r\n              if (rangeX < this.x) this.x += -rangeX * 2;\r\n              if (this.z < -rangeZ) this.z += rangeZ * 2;\r\n              if (rangeZ < this.z) this.z += -rangeZ * 2;\r\n            });\r\n        });\r\n      });\r\n\r\n      // 建造物\r\n      var vertices = [\r\n        [-0.7, 0, -0.7],\r\n        [-0.7, 0, +0.7],\r\n        [+0.7, 0, +0.7],\r\n        [+0.7, 0, -0.7],\r\n      ];\r\n      var random = phina.util.Random(12345);\r\n      Array.range(-5, 5).forEach(function(z) {\r\n        Array.range(-5, 5).forEach(function(x) {\r\n          Array.range(0, random.randint(6, 11)).forEach(function(y) {\r\n            ps.bg.Polygon({\r\n                vertices: vertices,\r\n              })\r\n              .setTranslation(x * 3.0, y * 0.21, z * 4.0)\r\n              .addChildTo(self)\r\n              .on(\"enterframe\", function() {\r\n                this.x += dx;\r\n                this.z += dz;\r\n\r\n                if (this.x < -rangeX) this.x += rangeX * 2;\r\n                if (rangeX < this.x) this.x += -rangeX * 2;\r\n                if (this.z < -rangeZ) this.z += rangeZ * 2;\r\n                if (rangeZ < this.z) this.z += -rangeZ * 2;\r\n              });\r\n          });\r\n        });\r\n      });\r\n    },\r\n    \r\n    _accessor: {\r\n      cameraOffsetX: {\r\n        get: function() {\r\n          return this._cameraOffsetX;\r\n        },\r\n        set: function(v) {\r\n          this._cameraOffsetX = v;\r\n          this.camera.x = 2 + this._cameraOffsetX * -0.1;\r\n          this.camera.targetX = this._cameraOffsetX * -0.1;\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Background1\", {\r\n    superClass: \"ps.BackgroundLayer\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        backgroundColor: ps.Color.sec0[1],\r\n        fill: ps.Color.sec0a[8].format(0.1),\r\n        stroke: ps.Color.sec0[8],\r\n      });\r\n\r\n      this.camera.x = 5;\r\n      this.camera.y = 0.5;\r\n      this.camera.z = 10;\r\n      this.camera.targetX = 0;\r\n      this.camera.targetY = 0.5;\r\n      this.camera.targetZ = 0;\r\n      var frame = 0;\r\n      this.camera.on(\"enterframe\", function(e) {\r\n        this.targetY = -2 + Math.sin(frame * 0.002) * -2;\r\n        frame += 1;\r\n      });\r\n\r\n      var self = this;\r\n\r\n      var dx = 0.05;\r\n      var dz = 0.10;\r\n\r\n      var rangeX = 3.0 * 5.0;\r\n      var rangeZ = 4.0 * 5.6;\r\n\r\n      // 床\r\n      var vertices2 = [\r\n        [0, 0, 0],\r\n      ];\r\n      Array.range(-10, 10).forEach(function(z) {\r\n        Array.range(-10, 10).forEach(function(x) {\r\n          [-1, 1].forEach(function(y) {\r\n            ps.bg.Polygon({\r\n                vertices: vertices2,\r\n              })\r\n              .setTranslation(x * 2.6, y * 2.0, z * 2.6)\r\n              .addChildTo(self)\r\n              .on(\"enterframe\", function() {\r\n                this.x += dx;\r\n                this.z += dz;\r\n\r\n                if (this.x < -rangeX) this.x += rangeX * 2;\r\n                if (rangeX < this.x) this.x += -rangeX * 2;\r\n                if (this.z < -rangeZ) this.z += rangeZ * 2;\r\n                if (rangeZ < this.z) this.z += -rangeZ * 2;\r\n              });\r\n          });\r\n        });\r\n      });\r\n\r\n      // 建造物\r\n      var vertices = [\r\n        [-0.5, 0, -0.5],\r\n        [-0.5, 0, +0.5],\r\n        [+0.5, 0, +0.5],\r\n        [+0.5, 0, -0.5],\r\n      ];\r\n      var random = phina.util.Random(12345);\r\n      Array.range(-5, 5).forEach(function(z) {\r\n        Array.range(-5, 5).forEach(function(x) {\r\n          [-1, 1].forEach(function(y) {\r\n            ps.bg.Polygon({\r\n                vertices: vertices,\r\n              })\r\n              .setTranslation(x * 3.0, y * 2.0, z * 3.0)\r\n              .addChildTo(self)\r\n              .on(\"enterframe\", function() {\r\n                this.x += dx;\r\n                this.z += dz;\r\n\r\n                if (this.x < -rangeX) this.x += rangeX * 2;\r\n                if (rangeX < this.x) this.x += -rangeX * 2;\r\n                if (this.z < -rangeZ) this.z += rangeZ * 2;\r\n                if (rangeZ < this.z) this.z += -rangeZ * 2;\r\n              });\r\n          });\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Background2\", {\r\n    superClass: \"ps.BackgroundLayer\",\r\n\r\n    init: function() {\r\n      this.superInit({\r\n        backgroundColor: ps.Color.pri[1],\r\n        fill: ps.Color.pria[7].format(0.2),\r\n        stroke: ps.Color.pri[4],\r\n      });\r\n\r\n      this.camera.x = 2;\r\n      this.camera.y = 35;\r\n      this.camera.z = 8;\r\n      this.camera.targetY = 3;\r\n      var frame = 0;\r\n      this.camera.on(\"enterframe\", function(e) {\r\n        this.y = 16 + Math.cos(frame * 0.001) * 13;\r\n        frame += 1;\r\n      });\r\n\r\n      var self = this;\r\n\r\n      var dx = 0.04;\r\n      var dz = 0.16;\r\n\r\n      var rangeX = 3.0 * 5.0;\r\n      var rangeZ = 4.0 * 5.6;\r\n\r\n      // 床\r\n      var vertices2 = [\r\n        [0, 0, 0],\r\n      ];\r\n      Array.range(-10, 10).forEach(function(z) {\r\n        Array.range(-10, 10).forEach(function(x) {\r\n          ps.bg.Polygon({\r\n              vertices: vertices2,\r\n            })\r\n            .setTranslation(x * 2.6, 0, z * 2.6)\r\n            .addChildTo(self)\r\n            .on(\"enterframe\", function() {\r\n              this.x += dx;\r\n              this.z += dz;\r\n\r\n              if (this.x < -rangeX) this.x += rangeX * 2;\r\n              if (rangeX < this.x) this.x += -rangeX * 2;\r\n              if (this.z < -rangeZ) this.z += rangeZ * 2;\r\n              if (rangeZ < this.z) this.z += -rangeZ * 2;\r\n            });\r\n        });\r\n      });\r\n\r\n      // 建造物\r\n      var vertices = [\r\n        [-0.7, 0, -0.7],\r\n        [-0.7, 0, +0.7],\r\n        [+0.7, 0, +0.7],\r\n        [+0.7, 0, -0.7],\r\n      ];\r\n      var random = phina.util.Random(12345);\r\n      Array.range(-5, 5).forEach(function(z) {\r\n        Array.range(-5, 5).forEach(function(x) {\r\n          Array.range(0, random.randint(6, 11)).forEach(function(y) {\r\n            ps.bg.Polygon({\r\n                vertices: vertices,\r\n              })\r\n              .setTranslation(x * 3.0, y * 0.21, z * 4.0)\r\n              .addChildTo(self)\r\n              .on(\"enterframe\", function() {\r\n                this.x += dx;\r\n                this.z += dz;\r\n\r\n                if (this.x < -rangeX) this.x += rangeX * 2;\r\n                if (rangeX < this.x) this.x += -rangeX * 2;\r\n                if (this.z < -rangeZ) this.z += rangeZ * 2;\r\n                if (rangeZ < this.z) this.z += -rangeZ * 2;\r\n              });\r\n          });\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Stage\", {\r\n    superClass: \"phina.util.EventDispatcher\",\r\n\r\n    waitFor: -1,\r\n    sequencer: null,\r\n    random: null,\r\n\r\n    lock: false,\r\n\r\n    init: function() {\r\n      this.superInit();\r\n      this.sequencer = ps.StageSequancer();\r\n      this.random = phina.util.Random(12345);\r\n    },\r\n\r\n    update: function(app) {\r\n      var frame = app.ticker.frame;\r\n      while (this.sequencer.hasNext() && this.waitFor <= frame) {\r\n        this.sequencer.next().execute(app, app.currentScene, this);\r\n      }\r\n    },\r\n\r\n    _static: {\r\n      create: function(stageId) {\r\n        switch (stageId) {\r\n          case 0:\r\n            return ps.Stage0();\r\n            // TODO\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.StageSequancer\", {\r\n    \r\n    cur: 0,\r\n\r\n    init: function() {\r\n      this.seq = [];\r\n    },\r\n\r\n    hasNext: function() {\r\n      return this.cur < this.seq.length;\r\n    },\r\n\r\n    addTask: function(task) {\r\n      this.seq.push(task);\r\n      return this;\r\n    },\r\n\r\n    next: function() {\r\n      var task = this.seq[this.cur];\r\n      this.cur += 1;\r\n      return task;\r\n    },\r\n\r\n    wait: function(frame) {\r\n      return this.addTask(ps.WaitTask(frame));\r\n    },\r\n    \r\n    repeatStart: function(time) {\r\n      var self = this;\r\n      return this.addTask(ps.CallFuncTask(function() {\r\n        self.backCur = self.cur;\r\n        self.time = time;\r\n      }));\r\n    },\r\n    repeatEnd: function() {\r\n      var self = this;\r\n      return this.addTask(ps.CallFuncTask(function() {\r\n        self.time -= 1;\r\n        if (0 < self.time) {\r\n          self.cur = self.backCur;\r\n        }\r\n      }));\r\n    },\r\n\r\n    startBgm: function(bgmData) {\r\n      return this.addTask(ps.StartBgmTask(bgmData));\r\n    },\r\n\r\n    stopBgm: function(fadeOut) {\r\n      return this.addTask(ps.StopBgmTask(fadeOut));\r\n    },\r\n\r\n    warning: function() {\r\n      return this.addTask(ps.WarningTask());\r\n    },\r\n\r\n    launchEnemy: function(enemyClassName, params, lock) {\r\n      return this.addTask(ps.LaunchEnemyTask(enemyClassName, params, lock));\r\n    },\r\n\r\n    launchEnemyUnit: function(enemyClassName, params) {\r\n      return this.addTask(ps.LaunchEnemyUnitTask(enemyClassName, params));\r\n    },\r\n    \r\n    launchEnemyLoop: function(enemyClassName, params) {\r\n      return this.addTask(ps.LaunchEnemyLoopTask(enemyClassName, params));\r\n    },\r\n\r\n    launchBoss: function(bossClassName) {\r\n      return this.addTask(ps.LaunchBossTask(bossClassName));\r\n    },\r\n\r\n    call: function(func) {\r\n      return this.addTask(ps.CallFuncTask(func));\r\n    },\r\n\r\n    unlock: function() {\r\n      return this.addTask(ps.CallFuncTask(function(app, scene, stage) {\r\n        stage.lock = false;\r\n      }));\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.StageTask\", {\r\n    init: function() {},\r\n    execute: function(app, gameScene, stage) {}\r\n  });\r\n\r\n  phina.define(\"ps.WaitTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    frame: 0,\r\n\r\n    init: function(frame) {\r\n      this.frame = frame;\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {\r\n      stage.waitFor = app.ticker.frame + this.frame;\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.StartBgmTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    bgmData: null,\r\n\r\n    init: function(bgmData) {\r\n      this.superInit();\r\n      this.bgmData = bgmData;\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {\r\n      ps.SoundManager.startBgm(this.bgmData);\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.StopBgmTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    init: function(fadeOut) {\r\n      this.superInit();\r\n      this.fadeOut = fadeOut;\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {\r\n      ps.SoundManager.stopBgm(this.fadeOut);\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.WarningTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {}\r\n  });\r\n\r\n  phina.define(\"ps.LaunchEnemyTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    enemyClassName: null,\r\n    params: null,\r\n    lock: false,\r\n\r\n    init: function(enemyClassName, params, lock) {\r\n      this.superInit();\r\n      this.enemyClassName = enemyClassName;\r\n      this.params = params.$safe({\r\n        x: GAMEAREA_WIDTH * 0.5,\r\n        y: GAMEAREA_HEIGHT * -0.1,\r\n        wait: 0,\r\n      });\r\n      this.lock = lock;\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {\r\n      if (stage.lock) return;\r\n\r\n      var EnemyClazz = phina.using(this.enemyClassName);\r\n      var params = this.params;\r\n      var enemy = EnemyClazz(params);\r\n      gameScene.launchEnemy(enemy);\r\n\r\n      stage.lock = this.lock;\r\n      if (this.lock) {\r\n        enemy.on(\"killed\", function() {\r\n          stage.lock = false;\r\n        });\r\n        enemy.on(\"annihilated\", function() {\r\n          stage.lock = false;\r\n        });\r\n        enemy.on(\"removed\", function() {\r\n          stage.lock = false;\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.LaunchEnemyUnitTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    params: null,\r\n\r\n    init: function(enemyClassName, params) {\r\n      this.superInit();\r\n      this.params = params.$safe({\r\n        enemyClassName: enemyClassName,\r\n        x: GAMEAREA_WIDTH * 0.5,\r\n        y: GAMEAREA_HEIGHT * -0.1,\r\n        formation: \"basic0\",\r\n        wait: 0,\r\n      });\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {\r\n      if (stage.lock) return;\r\n      \r\n      var enemyUnit = ps.EnemyUnit(this.params);\r\n      gameScene.launchEnemy(enemyUnit);\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.LaunchEnemyLoopTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    params: null,\r\n\r\n    init: function(enemyClassName, params) {\r\n      this.superInit();\r\n      this.params = params.$safe({\r\n        enemyClassName: enemyClassName,\r\n        x: GAMEAREA_WIDTH * 0.5,\r\n        y: GAMEAREA_HEIGHT * -0.1,\r\n        maxCount: 5,\r\n        limitAge: 300,\r\n        wait: 0,\r\n      });\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {\r\n      if (stage.lock) return;\r\n\r\n      var enemyLooper = ps.EnemyLooper(this.params);\r\n      gameScene.launchEnemy(enemyLooper);\r\n    }\r\n  });\r\n\r\n  phina.define(\"ps.LaunchBossTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    bossClassName: null,\r\n\r\n    init: function(bossClassName, params) {\r\n      this.superInit();\r\n      this.bossClassName = bossClassName;\r\n      this.params = params;\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {}\r\n  });\r\n\r\n  phina.define(\"ps.CallFuncTask\", {\r\n    superClass: \"ps.StageTask\",\r\n\r\n    func: null,\r\n\r\n    init: function(func) {\r\n      this.superInit();\r\n      this.func = func;\r\n    },\r\n\r\n    execute: function(app, gameScene, stage) {\r\n      this.func(app, gameScene, stage);\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Stage0\", {\r\n    superClass: \"ps.Stage\",\r\n\r\n    backgroundClassName: \"ps.Background0\",\r\n\r\n    init: function() {\r\n      this.superInit();\r\n\r\n      var x = function(v) {\r\n        return GAMEAREA_WIDTH * v * 0.1;\r\n      };\r\n      var y = function(v) {\r\n        return GAMEAREA_HEIGHT * v * 0.1;\r\n      };\r\n\r\n      this.sequencer.startBgm()\r\n\r\n      // .wait(250)\r\n      //   .launchEnemy(\"ps.Yukishiro1\", {\r\n      //     x: x(+5),\r\n      //     y: y(-1),\r\n      //   }, true)\r\n\r\n      // .wait(200)\r\n\r\n      // .repeatStart(60)\r\n\r\n      .wait(200)\r\n        .launchEnemyLoop(\"ps.Kiryu1\", {\r\n          x: x(5),\r\n          y: -32,\r\n          maxCount: 100,\r\n          limitAge: 1000,\r\n        })\r\n\r\n      // .repeatEnd()\r\n\r\n      ;\r\n    }\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n  // Color Palette by Paletton.com\r\n  // Palette URL: http://paletton.com/#uid=50f1n0kmGpNdfBfixtwqklHuEgU\r\n\r\n  phina.define(\"ps.Color\", {\r\n    init: function() {},\r\n    _static: {\r\n      pri: [],\r\n      sec0: [],\r\n      sec1: [],\r\n\r\n      initialize: function(scene) {\r\n        ps.Color.pri = [];\r\n        ps.Color.sec0 = [];\r\n        ps.Color.sec1 = [];\r\n        ps.Color.pria = [];\r\n        ps.Color.sec0a = [];\r\n        ps.Color.sec1a = [];\r\n\r\n        var p0 = 21;\r\n        var r = 140;\r\n        var s0 = (p0 - r + 360) % 360;\r\n        var s1 = (p0 + r + 360) % 360;\r\n\r\n        var size = 16;\r\n        var sMin = 48;\r\n        var sMax = 90;\r\n        var sLev = (sMax - sMin) / (size - 1);\r\n        var hMin = 5;\r\n        var hMax = 84;\r\n        var hLev = (hMax - hMin) / (size - 1);\r\n        Array.range(0, size).forEach(function(i) {\r\n          var s = Math.floor(sMin + sLev * i);\r\n          var h = Math.floor(hMin + hLev * i);\r\n          ps.Color.pri[i] = \"hsl({0},{1}%,{2}%)\"    .format(p0, s, h);\r\n          ps.Color.sec0[i] = \"hsl({0},{1}%,{2}%)\"   .format(s0, s, h);\r\n          ps.Color.sec1[i] = \"hsl({0},{1}%,{2}%)\"   .format(s1, s, h);\r\n          ps.Color.pria[i] = \"hsla({0},{1}%,{2}%,\"  .format(p0, s, h) + \"{0})\";\r\n          ps.Color.sec0a[i] = \"hsla({0},{1}%,{2}%,\" .format(s0, s, h) + \"{0})\";\r\n          ps.Color.sec1a[i] = \"hsla({0},{1}%,{2}%,\" .format(s1, s, h) + \"{0})\";\r\n        });\r\n\r\n        if (scene) ps.Color.test().addChildTo(scene);\r\n      },\r\n\r\n      test: function() {\r\n        var r = phina.display.CanvasElement();\r\n        ps.Color.pri.forEach(function(c, i) {\r\n          phina.display.RectangleShape({\r\n              width: 20,\r\n              height: 20,\r\n              fill: c,\r\n              stroke: null,\r\n            })\r\n            .setPosition(20 + i * 20, 20 + 20)\r\n            .addChildTo(r);\r\n        });\r\n\r\n        ps.Color.sec0.forEach(function(c, i) {\r\n          phina.display.RectangleShape({\r\n              width: 20,\r\n              height: 20,\r\n              fill: c,\r\n              stroke: null,\r\n            })\r\n            .setPosition(20 + i * 20, 20 + 0)\r\n            .addChildTo(r);\r\n        });\r\n\r\n        ps.Color.sec1.forEach(function(c, i) {\r\n          phina.display.RectangleShape({\r\n              width: 20,\r\n              height: 20,\r\n              fill: c,\r\n              stroke: null,\r\n            })\r\n            .setPosition(20 + i * 20, 20 + 40)\r\n            .addChildTo(r);\r\n        });\r\n\r\n        return r;\r\n      }\r\n    },\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.FramebasedTweener\", {\r\n    superClass: 'phina.accessory.Accessory',\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    init: function(target) {\r\n      this.superInit(target);\r\n\r\n      this._loop = false;\r\n      this._init();\r\n    },\r\n\r\n    _init: function() {\r\n      this._tasks = [];\r\n      this._index = 0;\r\n      this.playing = true;\r\n      this._update = this._updateTask;\r\n    },\r\n\r\n    update: function(app) {\r\n      this._update(app);\r\n    },\r\n\r\n    to: function(props, duration, easing) {\r\n      this._add({\r\n        type: 'tween',\r\n        mode: 'to',\r\n        props: props,\r\n        duration: duration,\r\n        easing: easing,\r\n      });\r\n      return this;\r\n    },\r\n\r\n    by: function(props, duration, easing) {\r\n      this._add({\r\n        type: 'tween',\r\n        mode: 'by',\r\n        props: props,\r\n        duration: duration,\r\n        easing: easing,\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    from: function(props, duration, easing) {\r\n      this._add({\r\n        type: 'tween',\r\n        mode: 'from',\r\n        props: props,\r\n        duration: duration,\r\n        easing: easing,\r\n      });\r\n      return this;\r\n    },\r\n\r\n    wait: function(time) {\r\n      this._add({\r\n        type: 'wait',\r\n        data: {\r\n          limit: time,\r\n        },\r\n      });\r\n      return this;\r\n    },\r\n\r\n    call: function(func, self, args) {\r\n      this._add({\r\n        type: 'call',\r\n        data: {\r\n          func: func,\r\n          self: self || this,\r\n          args: args,\r\n        },\r\n      });\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * プロパティをセット\r\n     * @param {Object} key\r\n     * @param {Object} value\r\n     */\r\n    set: function(key, value) {\r\n      var values = null;\r\n      if (arguments.length == 2) {\r\n        values = {};\r\n        values[key] = value;\r\n      } else {\r\n        values = key;\r\n      }\r\n      this._tasks.push({\r\n        type: \"set\",\r\n        data: {\r\n          values: values\r\n        }\r\n      });\r\n\r\n      return this;\r\n    },\r\n\r\n    moveTo: function(x, y, duration, easing) {\r\n      return this.to({\r\n        x: x,\r\n        y: y\r\n      }, duration, easing);\r\n    },\r\n    moveBy: function(x, y, duration, easing) {\r\n      return this.by({\r\n        x: x,\r\n        y: y\r\n      }, duration, easing);\r\n    },\r\n\r\n    fade: function(value, duration, easing) {\r\n      return this.to({\r\n        alpha: value\r\n      }, duration, easing);\r\n    },\r\n\r\n    fadeOut: function(duration, easing) {\r\n      return this.fade(0.0, duration, easing)\r\n    },\r\n\r\n    fadeIn: function(duration, easing) {\r\n      return this.fade(1.0, duration, easing)\r\n    },\r\n\r\n    /**\r\n     * アニメーション開始\r\n     */\r\n    play: function() {\r\n      this.playing = true;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * アニメーションを一時停止\r\n     */\r\n    pause: function() {\r\n      this.playing = false;\r\n      return this;\r\n    },\r\n\r\n    stop: function() {\r\n      this.playing = false;\r\n      this.rewind();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * アニメーションを巻き戻す\r\n     */\r\n    rewind: function() {\r\n      this._update = this._updateTask;\r\n      this._index = 0;\r\n      this.play();\r\n      return this;\r\n    },\r\n\r\n    yoyo: function() {\r\n      // TODO: 最初の値が分からないので反転できない...\r\n      this._update = this._updateTask;\r\n      this._index = 0;\r\n      this._tasks.each(function(task) {\r\n        if (task.type === 'tween') {\r\n\r\n        }\r\n      });\r\n      this.play();\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * アニメーションループ設定\r\n     * @param {Boolean} flag\r\n     */\r\n    setLoop: function(flag) {\r\n      this._loop = flag;\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * アニメーションをクリア\r\n     */\r\n    clear: function() {\r\n      this._init();\r\n      return this;\r\n    },\r\n\r\n    fromJSON: function(json) {\r\n      if (json.loop !== undefined) {\r\n        this.setLoop(json.loop);\r\n      }\r\n\r\n      json.tweens.each(function(t) {\r\n        var t = t.clone();\r\n        var method = t.shift();\r\n        this[method].apply(this, t);\r\n      }, this);\r\n\r\n      return this;\r\n    },\r\n\r\n    _add: function(params) {\r\n      this._tasks.push(params);\r\n    },\r\n\r\n    _updateTask: function(app) {\r\n      if (!this.playing) return;\r\n\r\n      var task = this._tasks[this._index];\r\n      if (!task) {\r\n        if (this._loop) {\r\n          this.rewind();\r\n          this._update(app);\r\n        } else {\r\n          this.playing = false;\r\n        }\r\n        return;\r\n      } else {\r\n        ++this._index;\r\n      }\r\n\r\n      if (task.type === 'tween') {\r\n        this._tween = phina.util.Tween();\r\n\r\n        if (task.mode === 'to') {\r\n          this._tween.to(this.target, task.props, task.duration, task.easing);\r\n        } else if (task.mode === 'by') {\r\n          this._tween.by(this.target, task.props, task.duration, task.easing);\r\n        } else {\r\n          this._tween.from(this.target, task.props, task.duration, task.easing);\r\n        }\r\n        this._update = this._updateTween;\r\n        this._update(app);\r\n      } else if (task.type === 'wait') {\r\n        this._wait = {\r\n          time: 0,\r\n          limit: task.data.limit,\r\n        };\r\n\r\n        this._update = this._updateWait;\r\n        this._update(app);\r\n      } else if (task.type === 'call') {\r\n        task.data.func.apply(task.data.self, task.data.args);\r\n        // 1フレーム消費しないよう再帰\r\n        this._update(app);\r\n      } else if (task.type === 'set') {\r\n        this.target.$extend(task.data.values);\r\n        // 1フレーム消費しないよう再帰\r\n        this._update(app);\r\n      }\r\n    },\r\n\r\n    _updateTween: function(app) {\r\n      var tween = this._tween;\r\n      var time = 1;\r\n\r\n      tween.forward(time);\r\n      this.flare('tween');\r\n\r\n      if (tween.time >= tween.duration) {\r\n        delete this._tween;\r\n        this._tween = null;\r\n        this._update = this._updateTask;\r\n      }\r\n    },\r\n\r\n    _updateWait: function(app) {\r\n      var wait = this._wait;\r\n      var time = 1;\r\n      wait.time += time;\r\n\r\n      if (wait.time >= wait.limit) {\r\n        delete this._wait;\r\n        this._wait = null;\r\n        this._update = this._updateTask;\r\n      }\r\n    },\r\n  });\r\n\r\n  phina.app.Element.prototype.getter('ftweener', function() {\r\n    if (!this._tweener) {\r\n      this._tweener = ps.FramebasedTweener().attachTo(this);\r\n    }\r\n    return this._tweener;\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.SoundManager\", {\r\n    init: function() {},\r\n    _static: {\r\n      _bgmVolume: 0.0,\r\n      soundVolume: 1.0,\r\n\r\n      beforeBgm: null,\r\n      currentBgm: null,\r\n\r\n      currentFrame: 0,\r\n      _lastPlayFrame: {},\r\n\r\n      update: function(app) {\r\n        this.currentFrame = app.ticker.frame;\r\n\r\n        if (this.beforeBgm) {\r\n          this.beforeBgm.volume -= this._bgmVolume / (60 * 5);\r\n          if (this.beforeBgm.volume < 0.01) {\r\n            this.beforeBgm.stop();\r\n            this.beforeBgm = null;\r\n          }\r\n        }\r\n      },\r\n\r\n      startBgm: function(bgmData) {\r\n        bgmData = (bgmData || {}).$safe({\r\n          name: \"bgm\",\r\n          loop: true,\r\n          loopStart: 0,\r\n          loopEnd: 0,\r\n        });\r\n\r\n        if (this.currentBgm) {\r\n          if (this.beforeBgm) this.beforeBgm.stop();\r\n          this.beforeBgm = this.currentBgm;\r\n        }\r\n        this.currentBgm = phina.asset.AssetManager.get(\"sound\", bgmData.name).play();\r\n        this.currentBgm.volume = this._bgmVolume;\r\n        this.currentBgm.loop = bgmData.loop;\r\n        this.currentBgm.loopStart = bgmData.loopStart;\r\n        this.currentBgm.loopEnd = bgmData.loopEnd;\r\n      },\r\n\r\n      stopBgm: function(fadeOut) {\r\n        if (this.beforeBgm) {\r\n          this.beforeBgm.stop();\r\n          this.beforeBgm = null;\r\n        }\r\n        if (this.currentBgm) {\r\n          if (fadeOut) {\r\n            this.beforeBgm = this.currentBgm;\r\n            this.currentBgm = null;\r\n          } else {\r\n            this.currentBgm.stop();\r\n            this.currentBgm = null;\r\n          }\r\n        }\r\n      },\r\n\r\n      playSound: function(name) {\r\n        if (this._lastPlayFrame[name] !== this.currentFrame) {\r\n          var sound = phina.asset.AssetManager.get(\"sound\", name);\r\n          sound.volume = this.soundVolume;\r\n          sound.play();\r\n          this._lastPlayFrame[name] = this.currentFrame;\r\n        }\r\n      },\r\n\r\n      getBgmVolume: function() {\r\n        return this._bgmVolume;\r\n      },\r\n      setBgmVolume: function(v) {\r\n        this._bgmVolume = v;\r\n        if (this.currentBgm) this.currentBgm.volume = v;\r\n      },\r\n    },\r\n\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.TextureEdit\", {\r\n    init: function() {},\r\n    _static: {\r\n      outline: function(textureName, color, lineWidth) {\r\n        color = color || \"white\";\r\n        lineWidth = lineWidth || 1;\r\n\r\n        var texture = phina.asset.AssetManager.get(\"image\", textureName);\r\n        if (texture == null) {\r\n          return;\r\n        }\r\n        var w = texture.domElement.width;\r\n        var h = texture.domElement.height;\r\n\r\n        var src = phina.graphics.Canvas().setSize(w, h);\r\n        src.context.drawImage(texture.domElement, 0, 0);\r\n\r\n        var srcData = src.context.getImageData(0, 0, w, h);\r\n        var data = srcData.data;\r\n\r\n        var dst = phina.graphics.Canvas().setSize(w, h);\r\n        dst.fillStyle = color;\r\n        for (var y = 0; y < h; y++) {\r\n          for (var x = 0; x < w; x++) {\r\n\r\n            var cIndex = ((y + 0) * w + (x + 0)) * 4 + 3;\r\n\r\n            var lIndex = ((y + 0) * w + (x - 1)) * 4 + 3;\r\n            var rIndex = ((y + 0) * w + (x + 1)) * 4 + 3;\r\n            var tIndex = ((y - 1) * w + (x + 0)) * 4 + 3;\r\n            var bIndex = ((y + 1) * w + (x + 0)) * 4 + 3;\r\n            var l = (0 <= lIndex && lIndex < data.length) ? data[lIndex] : 255;\r\n            var r = (0 <= rIndex && rIndex < data.length) ? data[rIndex] : 255;\r\n            var t = (0 <= tIndex && tIndex < data.length) ? data[tIndex] : 255;\r\n            var b = (0 <= bIndex && bIndex < data.length) ? data[bIndex] : 255;\r\n\r\n            var a = data[cIndex];\r\n\r\n            if (a > 0 && (l == 0 || r == 0 || t == 0 || b == 0)) {\r\n              dst.fillRect(x - lineWidth * 0.5, y - lineWidth * 0.5, lineWidth, lineWidth);\r\n            }\r\n          }\r\n        }\r\n\r\n        phina.asset.AssetManager.set(\"image\", textureName + \"Outline\", dst);\r\n      },\r\n\r\n      dark: function(textureName) {\r\n        var texture = phina.asset.AssetManager.get(\"image\", textureName);\r\n        if (texture == null) {\r\n          return;\r\n        }\r\n        var w = texture.domElement.width;\r\n        var h = texture.domElement.height;\r\n\r\n        var src = phina.graphics.Canvas().setSize(w, h);\r\n        src.context.drawImage(texture.domElement, 0, 0);\r\n\r\n        var srcData = src.context.getImageData(0, 0, w, h);\r\n        var data = srcData.data;\r\n\r\n        var dst = phina.graphics.Canvas().setSize(w, h);\r\n        for (var y = 0; y < h; y++) {\r\n          for (var x = 0; x < w; x++) {\r\n\r\n            var index = (y * w + x) * 4;\r\n            var r = data[index + 0];\r\n            var g = data[index + 1];\r\n            var b = data[index + 2];\r\n            var a = data[index + 3];\r\n\r\n            if (a > 0) {\r\n              dst.fillStyle = \"rgba({0},{1},{2},{3})\".format(~~(r * 0.6), ~~(g * 0.4), ~~(b * 0.4), a / 255);\r\n              dst.fillRect(x, y, 1, 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        phina.asset.AssetManager.set(\"image\", textureName + \"Dark\", dst);\r\n      }\r\n    }\r\n  });\r\n\r\n});\r\n","phina.namespace(function() {\r\n\r\n  phina.define(\"ps.Timer\", {\r\n    superClass: \"phina.app.Element\",\r\n\r\n    init: function(time) {\r\n      this.superInit();\r\n      this.time = time;\r\n    },\r\n\r\n    update: function() {\r\n      this.time -= 1;\r\n      if (this.time <= 0) {\r\n        this.flare(\"time\");\r\n        this.remove();\r\n      }\r\n    }\r\n  });\r\n\r\n  phina.app.Element.prototype.method(\"timer\", function(time, callback) {\r\n    ps.Timer(time)\r\n      .addChildTo(this)\r\n      .on(\"time\", callback);\r\n    return this;\r\n  });\r\n\r\n});\r\n"],"sourceRoot":"/source/"}