{"version":3,"sources":["main.js","application.js","assets.js","danmaku.js","danmaku_stage0.js","danmaku_stage1.js","danmaku_stage2.js","danmaku_stage3.js","danmaku_stage4.js","bombdisplay.js","bullet.js","enemy_stage1.js","enemy.js","enemyunit.js","backgroundlayer.js","bulletlayer.js","effectlayer.js","mainlayer.js","shotlayer.js","sidebarlayer.js","hudlabel.js","itemdisplay.js","outlinedsprite.js","player.js","scorelabel.js","shot.js","titlelogolabel.js","zankidisplay.js","bulletconfig.js","gamedata.js","background.js","endingscene.js","gameoverscene.js","gamescene.js","generateassetscene.js","loadingscene.js","nameentryscene.js","resultscene.js","settingscene.js","titlescene.js","tutorialscene.js","arcademodesequence.js","mainsequence.js","rankingscene.js","background0.js","background1.js","stage.js","stage0.js","color.js","framebasedtweener.js","soundmanager.js","textureedit.js","timer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzjpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxjtvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxnpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACztvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"phina-shooter.js","sourcesContent":["var DEBUG = true;\n\nvar SCREEN_WIDTH = 480;\nvar SCREEN_HEIGHT = 320;\n// var SCREEN_WIDTH = 720;\n// var SCREEN_HEIGHT = 480;\n// var SCREEN_WIDTH = 960;\n// var SCREEN_HEIGHT = 640;\n\nvar GAMEAREA_WIDTH = SCREEN_HEIGHT * 0.7;\nvar GAMEAREA_HEIGHT = SCREEN_HEIGHT;\n\nvar SIDEBAR_WIDTH = (SCREEN_WIDTH - GAMEAREA_WIDTH) * 0.5;\nvar SIDEBAR_HEIGHT = SCREEN_HEIGHT;\n\nvar FONT_SIZE_XL = ~~(0.07 * SCREEN_WIDTH);\nvar FONT_SIZE_L = ~~(0.03 * SCREEN_WIDTH);\nvar FONT_SIZE_M = ~~(0.02 * SCREEN_WIDTH);\nvar FONT_SIZE_S = ~~(0.01 * SCREEN_WIDTH);\n\nphina.input.Keyboard.KEY_CODE[\"shot\"] = phina.input.Keyboard.KEY_CODE[\"z\"];\nphina.input.Keyboard.KEY_CODE[\"bomb\"] = phina.input.Keyboard.KEY_CODE[\"x\"];\nphina.input.Keyboard.KEY_CODE[\"start\"] = phina.input.Keyboard.KEY_CODE[\"space\"];\n\nphina.input.Gamepad.BUTTON_CODE[\"shot\"] = phina.input.Gamepad.BUTTON_CODE[\"x\"];\nphina.input.Gamepad.BUTTON_CODE[\"bomb\"] = phina.input.Gamepad.BUTTON_CODE[\"a\"];\n\nphina.main(function() {\n  ps.Color.initialize();\n\n  var app = ps.Application();\n  app.run();\n\n  if (DEBUG) app.enableStats();\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Application\", {\n    superClass: \"phina.display.CanvasApp\",\n\n    init: function() {\n      this.superInit({\n        query: \"#app\",\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n      });\n      this.fps = 60;\n      this.canvas.context.imageSmoothingEnabled = true;\n      this.domElement.style.imageRendering = \"pixelated\";\n\n      this.replaceScene(ps.MainSequence());\n\n      this.gamepads = phina.input.GamepadManager();\n    },\n\n    update: function() {\n      // this.mouse.update();\n      // this.touch.update();\n      // this.touchList.update();\n      this.keyboard.update();\n      this.gamepads.update();\n      \n      ps.SoundManager.update(this);\n    },\n\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Assets\", {\n    _static: {\n      get: function(name) {\n        switch (name) {\n\n          case \"common\":\n            return {\n              image: {\n                player: \"asset/player.png\",\n                bullet: \"asset/bullets.png\",\n                bomb: \"asset/bomb.png\",\n\n                zanki: \"asset/zankiIcon.png\",\n                bombIcon: \"asset/bombIcon.png\",\n              },\n\n              font: {\n                title: \"asset/Black_Ops_One/BlackOpsOne-Regular.ttf\",\n                main: \"asset/Press_Start_2P/PressStart2P-Regular.ttf\",\n                // mono: \"asset/VT323/VT323-Regular.ttf\",\n                mono: \"asset/Share_Tech_Mono/ShareTechMono-Regular.ttf\",\n              },\n              \n              sound: {\n                shot: \"asset/sen_ge_kijuu01.mp3\"\n              },\n            };\n\n          case \"stage0\":\n            return {\n              image: {\n                enemy_stage0: \"asset/enemy_stage0.png\",\n              },\n              sound: {\n                bgm: \"asset/ReBoot_FreeBGM.mp3\",\n              },\n            };\n\n          case \"stage1\":\n            return {\n              image: {\n                dummy: \"asset/zankiIcon.png\",\n              },\n            };\n\n          case \"stage2\":\n            return {\n              image: {\n                dummy: \"asset/zankiIcon.png\",\n              },\n            };\n\n          case \"stage3\":\n            return {\n              image: {\n                dummy: \"asset/zankiIcon.png\",\n              },\n            };\n\n          case \"stage4\":\n            return {\n              image: {\n                dummy: \"asset/zankiIcon.png\",\n              },\n            };\n\n        }\n      }\n    }\n  })\n});\n","phina.namespace(function() {\n\n  ps.danmaku = ps.danmaku || {};\n\n  var action = bulletml.dsl.action;\n  var actionRef = bulletml.dsl.actionRef;\n  var bullet = bulletml.dsl.bullet;\n  var bulletRef = bulletml.dsl.bulletRef;\n  var fire = bulletml.dsl.fire;\n  var fireRef = bulletml.dsl.fireRef;\n  var changeDirection = bulletml.dsl.changeDirection;\n  var changeSpeed = bulletml.dsl.changeSpeed;\n  var accel = bulletml.dsl.accel;\n  var wait = bulletml.dsl.wait;\n  var vanish = bulletml.dsl.vanish;\n  var repeat = bulletml.dsl.repeat;\n  var bindVar = bulletml.dsl.bindVar;\n  var notify = bulletml.dsl.notify;\n  var direction = bulletml.dsl.direction;\n  var speed = bulletml.dsl.speed;\n  var horizontal = bulletml.dsl.horizontal;\n  var vertical = bulletml.dsl.vertical;\n  var fireOption = bulletml.dsl.fireOption;\n  var offsetX = bulletml.dsl.offsetX;\n  var offsetY = bulletml.dsl.offsetY;\n  var autonomy = bulletml.dsl.autonomy;\n\n  var interval = function(v) {\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\n  };\n  var spd = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\n  };\n  var spdSeq = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\n  };\n\n  var R0 = bullet({\n    type: 4\n  });\n  var R1 = bullet({\n    type: 5\n  });\n  var R2 = bullet({\n    type: 6\n  });\n  var R3 = bullet({\n    type: 7\n  });\n  var B4 = bullet({\n    type: 8\n  });\n  var B5 = bullet({\n    type: 9\n  });\n  var R4 = bullet({\n    type: 10\n  });\n  var R5 = bullet({\n    type: 11\n  });\n  var DM = bullet({\n    dummy: true\n  });\n\n  // ザコヘリ用\n  var basic = function(s, dir) {\n    return new bulletml.Root({\n      top: action([\n        interval(10),\n        repeat(Infinity, [\n          fire(DM, spd(s), direction(dir)),\n          repeat(\"$burst + 1\", [\n            fire(R2, spdSeq(0.15), direction(0, \"sequence\")),\n          ]),\n          interval(50),\n        ]),\n      ]),\n    });\n  };\n  ps.danmaku.basic = basic(1, 0);\n  ps.danmaku.basicR1 = basic(1, -5);\n  ps.danmaku.basicL1 = basic(1, +5);\n  ps.danmaku.basicR2 = basic(1, -15);\n  ps.danmaku.basicL2 = basic(1, +15);\n  ps.danmaku.basicF = basic(1.2, 0);\n  ps.danmaku.basicFR1 = basic(1.2, -5);\n  ps.danmaku.basicFL1 = basic(1.2, +5);\n  ps.danmaku.basicFR2 = basic(1.2, -15);\n  ps.danmaku.basicFL2 = basic(1.2, +15);\n\n  // ザコヘリ3way\n  var basic3way = function(dir) {\n    return new bulletml.Root({\n      top: action([\n        interval(10),\n        repeat(Infinity, [\n          fire(DM, spd(1), direction(dir - 7)),\n          repeat(\"$burst + 1\", [\n            fire(R2, spdSeq(0), direction(0, \"sequence\")),\n            fire(R2, spdSeq(0), direction(7, \"sequence\")),\n            fire(R2, spdSeq(0), direction(7, \"sequence\")),\n            fire(DM, spdSeq(0.05), direction(-14, \"sequence\")),\n          ]),\n          interval(50),\n        ]),\n      ]),\n    });\n  };\n  ps.danmaku.basic3way = basic3way(0);\n  ps.danmaku.basic3wayR1 = basic3way(-5);\n  ps.danmaku.basic3wayL1 = basic3way(+5);\n  ps.danmaku.basic3wayR2 = basic3way(-15);\n  ps.danmaku.basic3wayL2 = basic3way(+15);\n\n  // ザコ戦車用\n  var forward = function(s, dir) {\n    return new bulletml.Root({\n      top: action([\n        interval(10),\n        repeat(Infinity, [\n          repeat(3, [\n            fire(DM, spd(s), direction(dir, \"relative\")),\n            repeat(\"$burst + 1\", [\n              fire(R2, spdSeq(0.15), direction(0, \"sequence\")),\n            ]),\n            interval(10),\n          ]),\n          interval(50),\n        ]),\n      ]),\n    });\n  };\n  ps.danmaku.forward = forward(1, 0);\n  ps.danmaku.forwardR1 = forward(1, -5);\n  ps.danmaku.forwardL1 = forward(1, +5);\n  ps.danmaku.forwardR2 = forward(1, -15);\n  ps.danmaku.forwardL2 = forward(1, +15);\n  ps.danmaku.forwardF = forward(1.2, 0);\n  ps.danmaku.forwardFR1 = forward(1.2, -5);\n  ps.danmaku.forwardFL1 = forward(1.2, +5);\n  ps.danmaku.forwardFR2 = forward(1.2, -15);\n  ps.danmaku.forwardFL2 = forward(1.2, +15);\n\n  // ザコ戦車3way\n  var forward3way = function(s, dir) {\n    return new bulletml.Root({\n      top: action([\n        interval(10),\n        repeat(Infinity, [\n          repeat(3, [\n            fire(DM, spd(s), direction(dir + \"-5\", \"relative\")),\n            repeat(\"$burst + 1\", [\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\n              fire(R2, spdSeq(0), direction(+5, \"sequence\")),\n              fire(DM, spdSeq(0.15), direction(-15, \"sequence\")),\n            ]),\n            interval(10),\n          ]),\n          interval(50),\n        ]),\n      ]),\n    });\n  };\n  ps.danmaku.forward3way = forward3way(1, 0);\n  ps.danmaku.forward3wayR1 = forward3way(1, -5);\n  ps.danmaku.forward3wayL1 = forward3way(1, +5);\n  ps.danmaku.forward3wayR2 = forward3way(1, -15);\n  ps.danmaku.forward3wayL2 = forward3way(1, +15);\n  ps.danmaku.forward3wayF = forward3way(1.2, 0);\n  ps.danmaku.forward3wayFR1 = forward3way(1.2, -5);\n  ps.danmaku.forward3wayFL1 = forward3way(1.2, +5);\n  ps.danmaku.forward3wayFR2 = forward3way(1.2, -15);\n  ps.danmaku.forward3wayFL2 = forward3way(1.2, +15);\n\n});\n","phina.namespace(function() {\n  \n  ps.danmaku = ps.danmaku || {};\n\n  var action = bulletml.dsl.action;\n  var actionRef = bulletml.dsl.actionRef;\n  var bullet = bulletml.dsl.bullet;\n  var bulletRef = bulletml.dsl.bulletRef;\n  var fire = bulletml.dsl.fire;\n  var fireRef = bulletml.dsl.fireRef;\n  var changeDirection = bulletml.dsl.changeDirection;\n  var changeSpeed = bulletml.dsl.changeSpeed;\n  var accel = bulletml.dsl.accel;\n  var wait = bulletml.dsl.wait;\n  var vanish = bulletml.dsl.vanish;\n  var repeat = bulletml.dsl.repeat;\n  var bindVar = bulletml.dsl.bindVar;\n  var notify = bulletml.dsl.notify;\n  var direction = bulletml.dsl.direction;\n  var speed = bulletml.dsl.speed;\n  var horizontal = bulletml.dsl.horizontal;\n  var vertical = bulletml.dsl.vertical;\n  var fireOption = bulletml.dsl.fireOption;\n  var offsetX = bulletml.dsl.offsetX;\n  var offsetY = bulletml.dsl.offsetY;\n  var autonomy = bulletml.dsl.autonomy;\n\n  var interval = function(v) {\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\n  };\n  var spd = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\n  };\n  var spdSeq = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\n  };\n\n  var R0 = bullet({\n    type: 4\n  });\n  var R1 = bullet({\n    type: 5\n  });\n  var R2 = bullet({\n    type: 6\n  });\n  var R3 = bullet({\n    type: 7\n  });\n  var B4 = bullet({\n    type: 8\n  });\n  var B5 = bullet({\n    type: 9\n  });\n  var R4 = bullet({\n    type: 10\n  });\n  var R5 = bullet({\n    type: 11\n  });\n  var DM = bullet({\n    dummy: true\n  });\n\n  // 黒川\n  ps.danmaku.kurokawa1 = new bulletml.Root({\n    top: action([\n      interval(20),\n      repeat(Infinity, [\n        repeat(3, [\n          fire(DM, spd(1.2)),\n          repeat(3, [\n            fire(R0, spdSeq(0), direction(0, \"sequence\")),\n            wait(6),\n          ]),\n          interval(12),\n        ]),\n        interval(50),\n      ]),\n    ]),\n  });\n\n  // 秋元\n  ps.danmaku.akimoto1 = new bulletml.Root({\n    top0: action([\n      repeat(Infinity, [\n        interval(20),\n        fire(R2, spd(1.0), direction(-30)),\n        repeat(8, [\n          fire(R2, spdSeq(0), direction(60 / 8, \"sequence\")),\n        ]),\n        interval(80),\n      ]),\n    ]),\n    top1: action([\n      repeat(Infinity, [\n        interval(50),\n        fire(R1, spd(1.2), direction(-10)),\n        repeat(6, [\n          fire(R1, spdSeq(0), direction(20 / 6, \"sequence\")),\n        ]),\n        interval(50),\n      ]),\n    ]),\n  });\n\n  // 黄瀬\n  ps.danmaku.kise1 = new bulletml.Root({\n    top: action([\n      interval(20),\n      repeat(Infinity, [\n        fire(DM, spd(0.8)),\n        repeat(12, [\n          fire(R4, spdSeq(0), direction(360 / (12 - 1), \"sequence\")),\n        ]),\n        interval(50),\n      ]),\n    ]),\n  });\n\n  // 雪城1\n  ps.danmaku.yukishiro1 = new bulletml.Root({\n    top: action([]),\n  });\n  // 雪城2\n  ps.danmaku.yukishiro2 = new bulletml.Root({\n    top: action([]),\n  });\n  // 雪城3\n  ps.danmaku.yukishiro3 = new bulletml.Root({\n    top: action([]),\n  });\n\n  // 美墨1-1\n  ps.danmaku.misumi11 = new bulletml.Root({\n    top: action([]),\n  });\n  // 美墨1-2\n  ps.danmaku.misumi12 = new bulletml.Root({\n    top: action([]),\n  });\n  // 美墨1-3\n  ps.danmaku.misumi13 = new bulletml.Root({\n    top: action([]),\n  });\n  // 美墨2-1\n  ps.danmaku.misumi21 = new bulletml.Root({\n    top: action([]),\n  });\n  // 美墨2-2\n  ps.danmaku.misumi22 = new bulletml.Root({\n    top: action([]),\n  });\n  // 美墨2-3\n  ps.danmaku.misumi23 = new bulletml.Root({\n    top: action([]),\n  });\n  // 美墨3-1\n  ps.danmaku.misumi31 = new bulletml.Root({\n    top: action([]),\n  });\n\n});\n","phina.namespace(function() {\n  \n  ps.danmaku = ps.danmaku || {};\n\n  var action = bulletml.dsl.action;\n  var actionRef = bulletml.dsl.actionRef;\n  var bullet = bulletml.dsl.bullet;\n  var bulletRef = bulletml.dsl.bulletRef;\n  var fire = bulletml.dsl.fire;\n  var fireRef = bulletml.dsl.fireRef;\n  var changeDirection = bulletml.dsl.changeDirection;\n  var changeSpeed = bulletml.dsl.changeSpeed;\n  var accel = bulletml.dsl.accel;\n  var wait = bulletml.dsl.wait;\n  var vanish = bulletml.dsl.vanish;\n  var repeat = bulletml.dsl.repeat;\n  var bindVar = bulletml.dsl.bindVar;\n  var notify = bulletml.dsl.notify;\n  var direction = bulletml.dsl.direction;\n  var speed = bulletml.dsl.speed;\n  var horizontal = bulletml.dsl.horizontal;\n  var vertical = bulletml.dsl.vertical;\n  var fireOption = bulletml.dsl.fireOption;\n  var offsetX = bulletml.dsl.offsetX;\n  var offsetY = bulletml.dsl.offsetY;\n  var autonomy = bulletml.dsl.autonomy;\n\n  var interval = function(v) {\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\n  };\n  var spd = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\n  };\n  var spdSeq = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\n  };\n\n  var R0 = bullet({\n    type: 4\n  });\n  var R1 = bullet({\n    type: 5\n  });\n  var R2 = bullet({\n    type: 6\n  });\n  var R3 = bullet({\n    type: 7\n  });\n  var B4 = bullet({\n    type: 8\n  });\n  var B5 = bullet({\n    type: 9\n  });\n  var R4 = bullet({\n    type: 10\n  });\n  var R5 = bullet({\n    type: 11\n  });\n  var DM = bullet({\n    dummy: true\n  });\n\n});\n","phina.namespace(function() {\n  \n  ps.danmaku = ps.danmaku || {};\n\n  var action = bulletml.dsl.action;\n  var actionRef = bulletml.dsl.actionRef;\n  var bullet = bulletml.dsl.bullet;\n  var bulletRef = bulletml.dsl.bulletRef;\n  var fire = bulletml.dsl.fire;\n  var fireRef = bulletml.dsl.fireRef;\n  var changeDirection = bulletml.dsl.changeDirection;\n  var changeSpeed = bulletml.dsl.changeSpeed;\n  var accel = bulletml.dsl.accel;\n  var wait = bulletml.dsl.wait;\n  var vanish = bulletml.dsl.vanish;\n  var repeat = bulletml.dsl.repeat;\n  var bindVar = bulletml.dsl.bindVar;\n  var notify = bulletml.dsl.notify;\n  var direction = bulletml.dsl.direction;\n  var speed = bulletml.dsl.speed;\n  var horizontal = bulletml.dsl.horizontal;\n  var vertical = bulletml.dsl.vertical;\n  var fireOption = bulletml.dsl.fireOption;\n  var offsetX = bulletml.dsl.offsetX;\n  var offsetY = bulletml.dsl.offsetY;\n  var autonomy = bulletml.dsl.autonomy;\n\n  var interval = function(v) {\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\n  };\n  var spd = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\n  };\n  var spdSeq = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\n  };\n\n  var R0 = bullet({\n    type: 4\n  });\n  var R1 = bullet({\n    type: 5\n  });\n  var R2 = bullet({\n    type: 6\n  });\n  var R3 = bullet({\n    type: 7\n  });\n  var B4 = bullet({\n    type: 8\n  });\n  var B5 = bullet({\n    type: 9\n  });\n  var R4 = bullet({\n    type: 10\n  });\n  var R5 = bullet({\n    type: 11\n  });\n  var DM = bullet({\n    dummy: true\n  });\n\n});\n","phina.namespace(function() {\n  \n  ps.danmaku = ps.danmaku || {};\n\n  var action = bulletml.dsl.action;\n  var actionRef = bulletml.dsl.actionRef;\n  var bullet = bulletml.dsl.bullet;\n  var bulletRef = bulletml.dsl.bulletRef;\n  var fire = bulletml.dsl.fire;\n  var fireRef = bulletml.dsl.fireRef;\n  var changeDirection = bulletml.dsl.changeDirection;\n  var changeSpeed = bulletml.dsl.changeSpeed;\n  var accel = bulletml.dsl.accel;\n  var wait = bulletml.dsl.wait;\n  var vanish = bulletml.dsl.vanish;\n  var repeat = bulletml.dsl.repeat;\n  var bindVar = bulletml.dsl.bindVar;\n  var notify = bulletml.dsl.notify;\n  var direction = bulletml.dsl.direction;\n  var speed = bulletml.dsl.speed;\n  var horizontal = bulletml.dsl.horizontal;\n  var vertical = bulletml.dsl.vertical;\n  var fireOption = bulletml.dsl.fireOption;\n  var offsetX = bulletml.dsl.offsetX;\n  var offsetY = bulletml.dsl.offsetY;\n  var autonomy = bulletml.dsl.autonomy;\n\n  var interval = function(v) {\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\n  };\n  var spd = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\n  };\n  var spdSeq = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\n  };\n\n  var R0 = bullet({\n    type: 4\n  });\n  var R1 = bullet({\n    type: 5\n  });\n  var R2 = bullet({\n    type: 6\n  });\n  var R3 = bullet({\n    type: 7\n  });\n  var B4 = bullet({\n    type: 8\n  });\n  var B5 = bullet({\n    type: 9\n  });\n  var R4 = bullet({\n    type: 10\n  });\n  var R5 = bullet({\n    type: 11\n  });\n  var DM = bullet({\n    dummy: true\n  });\n\n});\n","phina.namespace(function() {\n  \n  ps.danmaku = ps.danmaku || {};\n\n  var action = bulletml.dsl.action;\n  var actionRef = bulletml.dsl.actionRef;\n  var bullet = bulletml.dsl.bullet;\n  var bulletRef = bulletml.dsl.bulletRef;\n  var fire = bulletml.dsl.fire;\n  var fireRef = bulletml.dsl.fireRef;\n  var changeDirection = bulletml.dsl.changeDirection;\n  var changeSpeed = bulletml.dsl.changeSpeed;\n  var accel = bulletml.dsl.accel;\n  var wait = bulletml.dsl.wait;\n  var vanish = bulletml.dsl.vanish;\n  var repeat = bulletml.dsl.repeat;\n  var bindVar = bulletml.dsl.bindVar;\n  var notify = bulletml.dsl.notify;\n  var direction = bulletml.dsl.direction;\n  var speed = bulletml.dsl.speed;\n  var horizontal = bulletml.dsl.horizontal;\n  var vertical = bulletml.dsl.vertical;\n  var fireOption = bulletml.dsl.fireOption;\n  var offsetX = bulletml.dsl.offsetX;\n  var offsetY = bulletml.dsl.offsetY;\n  var autonomy = bulletml.dsl.autonomy;\n\n  var interval = function(v) {\n    return wait(\"{0} * (0.3 + (1.0 - $densityRank) * 0.7)\".format(v));\n  };\n  var spd = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v));\n  };\n  var spdSeq = function(v) {\n    return speed(\"{0} * (1.0 + $speedRank * 2.0)\".format(v), \"sequence\");\n  };\n\n  var R0 = bullet({\n    type: 4\n  });\n  var R1 = bullet({\n    type: 5\n  });\n  var R2 = bullet({\n    type: 6\n  });\n  var R3 = bullet({\n    type: 7\n  });\n  var B4 = bullet({\n    type: 8\n  });\n  var B5 = bullet({\n    type: 9\n  });\n  var R4 = bullet({\n    type: 10\n  });\n  var R5 = bullet({\n    type: 11\n  });\n  var DM = bullet({\n    dummy: true\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.BombDisplay\", {\n    superClass: \"ps.ItemDisplay\",\n\n    init: function(initialValue) {\n      this.superInit(\"bombIcon\", initialValue);\n    },\n\n  });\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Bullet\", {\n    superClass: \"ps.OutlinedSprite\",\n\n    runner: null,\n\n    init: function() {\n      this.superInit(\"bullet\", 24, 24);\n      this.age = 0;\n      this.boundingType = \"circle\";\n      this.radius = 2;\n    },\n\n    onremoved: function() {\n      this.bulletLayer.pool.push(this);\n    },\n\n    update: function(app) {\n      var runner = this.runner;\n      if (runner) {\n        var bx = this.x;\n        var by = this.y;\n        runner.x = bx;\n        runner.y = by;\n        runner.update();\n        var dx = runner.x - bx;\n        var dy = runner.y - by;\n\n        this.x += dx * ps.Bullet.globalSpeedRate;\n        this.y += dy * ps.Bullet.globalSpeedRate;\n\n        if (this.x < -12 || GAMEAREA_WIDTH + 12 < this.x || this.y < -12 || GAMEAREA_HEIGHT + 12 < this.y) {\n          this.remove();\n          return;\n        }\n\n        this.rotation = Math.atan2(this.y - by, this.x - bx) * 180 / Math.PI;\n\n        this.age += 1;\n      }\n    },\n\n    hitTest: function(_x, _y) {\n      if (!this.visible || !this.parent) return false;\n\n      var x = _x - this.x;\n      var y = _y - this.y;\n\n      if ((x * x + y * y) < (this.radius * this.radius)) {\n        return true;\n      }\n      return false;\n    },\n\n    _static: {\n      globalSpeedRate: 1.0,\n    },\n\n  });\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Kujo1\", {\n    superClass: \"ps.Enemy\",\n    init: function(params) {\n      this.superInit(\"enemy_stage0\", 24, 24, params.$safe({\n        boundingType: \"circle\",\n        radius: 12,\n        danmakuName: \"basic\",\n        hp: 2,\n      }));\n      this.setSrcRect(32, 0, 24, 24);\n      \n      var propeler = ps.OutlinedSprite(\"enemy_stage0\", 32, 32)\n        .addChildTo(this)\n        .on(\"enterframe\", function() {\n          this.rotation += 20;\n        });\n      propeler.srcRect.x = 0;\n      propeler.srcRect.y = 128;\n      propeler.srcRect.width = 32;\n      propeler.srcRect.height = 32;\n\n      var self = this;\n      this.ftweener\n        .wait(params.wait)\n        .call(function() {\n          self.startAttack();\n        })\n        .by({\n          y: GAMEAREA_HEIGHT * 1.0\n        }, 80, \"easeOutQuad\")\n        .wait(120)\n        .to({\n          y: params.y\n        }, 80, \"easeInQuad\");\n    },\n\n    onenterframe: function(e) {\n      var app = e.app;\n      var player = app.currentScene.player;\n      this.rotation = Math.atan2(player.y - this.y, player.x - this.x) * Math.RAD_TO_DEG;\n    }\n  });\n\n  phina.define(\"ps.Kiryu1\", {\n    superClass: \"ps.Enemy\",\n    init: function(params) {\n      this.superInit(\"enemy_stage0\", 24, 24, params.$safe({\n        boundingType: \"circle\",\n        radius: 12,\n        danmakuName: \"basic\",\n        hp: 2,\n      }));\n      this.setSrcRect(0, 0, 24, 24);\n\n      var propeler = ps.OutlinedSprite(\"enemy_stage0\", 32, 32)\n        .addChildTo(this)\n        .on(\"enterframe\", function() {\n          this.rotation += 20;\n        });\n      propeler.srcRect.x = 0;\n      propeler.srcRect.y = 128;\n      propeler.srcRect.width = 32;\n      propeler.srcRect.height = 32;\n\n      var self = this;\n      this.ftweener\n        .wait(params.wait)\n        .call(function() {\n          self.startAttack();\n        });\n    },\n\n    onenterframe: function(e) {\n      var app = e.app;\n      var player = app.currentScene.player;\n      this.rotation = Math.atan2(player.y - this.y, player.x - this.x) * Math.RAD_TO_DEG;\n    }\n  });\n\n  phina.define(\"ps.Kise1\", {\n    superClass: \"ps.Enemy\",\n    init: function(params) {\n      this.superInit(\"enemy_stage0\", 32, 32, params.$safe({\n        boundingType: \"circle\",\n        radius: 16,\n        danmakuName: \"kise1\",\n        hp: 10,\n      }));\n      this.setSrcRect(0, 32, 32, 32);\n\n      var self = this;\n      this.ftweener\n        .wait(params.wait)\n        .call(function() {\n          self.startAttack();\n        });\n    },\n  });\n\n  phina.define(\"ps.Natsuki1\", {\n    superClass: \"ps.Enemy\",\n    init: function(params) {\n      this.superInit(\"enemy_stage0\", 32, 32, params.$safe({\n        boundingType: \"circle\",\n        radius: 16,\n        danmakuName: \"forward\",\n        hp: 2,\n      }));\n      this.setSrcRect(32, 32, 32, 32);\n\n      this.direction = params.direction * Math.DEG_TO_RAD;\n\n      var self = this;\n      this.ftweener\n        .wait(params.wait)\n        .call(function() {\n          self.startAttack();\n        });\n    },\n\n    onenterframe: function(e) {\n      var app = e.app;\n      this.x += Math.cos(this.direction) * 0.75;\n      this.y += Math.sin(this.direction) * 0.75;\n      this.rotation = this.direction * Math.RAD_TO_DEG;\n\n      var player = app.currentScene.player;\n      var t = Math.atan2(player.y - this.y, player.x - this.x) + Math.PI * 2;\n      if (this.runner) this.runner.direction = ~~((t + U225) / U45) * U45;\n    }\n  });\n\n  var U45 = Math.PI * 2 / 8;\n  var U225 = Math.PI * 2 / 16;\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Enemy\", {\n    superClass: \"ps.OutlinedSprite\",\n\n    hp: 0,\n    score: 0,\n\n    danmakuName: null,\n    runner: null,\n\n    entered: false,\n\n    init: function(texture, width, height, params) {\n      this.superInit(texture, width, height);\n      this.$extend(params);\n    },\n\n    startAttack: function() {\n      this.runner = ps.danmaku[this.danmakuName].createRunner(ps.BulletConfig);\n      this.on(\"enterframe\", function() {\n        this.runner.x = this.position.x;\n        this.runner.y = this.position.y;\n        this.runner.update();\n      });\n    },\n\n    setSrcRect: function(x, y, w, h) {\n      this.srcRect.x = x;\n      this.srcRect.y = y;\n      this.srcRect.width = w;\n      this.srcRect.height = h;\n      return this;\n    },\n\n    hitTestRect: function(_x, _y) {\n      var x = _x - this.position.x;\n      var y = _y - this.position.y;\n\n      var left = -this.boundingWidth * this.originX;\n      var right = +this.boundingWidth * (1 - this.originX);\n      var top = -this.boundingHeight * this.originY;\n      var bottom = +this.boundingHeight * (1 - this.originY);\n\n      return (left < x && x < right) && (top < y && y < bottom);\n    },\n\n    hitTestCircle: function(_x, _y) {\n      var x = _x - this.position.x;\n      var y = _y - this.position.y;\n\n      if (((x) * (x) + (y) * (y)) < (this.radius * this.radius)) {\n        return true;\n      }\n      return false;\n    },\n\n    update: function() {\n      if (!this.entered) {\n        this.entered = (-this.width * this.originX) < this.x &&\n          this.x < (GAMEAREA_WIDTH + this.width * this.originX) &&\n          (-this.height * this.originY) < this.y &&\n          this.y < (GAMEAREA_HEIGHT + this.height * this.originY);\n      }\n\n      if (this.entered) {\n        if (this.x < (-this.width * this.originX) ||\n          (GAMEAREA_WIDTH + this.width * this.originX) < this.x ||\n          this.y < (-this.height * this.originY) ||\n          (GAMEAREA_HEIGHT + this.height * this.originY) < this.y) {\n          this.remove();\n          return;\n        }\n      }\n    },\n\n    damage: function(power) {\n      if (!this.entered) return false;\n      this.hp -= power;\n      \n      this.flare(\"killed\");\n      \n      return this.hp < 0;\n    },\n\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.EnemyUnit\", {\n    init: function() {},\n    _static: {\n      formation: {\n\n        \"basic0\": [{\n          x: GAMEAREA_WIDTH * -0.1,\n          y: GAMEAREA_HEIGHT * 0.0,\n          wait: 0,\n        }, {\n          x: GAMEAREA_WIDTH * 0.0,\n          y: GAMEAREA_HEIGHT * 0.0,\n          wait: 10,\n        }, {\n          x: GAMEAREA_WIDTH * 0.1,\n          y: GAMEAREA_HEIGHT * 0.0,\n          wait: 10,\n        }, {\n          x: GAMEAREA_WIDTH * 0.2,\n          y: GAMEAREA_HEIGHT * 0.0,\n          wait: 0,\n        }, {\n          x: GAMEAREA_WIDTH * 0.05,\n          y: GAMEAREA_HEIGHT * -0.1,\n          wait: 20,\n        }, ],\n\n        \"line6\": [{\n          x: 40 * 0,\n          y: 40 * 0,\n          wait: 0,\n        }, {\n          x: 40 * 1,\n          y: 40 * 0,\n          wait: 0,\n        }, {\n          x: 40 * 2,\n          y: 40 * 0,\n          wait: 0,\n        }, {\n          x: 40 * 3,\n          y: 40 * 0,\n          wait: 0,\n        }, {\n          x: 40 * 4,\n          y: 40 * 0,\n          wait: 0,\n        }, ],\n\n        \"line7\": [{\n          x: 40 * -0,\n          y: 40 * -0,\n          wait: 0,\n        }, {\n          x: 40 * -1,\n          y: 40 * -1,\n          wait: 0,\n        }, {\n          x: 40 * -2,\n          y: 40 * -2,\n          wait: 0,\n        }, {\n          x: 40 * -3,\n          y: 40 * -3,\n          wait: 0,\n        }, {\n          x: 40 * -4,\n          y: 40 * -4,\n          wait: 0,\n        }, ],\n\n      }\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.BackgroundLayer\", {\n    superClass: \"phina.display.Layer\",\n\n    renderChildBySelf: true,\n    skip: false,\n\n    init: function(params) {\n      this.superInit({\n        width: GAMEAREA_WIDTH,\n        height: GAMEAREA_HEIGHT,\n      });\n      this.setOrigin(0, 0);\n      this.backgroundColor = params.backgroundColor;\n\n      this.stroke = params.stroke;\n      this.fill = params.fill;\n      this.lineWidth = 1;\n\n      this.camera = ps.bg.Camera().addChildTo(this);\n    },\n\n    update: function(app) {\n      this.skip = app.ticker.frame % 3 !== 0;\n    },\n\n    render: function() {\n      var self = this;\n      var cam = this.camera;\n      var canvas = this.canvas;\n      var w = canvas.canvas.width;\n      var h = canvas.canvas.height;\n\n      canvas.clearColor(this.backgroundColor);\n\n      if (self.stroke) {\n        canvas.strokeStyle = self.stroke;\n        canvas.context.lineWidth = self.lineWidth;\n      }\n      if (self.fill) {\n        canvas.fillStyle = self.fill;\n        canvas.fill();\n      }\n\n      for (var i = 0, len = this.children.length; i < len; i++) {\n        var child = this.children[i];\n        if (child instanceof ps.bg.Polygon) {\n          var src = child.render(cam);\n          var positions = [];\n          for (var s = 0, slen = src.length; s < slen; s++) {\n            var pos = src[s];\n            if (pos[3] < 0) {\n              positions = [];\n              break;\n            } else {\n              positions.push(((pos[0] / pos[3]) + 0.5) * w);\n              positions.push((-(pos[1] / pos[3]) + 0.5) * h);\n            }\n          }\n\n          var alpha = Math.clamp(1.0 - src[0][2] * 0.032, 0.0, 1.0);\n          if (alpha < 0.01) continue;\n          canvas.context.globalAlpha = alpha;\n\n          if (4 <= positions.length) {\n            canvas.beginPath();\n            canvas.lines.apply(canvas, positions);\n            canvas.closePath();\n            if (self.stroke) canvas.stroke();\n            if (self.fill) canvas.fill();\n          } else if (positions.length === 2) {\n            canvas.beginPath();\n            canvas.rect(positions[0], positions[1], 1, 1);\n            canvas.closePath();\n            if (self.stroke) canvas.stroke();\n            if (self.fill) canvas.fill();\n          }\n        }\n      }\n\n      canvas.context.globalAlpha = 1.0;\n    },\n\n    draw: function(canvas) {\n      if (!this.skip) this.render();\n\n      var image = this.canvas.domElement;\n      canvas.context.drawImage(image,\n        0, 0, image.width, image.height, -this.width * this.originX, -this.height * this.originY, this.width, this.height\n      );\n    },\n  });\n\n  phina.define(\"ps.bg.Camera\", {\n    superClass: \"phina.app.Element\",\n\n    init: function() {\n      this.superInit();\n\n      this.position = vec3.set(vec3.create(), 5, 3, 50);\n      this.target = vec3.set(vec3.create(), 0, 0, 0);\n      this.up = vec3.set(vec3.create(), 0, 1, 0);\n\n      this.vMatrix = mat4.create();\n      this.pMatrix = mat4.perspective(mat4.create(), 70, GAMEAREA_WIDTH / GAMEAREA_HEIGHT, 0.1, 10000);\n\n      this.vpMatrix = mat4.create();\n\n      this.needsUpdate = true;\n    },\n\n    update: function() {\n      if (this.needsUpdate) {\n        mat4.lookAt(this.vMatrix, this.position, this.target, this.up);\n        mat4.mul(this.vpMatrix, this.pMatrix, this.vMatrix);\n        this.needsUpdate = false;\n      }\n    },\n\n    _accessor: {\n      x: {\n        get: function() {\n          return this.position[0];\n        },\n        set: function(v) {\n          this.position[0] = v;\n          this.needsUpdate = true;\n        }\n      },\n      y: {\n        get: function() {\n          return this.position[1];\n        },\n        set: function(v) {\n          this.position[1] = v;\n          this.needsUpdate = true;\n        }\n      },\n      z: {\n        get: function() {\n          return this.position[2];\n        },\n        set: function(v) {\n          this.position[2] = v;\n          this.needsUpdate = true;\n        }\n      },\n      targetX: {\n        get: function() {\n          return this.target[0];\n        },\n        set: function(v) {\n          this.target[0] = v;\n          this.needsUpdate = true;\n        }\n      },\n      targetY: {\n        get: function() {\n          return this.target[1];\n        },\n        set: function(v) {\n          this.target[1] = v;\n          this.needsUpdate = true;\n        }\n      },\n      targetZ: {\n        get: function() {\n          return this.target[2];\n        },\n        set: function(v) {\n          this.target[2] = v;\n          this.needsUpdate = true;\n        }\n      },\n      upX: {\n        get: function() {\n          return this.up[0];\n        },\n        set: function(v) {\n          this.up[0] = v;\n          this.needsUpdate = true;\n        }\n      },\n      upY: {\n        get: function() {\n          return this.up[1];\n        },\n        set: function(v) {\n          this.up[1] = v;\n          this.needsUpdate = true;\n        }\n      },\n      upZ: {\n        get: function() {\n          return this.up[2];\n        },\n        set: function(v) {\n          this.up[2] = v;\n          this.needsUpdate = true;\n        }\n      },\n    }\n  });\n\n  phina.define(\"ps.bg.Polygon\", {\n    superClass: \"phina.app.Element\",\n\n    init: function(params) {\n      this.superInit();\n\n      this.vertices = params.vertices.map(function(vertex) {\n        return vec4.set(vec4.create(), vertex[0], vertex[1], vertex[2], 1);\n      });\n\n      this.calcPosition = this.vertices.map(function(vertex) {\n        return vec4.clone(vertex);\n      });\n\n      // this.rotation = quat.create();\n      this.translation = vec3.create();\n      // this.scale = vec3.set(vec3.create(), 1, 1, 1);\n\n      this.mMatrix = mat4.create();\n      this.mvpMatrix = mat4.create();\n\n      this.needsUpdate = true;\n    },\n\n    update: function() {\n      if (this.needsUpdate) {\n        // mat4.fromRotationTranslationScale(this.mMatrix, this.rotation, this.translation, this.scale);\n        mat4.fromTranslation(this.mMatrix, this.translation);\n        this.needsUpdate = false;\n      }\n    },\n\n    render: function(camera) {\n      var vertices = this.vertices;\n      var calcPosition = this.calcPosition;\n      var mvp = mat4.mul(this.mvpMatrix, camera.vpMatrix, this.mMatrix);\n\n      for (var i = 0, len = vertices.length; i < len; i++) {\n        var vertex = vertices[i];\n        vec4.transformMat4(calcPosition[i], vertex, mvp);\n      }\n\n      return calcPosition;\n    },\n\n    setTranslation: function(x, y, z) {\n      this.translation[0] = x;\n      this.translation[1] = y;\n      this.translation[2] = z;\n      return this;\n    },\n\n    _accessor: {\n      x: {\n        get: function() {\n          return this.translation[0];\n        },\n        set: function(v) {\n          this.translation[0] = v;\n          this.needsUpdate = true;\n        }\n      },\n      y: {\n        get: function() {\n          return this.translation[1];\n        },\n        set: function(v) {\n          this.translation[1] = v;\n          this.needsUpdate = true;\n        }\n      },\n      z: {\n        get: function() {\n          return this.translation[2];\n        },\n        set: function(v) {\n          this.translation[2] = v;\n          this.needsUpdate = true;\n        }\n      },\n    },\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.BulletLayer\", {\n    superClass: \"phina.display.CanvasElement\",\n\n    pool: null,\n\n    init: function() {\n      this.superInit({\n        width: GAMEAREA_WIDTH,\n        height: GAMEAREA_HEIGHT,\n      });\n      this.setOrigin(0, 0);\n\n      var self = this;\n      this.pool = Array.range(0, 256).map(function() {\n        var b = ps.Bullet();\n        b.bulletLayer = self;\n        return b;\n      });\n    },\n\n    spawn: function(runner, spec) {\n      var bullet = this.pool.shift();\n      if (!bullet) return;\n      \n      bullet.x = runner.x;\n      bullet.y = runner.y;\n      bullet.runner = runner;\n      bullet.frameIndex = spec.type || 0;\n      bullet.visible = !spec.dummy;\n      bullet.addChildTo(this);\n    },\n\n    update: function() {\n      var bs = this.children.slice(0);\n      for (var i = 0, len = bs.length; i < len; i++) {\n        var b = bs[i];\n        if (b.x < 0 || GAMEAREA_WIDTH < b.x || b.y < 0 || GAMEAREA_HEIGHT < b.y) {\n          b.remove();\n        }\n      }\n    },\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.EffectLayer\", {\n    superClass: \"phina.display.CanvasElement\",\n\n    init: function() {\n      this.superInit();\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.gamescene.MainLayer\", {\n    superClass: \"phina.display.Layer\",\n\n    init: function(params) {\n      this.superInit({\n        width: GAMEAREA_WIDTH,\n        height: GAMEAREA_HEIGHT,\n      });\n      this.setOrigin(0, 0);\n      this.backgroundColor = null;\n\n      var self = this;\n\n      this.fromJSON({\n        children: {\n          backgroundLayer: {\n            className: params.stage.backgroundClassName,\n          },\n\n          scoreItemLayer: {\n            className: \"phina.display.CanvasElement\",\n          },\n\n          deadEnemyLayer: {\n            className: \"phina.display.CanvasElement\",\n          },\n\n          shotLayer: {\n            className: \"ps.ShotLayer\",\n          },\n\n          effectLayer0: {\n            className: \"phina.display.CanvasElement\",\n          },\n\n          enemyLayer: {\n            className: \"phina.display.CanvasElement\",\n          },\n\n          player: {\n            className: \"ps.Player\",\n            visible: false,\n          },\n\n          itemLayer: {\n            className: \"phina.display.CanvasElement\",\n          },\n\n          effectLayer1: {\n            className: \"phina.display.CanvasElement\",\n            children: {\n              playerBurners: {\n                className: \"phina.display.CanvasElement\",\n                children: {\n                  playerBurnerL: {\n                    className: \"ps.AfterBurner\",\n                    onenterframe: function() {\n                      this.position.x = self.player.position.x - 4;\n                      this.position.y = self.player.position.y + 12;\n                    }\n                  },\n                  playerBurnerR: {\n                    className: \"ps.AfterBurner\",\n                    onenterframe: function() {\n                      this.position.x = self.player.position.x + 4;\n                      this.position.y = self.player.position.y + 12;\n                    }\n                  }\n                }\n              }\n            },\n          },\n\n          bulletLayer: {\n            className: \"ps.BulletLayer\",\n          },\n\n          playerMarker: {\n            className: \"phina.display.CircleShape\",\n            arguments: {\n              radius: 3,\n              fill: \"hsl(240,100%,90%)\",\n              stroke: \"hsl(240,70%,50%)\",\n              strokeWidth: 1.3,\n            },\n            onenterframe: function(e) {\n              this.setScale(0.9 + Math.sin(e.app.ticker.frame * 0.3) * 0.1);\n              this.position = self.player.position;\n            },\n          }\n        }\n      });\n\n      this.player.parts.push(this.effectLayer1.playerBurners.playerBurnerL);\n      this.player.parts.push(this.effectLayer1.playerBurners.playerBurnerR);\n      this.player.parts.push(this.playerMarker);\n    }\n\n  });\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.ShotLayer\", {\n    superClass: \"phina.display.CanvasElement\",\n\n    pool: null,\n\n    init: function() {\n      this.superInit();\n      var self = this;\n      this.pool = Array.range(0, 28).map(function() {\n        var shot = ps.Shot();\n        shot.shotLayer = self;\n        return shot;\n      });\n    },\n\n    fireVulcan: function(frameIndex, x, y, direction, power) {\n      var shot = this.pool.shift();\n      if (shot) {\n        shot.setup(frameIndex, x, y, direction, power).addChildTo(this);\n      }\n    },\n\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.gamescene.SideBarLayer\", {\n    superClass: \"phina.display.Layer\",\n\n    skipDraw: false,\n\n    init: function() {\n      this.superInit({\n        width: SIDEBAR_WIDTH,\n        height: SIDEBAR_HEIGHT,\n      });\n      this.setOrigin(0, 0);\n      this.backgroundColor = ps.Color.pri[0];\n      this.gridX = phina.util.Grid(SIDEBAR_WIDTH, 16);\n      this.gridY = phina.util.Grid(SIDEBAR_HEIGHT, 17);\n    },\n\n    bindGameData: function(gameData) {},\n\n    update: function(app) {\n      this.skipDraw = app.ticker.frame % 5 !== 0\n    },\n\n    draw: function(canvas) {\n      if (this.skipDraw) {\n        var image = this.canvas.domElement;\n        canvas.context.drawImage(image,\n          0, 0, image.width, image.height, -this.width * this.originX, -this.height * this.originY, this.width, this.height\n        );\n      } else {\n        phina.display.Layer.prototype.draw.call(this, canvas);\n      }\n    }\n\n  });\n\n  phina.define(\"ps.gamescene.LeftSideBar\", {\n    superClass: \"ps.gamescene.SideBarLayer\",\n\n    init: function() {\n      this.superInit();\n      this.fromJSON({\n        children: {\n          scoreLabel: {\n            className: \"ps.HudLabel\",\n            arguments: {\n              text: \"SCORE\",\n            },\n            x: this.gridX.span(1),\n            y: this.gridY.span(1),\n          },\n          score: {\n            className: \"ps.ScoreLabel\",\n            x: this.gridX.span(15),\n            y: this.gridY.span(2),\n          },\n\n          psycheLabel: {\n            className: \"ps.HudLabel\",\n            arguments: {\n              text: \"PSYCHE\",\n            },\n            x: this.gridX.span(1),\n            y: this.gridY.span(3),\n          },\n          psyche: {\n            className: \"ps.ScoreLabel\",\n            x: this.gridX.span(15),\n            y: this.gridY.span(4),\n          },\n\n          highScoreLabel: {\n            className: \"ps.HudLabel\",\n            arguments: {\n              text: \"HIGH SCORE\",\n            },\n            x: this.gridX.span(1),\n            y: this.gridY.span(15),\n          },\n          highScore: {\n            className: \"ps.ScoreLabel\",\n            x: this.gridX.span(15),\n            y: this.gridY.span(16),\n          },\n        }\n      });\n    },\n\n    bindGameData: function(gameData) {\n      gameData.bind(\"score\", this.score);\n      gameData.bind(\"psyche\", this.psyche);\n      gameData.bind(\"highScore\", this.highScore);\n    },\n\n  });\n\n  phina.define(\"ps.gamescene.RightSideBar\", {\n    superClass: \"ps.gamescene.SideBarLayer\",\n\n    init: function() {\n      this.superInit();\n      this.fromJSON({\n        children: {\n          zankiLabel: {\n            className: \"ps.HudLabel\",\n            arguments: {\n              text: \"ZANKI\",\n            },\n            x: this.gridX.span(1),\n            y: this.gridY.span(1),\n          },\n          zanki: {\n            className: \"ps.ZankiDisplay\",\n            arguments: 3 - 1,\n            x: this.gridX.span(15),\n            y: this.gridY.span(2),\n          },\n\n          bombLabel: {\n            className: \"ps.HudLabel\",\n            arguments: {\n              text: \"BOMB\",\n            },\n            x: this.gridX.span(1),\n            y: this.gridY.span(3),\n          },\n          bomb: {\n            className: \"ps.BombDisplay\",\n            arguments: 3,\n            x: this.gridX.span(15),\n            y: this.gridY.span(4),\n          },\n\n          gameTitleLabel: {\n            className: \"ps.TitleLogoLabel\",\n            x: this.gridX.center(),\n            y: this.gridY.span(16),\n          },\n        }\n      });\n    },\n\n    bindGameData: function(gameData) {\n      gameData.bind(\"zanki\", this.zanki);\n      gameData.bind(\"bomb\", this.bomb);\n    },\n\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.HudLabel\", {\n    superClass: \"phina.display.Label\",\n\n    init: function(options) {\n      this.superInit(options.$safe({\n        fill: ps.Color.sec0[14],\n        stroke: ps.Color.sec0[6],\n        fontSize: FONT_SIZE_M,\n        fontFamily: \"main\",\n        align: \"left\",\n        baseline: \"middle\",\n      }));\n    },\n    \n    update: function(app) {\n      this.alpha = 1.0;\n    },\n\n  });\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.ItemDisplay\", {\n    superClass: \"phina.display.CanvasElement\",\n\n    init: function(textureName, initialValue) {\n      this.superInit();\n      this.setOrigin(1, 0.5);\n      this.textureName = textureName;\n\n      this._count = initialValue || 0;\n      this.updateView();\n    },\n\n    updateView: function() {\n      var self = this;\n      var t = this.textureName;\n      var count = this._count;\n\n      if (0 < count - this.children.length) {\n        (count - this.children.length).times(function(i) {\n          var newItem = phina.display.Sprite(t);\n          newItem.setPosition(self.children.length * -newItem.width * 1.02, 0)\n            .addChildTo(self);\n        });\n      }\n\n      this.children.forEach(function(child, i) {\n        child.visible = i < count;\n      });\n    },\n\n    _accessor: {\n      value: {\n        get: function() {\n          return this._count;\n        },\n        set: function(v) {\n          this._count = v;\n          this.updateView();\n        }\n      }\n    }\n\n  });\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.OutlinedSprite\", {\n    superClass: \"phina.display.Sprite\",\n\n    init: function(texture, width, height) {\n      this.superInit(texture, width, height);\n\n      var self = this;\n\n      this.outline = phina.display.Sprite(texture + \"Outline\", width, height).addChildTo(this);\n      this.outline.blendMode = \"lighter\";\n      this.outline.update = function(app) {\n        this.srcRect = self.srcRect;\n        this.alpha = ps.OutlinedSprite.staticAlpha;\n      };\n    },\n\n    _static: {\n      staticAlpha: 1.0\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Player\", {\n    superClass: \"ps.OutlinedSprite\",\n\n    controllable: false,\n    muteki: false,\n\n    roll: 0,\n\n    speed: 3.6,\n\n    shotLayer: null,\n\n    trigger: 0,\n    fireFrame: 0,\n\n    parts: null,\n\n    init: function() {\n      this.superInit(\"player\", 32, 32);\n      this.frameIndex = 4;\n      this.x = GAMEAREA_WIDTH * 0.5;\n      this.y = GAMEAREA_HEIGHT * 1.2;\n      this.controllable = false;\n      this.muteki = true;\n      this.parts = [];\n    },\n\n    update: function(app) {\n      if (!this.controllable) return;\n\n      var frame = app.ticker.frame;\n\n      var keyboard = app.keyboard;\n      var gamepad = app.gamepads.get(0);\n      // var pointer = app.pointer;\n\n      moveVector.set(0, 0);\n\n      moveVector.add(keyboard.getKeyDirection().mul(this.speed));\n      if (gamepad) {\n        var stick = gamepad.getStickDirection();\n        if (0.4 < stick.length()) {\n          moveVector.add(stick.normalize().mul(this.speed));\n        }\n      }\n      // if (pointer.getPointing()) {\n      //   moveVector.add(pointer.deltaPosition.mul(2));\n      // }\n\n      if (moveVector.x) {\n        this.roll = Math.clamp(this.roll + moveVector.x * 0.1, -4, 4);\n      } else {\n        this.roll *= 0.8;\n        if (Math.abs(this.roll) < 0.1) {\n          this.roll = 0;\n        }\n      }\n      if (this.roll !== 0) {\n        var sign = this.roll / Math.abs(this.roll);\n        var r = ~~(Math.abs(this.roll)) * sign;\n        this.frameIndex = Math.clamp(4 + r, 0, 8);\n      }\n\n      var position = this.position;\n      position.add(moveVector);\n      position.x = Math.clamp(position.x, 4, GAMEAREA_WIDTH - 4);\n      position.y = Math.clamp(position.y, 4, GAMEAREA_HEIGHT - 4);\n\n      if (keyboard.getKeyDown(\"shot\") || gamepad.getKeyDown(\"shot\")) {\n        this.trigger = 14;\n      } else {\n        this.trigger -= 1;\n      }\n\n      if (0 < this.trigger && frame % 14 === 0) {\n        ps.SoundManager.playSound(\"shot\");\n      }\n\n      if (0 < this.trigger && frame % 4 === 0) {\n        var xv = Math.sin(this.fireFrame * 0.6) * 8;\n        var dv = Math.sin(this.fireFrame * 1.0) * 8;\n        this.shotLayer.fireVulcan(0, position.x - xv, position.y - 20, -90, 1.0);\n        this.shotLayer.fireVulcan(0, position.x + xv, position.y - 20, -90, 1.0);\n        this.shotLayer.fireVulcan(2, position.x - 14, position.y - 2, -90 - 12 + dv, 0.5);\n        this.shotLayer.fireVulcan(2, position.x + 14, position.y - 2, -90 + 12 - dv, 0.5);\n        this.fireFrame += 1;\n      }\n    },\n\n    launch: function() {\n      this.x = GAMEAREA_WIDTH * 0.5;\n      this.y = GAMEAREA_HEIGHT * 1.2;\n\n      this.controllable = false;\n      this.muteki = true;\n      this.visible = true;\n      this.roll = 0;\n      this.frameIndex = 4;\n      this.parts.forEach(function(part) {\n        part.visible = true;\n      });\n\n      var self = this;\n      this.ftweener\n        .clear()\n        .to({\n          y: GAMEAREA_HEIGHT * 0.8,\n        }, 60, \"easeOutBack\")\n        .call(function() {\n          self.controllable = true;\n          self.timer(180, function() {\n            self.muteki = false;\n          });\n        });\n    },\n\n    miss: function() {\n      this.controllable = false;\n      this.muteki = true;\n      this.visible = false;\n      this.parts.forEach(function(part) {\n        part.visible = false;\n      });\n    },\n\n  });\n\n  var moveVector = phina.geom.Vector2(0, 0);\n\n  phina.define(\"ps.AfterBurner\", {\n    superClass: \"phina.app.Object2D\",\n\n    init: function() {\n      this.superInit();\n    },\n\n    update: function(app) {\n      if (app.ticker.frame % 2 !== 0) return;\n      if (!this.visible) return;\n      var p = phina.display.Sprite(\"particleB\")\n        .setScale(0.125)\n        .setPosition(this.position.x, this.position.y)\n        .on(\"enterframe\", function() {\n          this.position.y += 1;\n          this.alpha -= 0.1;\n          if (this.alpha < 0.01) this.remove();\n        })\n        .addChildTo(this.parent);\n      p.blendMode = \"lighter\";\n    },\n\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.ScoreLabel\", {\n    superClass: \"phina.display.Label\",\n\n    init: function(options) {\n      this.superInit((options || {}).$safe({\n        fill: \"white\",\n        stroke: null,\n        fontSize: FONT_SIZE_L,\n        fontFamily: \"mono\",\n        align: \"right\",\n        baseline: \"middle\",\n      }));\n\n      this.value = 0;\n    },\n\n    formatText: function() {\n      var v = \"\" + Math.floor(this._score);\n      Array.range(5, 0).forEach(function(i) {\n        var s = i * 3;\n        if (s < v.length) {\n          v = v.substring(0, v.length - s) + \",\" + v.substring(v.length - s);\n        }\n      });\n\n      this.text = v;\n    },\n    // formatText: function() {\n    //   var v = \"\" + Math.floor(this._score);\n    //   if (12 < v.length) {\n    //     v = v.substring(0, v.length - 12) + \"兆\" + v.substring(v.length - 12);\n    //   }\n    //   if (8 < v.length) {\n    //     v = v.substring(0, v.length - 8) + \"億\" + v.substring(v.length - 8);\n    //   }\n    //   if (4 < v.length) {\n    //     v = v.substring(0, v.length - 4) + \"万\" + v.substring(v.length - 4);\n    //   }\n\n    //   this.text = v;\n    // },\n\n    _accessor: {\n      value: {\n        get: function() {\n          return this._score;\n        },\n        set: function(v) {\n          this._score = v;\n          this.formatText();\n        }\n      }\n    }\n\n  });\n});\n","phina.namespace(function() {\n\n  var speed = 12;\n\n  phina.define(\"ps.Shot\", {\n    superClass: \"phina.display.Sprite\",\n    \n    shotLayer: null,\n    power: 0,\n\n    init: function() {\n      this.superInit(\"bullet\", 24, 24);\n    },\n    \n    onremoved: function() {\n      this.shotLayer.pool.push(this);\n    },\n\n    setup: function(frameIndex, x, y, direction, power) {\n      this.frameIndex = frameIndex;\n      this.x = x;\n      this.y = y;\n      this.rotation = direction;\n      this.power = power;\n      var rad = direction * Math.DEG_TO_RAD;\n      this.velocity = phina.geom.Vector2(Math.cos(rad) * speed, Math.sin(rad) * speed);\n      \n      return this;\n    },\n\n    update: function() {\n      this.power = Math.max(this.power * 0.95, 0.5);\n      var position = this.position;\n      position.add(this.velocity);\n      if (position.x < 0 || GAMEAREA_WIDTH < position.x || position.y < 0 || GAMEAREA_HEIGHT < position.y) {\n        this.remove();\n      }\n    },\n\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.TitleLogoLabel\", {\n    superClass: \"phina.display.Label\",\n\n    init: function(options) {\n      this.superInit((options || {}).$safe({\n        text: \"Phina Shooter\",\n        align: \"center\",\n        fontFamily: \"title\",\n        fontSize: FONT_SIZE_L,\n        stroke: ps.Color.pri[6],\n        fill: ps.Color.pri[13],\n      }));\n    }\n\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.ZankiDisplay\", {\n    superClass: \"ps.ItemDisplay\",\n\n    init: function(initialValue) {\n      this.superInit(\"zanki\", initialValue);\n    },\n\n  });\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.BulletConfig\", {\n    init: function() {},\n    _static: {\n\n      speedRate: 3,\n      target: null,\n      bulletLayer: null,\n\n      setup: function(target, bulletLayer) {\n        this.target = target;\n        this.bulletLayer = bulletLayer;\n\n        this.put(\"densityRank\", 0.00);\n        this.put(\"speedRank\", 0.00);\n        this.put(\"burst\", 0);\n      },\n\n      createNewBullet: function(runner, spec) {\n        this.bulletLayer.spawn(runner, spec);\n      },\n\n      put: function(name, value) {\n        bulletml.Walker.globalScope[\"$\" + name] = value;\n      },\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.GameData\", {\n    superClass: \"phina.util.EventDispatcher\",\n\n    currentStage: 0,\n\n    score: Math.randint(0, 100000000000),\n    zanki: 2,\n    bomb: 3,\n    psyche: Math.randint(0, 100000000000),\n    highScore: Math.randint(0, 100000000000),\n\n    /**\n     * \"normal\" or \"every\"\n     */\n    extendMode: null,\n    extendScore: null,\n\n    init: function() {\n      this.superInit();\n      this._binder = {};\n\n      this.extendMode = \"normal\";\n      this.extendScore = [100000000, 200000000];\n    },\n\n    updateView: function(frame) {\n      if (frame % 5 !== 0) return;\n\n      var self = this;\n      self._binder.forIn(function(name, view) {\n        if (self[name] !== undefined) {\n          view.value = self[name];\n        }\n      });\n    },\n\n    addPsyche: function(v) {\n      this.psyche += v;\n    },\n\n    addScore: function(v) {\n      var self = this;\n      var before = this.score;\n      var after = this.score + v;\n\n      if (this.extendMode === \"normal\") {\n        this.extendScore.forEach(function(es) {\n          if (before < es && es <= after) {\n            self.zanki += 1;\n            self.flare(\"extend\");\n          }\n        });\n      } else if (this.extendMode === \"every\") {\n        var es = this.extendScore[0];\n        if (Math.floor(before / es) < Math.floor(after / es)) {\n          this.zanki += 1;\n          this.flare(\"extend\");\n        }\n      }\n\n      this.score = after;\n    },\n\n    bind: function(propertyName, view) {\n      this._binder[propertyName] = view;\n    },\n    \n    onbomb: function() {\n      this.bomb -= 1;\n    },\n\n    onkill: function(e) {\n      \n    },\n    \n    onmiss: function() {\n      this.zanki -= 1;\n    },\n\n  });\n\n});\n","phina.main(function() {\n  var s = 10;\n  var l = s * Math.sqrt(3);\n  var bg = phina.graphics.Canvas();\n  bg.setSize(l * 2, s * 6);\n  bg.strokeStyle = \"hsla(240, 8%, 50%, 0.3)\";\n  bg.strokeLines(\n    l, 0,\n    l, s,\n    0, s * 2,\n    0, s * 4,\n    l, s * 5,\n    l, s * 6\n  );\n  bg.strokeLines(l, s, l * 2, s * 2);\n  bg.strokeLines(l, s * 5, l * 2, s * 4);\n  document.body.style.backgroundImage = \"url({0})\".format(bg.canvas.toDataURL());\n  document.body.style.backgroundRepeat = \"repeat\";\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.EndingScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    init: function() {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"black\",\n      });\n      this.fromJSON({\n        children: {\n          label: {\n            className: \"ps.TitleLogoLabel\",\n            arguments: {\n              text: \"ending\"\n            },\n            x: GAMEAREA_WIDTH * 0.5,\n            y: GAMEAREA_HEIGHT * 0.5,\n          }\n        }\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.GameoverScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    init: function() {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"black\",\n      });\n\n      this.fromJSON({\n        children: {\n          label: {\n            className: \"ps.TitleLogoLabel\",\n            arguments: {\n              text: \"GAME OVER\"\n            },\n            x: GAMEAREA_WIDTH * 0.5,\n            y: GAMEAREA_HEIGHT * 0.5,\n          }\n        }\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.GameScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    stageId: null,\n    gameData: null,\n\n    init: function(params) {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"hsl(30, 60%, 60%)\",\n      });\n\n      this.stage = ps.Stage.create(params.stageId);\n\n      this.fromJSON({\n        children: {\n          mainLayer: {\n            className: \"ps.gamescene.MainLayer\",\n            arguments: {\n              stage: this.stage,\n            },\n            x: SIDEBAR_WIDTH,\n            y: 0,\n          },\n          leftSideBar: {\n            className: \"ps.gamescene.LeftSideBar\",\n            x: 0,\n            y: 0,\n          },\n          rightSideBar: {\n            className: \"ps.gamescene.RightSideBar\",\n            x: SCREEN_WIDTH - SIDEBAR_WIDTH,\n            y: 0,\n          },\n        }\n      });\n\n      var player = this.player = this.mainLayer.player;\n      player.shotLayer = this.mainLayer.shotLayer;\n\n      var gameData = this.gameData = params.gameData;\n      this.leftSideBar.bindGameData(gameData);\n      this.rightSideBar.bindGameData(gameData);\n      gameData.on(\"miss\", function() {});\n      gameData.on(\"gameover\", function() {});\n\n      ps.BulletConfig.setup(player, this.mainLayer.bulletLayer);\n\n      this.timer(120, function() {\n        player.launch();\n      });\n    },\n\n    update: function(app) {\n      this.stage.update(app);\n\n      var frame = app.ticker.frame;\n\n      this.gameData.updateView(frame);\n\n      ps.OutlinedSprite.staticAlpha = 0.5 + Math.sin(frame * 0.26) * 0.5;\n\n      this._hitTestShotVsEnemy();\n      this._hitTestBombVsEnemy();\n      this._hitTestBulletVsPlayer();\n      this._hitTestEnemyVsPlayer();\n    },\n\n    _hitTestShotVsEnemy: function() {\n      var enemies = this.mainLayer.enemyLayer.children;\n      var shots = this.mainLayer.shotLayer.children;\n\n      var es = enemies.slice();\n      var ss = shots.slice();\n\n      for (var si = 0, slen = ss.length; si < slen; si++) {\n        var s = ss[si];\n        for (var ei = 0, elen = es.length; ei < elen; ei++) {\n          var e = es[ei];\n          if (e.hitTest(s.x, s.y)) {\n            if (e.damage(s.power)) {\n              this.flare(\"kill\", {\n                enemy: e\n              });\n            }\n            s.remove();\n            break;\n          }\n        }\n      }\n    },\n    _hitTestBombVsEnemy: function() {\n      var enemies = this.mainLayer.enemyLayer.children;\n\n      var es = enemies.slice();\n    },\n    _hitTestBulletVsPlayer: function() {\n      var bullets = this.mainLayer.bulletLayer.children;\n      var player = this.player;\n\n      if (player.muteki) return;\n\n      var bs = bullets.slice();\n      for (var bi = 0, blen = bs.length; bi < blen; bi++) {\n        var b = bs[bi];\n        if (b.hitTest(player.x, player.y)) {\n          this.flare(\"miss\");\n          console.log(\"miss by bullet\");\n          return;\n        }\n      }\n    },\n    _hitTestEnemyVsPlayer: function() {\n      var enemies = this.mainLayer.enemyLayer.children;\n      var player = this.player;\n\n      if (player.muteki) return;\n\n      var es = enemies.slice();\n      for (var ei = 0, elen = es.length; ei < elen; ei++) {\n        var e = es[ei];\n        if (e.hitTest(player.x, player.y)) {\n          this.flare(\"miss\");\n          console.log(\"miss by enemy\");\n          return;\n        }\n      }\n    },\n\n    launchEnemy: function(enemy) {\n      this.mainLayer.enemyLayer.addChild(enemy);\n    },\n\n    onkill: function(e) {\n      var enemy = e.enemy;\n      enemy.remove();\n      this.gameData.flare(\"kill\", {\n        enemy: enemy\n      });\n    },\n\n    onmiss: function() {\n      this.gameData.flare(\"miss\");\n      var player = this.player;\n      player.miss();\n      if (this.gameData.zanki < 0) {\n        // TODO gameover\n      } else {\n        this.timer(60, function() {\n          player.launch();\n        });\n      }\n    },\n\n  });\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.GenerateAssetScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    init: function(params) {\n      this.superInit();\n      this.one(\"enterframe\", function() {\n        this.generate(params.assetType);\n      });\n    },\n\n    generate: function(assetType) {\n      switch (assetType) {\n        case \"stage0\":\n          ps.TextureEdit.outline(\"enemy_stage0\", \"red\");\n\n          break;\n\n        default:\n          ps.TextureEdit.outline(\"bullet\", \"rgba(255,180,0,0.5)\", 2);\n          ps.TextureEdit.outline(\"player\", \"rgba(0,100,255,0.5)\", 2);\n          ps.TextureEdit.outline(\"bomb\", \"lightgreen\", 2);\n\n          var c = phina.graphics.Canvas().setSize(32, 32);\n          c.clearColor(\"rgba(255, 255, 255, 0.5)\");\n          phina.asset.AssetManager.set(\"image\", \"particleW\", c);\n\n          c = phina.graphics.Canvas().setSize(32, 32);\n          c.clearColor(\"hsla(0, 100%, 70%, 0.5)\");\n          phina.asset.AssetManager.set(\"image\", \"particleR\", c);\n\n          c = phina.graphics.Canvas().setSize(32, 32);\n          c.clearColor(\"hsla(60, 100%, 70%, 0.5)\");\n          phina.asset.AssetManager.set(\"image\", \"particleY\", c);\n\n          c = phina.graphics.Canvas().setSize(32, 32);\n          c.clearColor(\"hsla(120, 100%, 70%, 0.5)\");\n          phina.asset.AssetManager.set(\"image\", \"particleG\", c);\n\n          c = phina.graphics.Canvas().setSize(32, 32);\n          c.clearColor(\"hsla(240, 100%, 70%, 0.5)\");\n          phina.asset.AssetManager.set(\"image\", \"particleB\", c);\n\n          break;\n      }\n\n      this.exit();\n    },\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.LoadingScene\", {\n    superClass: \"phina.game.LoadingScene\",\n\n    init: function(params) {\n      this.superInit({\n        assets: ps.Assets.get(params.assetType),\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        lie: false,\n        exitType: \"auto\",\n      });\n      this.fromJSON({\n        backgroundColor: \"black\",\n        children: {\n          label: {\n            className: \"ps.TitleLogoLabel\",\n            arguments: {\n              text: \"downloading\"\n            },\n            x: SCREEN_WIDTH * 0.5,\n            y: SCREEN_HEIGHT * 0.5,\n            onenterframe: function(e) {\n              var c = ~~(e.app.ticker.frame / 10) % 5;\n              this.text = \"downloading\" + \".\".repeat(c);\n            }\n          }\n        }\n      });\n    }\n\n  });\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.NameEntryScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    init: function() {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"black\",\n      });\n      this.fromJSON({\n        children: {\n          label: {\n            className: \"ps.TitleLogoLabel\",\n            arguments: {\n              text: \"name entry\"\n            },\n            x: GAMEAREA_WIDTH * 0.5,\n            y: GAMEAREA_HEIGHT * 0.5,\n          }\n        }\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.ResultScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    init: function(params) {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"black\",\n      });\n\n      this.fromJSON({\n        gameData: params.gameData,\n        children: {\n          label: {\n            className: \"ps.TitleLogoLabel\",\n            arguments: {\n              text: \"result\"\n            },\n            x: GAMEAREA_WIDTH * 0.5,\n            y: GAMEAREA_HEIGHT * 0.5,\n          }\n        }\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.SettingScene\", {\n    superClass: \"phina.game.ManagerScene\",\n\n    init: function() {\n      this.superInit({\n        scenes: [\n\n          {\n            label: \"top\",\n            className: \"ps.settingscene.Top\",\n          },\n\n        ],\n      });\n    }\n  });\n\n  phina.define(\"ps.settingscene.Top\", {\n    superClass: \"phina.app.CanvasScene\",\n\n    init: function() {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"black\",\n      });\n    }\n  });\n\n});","phina.namespace(function() {\n\n  phina.define(\"ps.TitleScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    init: function() {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"black\",\n      });\n\n      this.fromJSON({\n        children: {\n          title: {\n            className: \"ps.TitleLogoLabel\",\n            arguments: {\n              fontSize: FONT_SIZE_XL,\n            },\n            x: SCREEN_WIDTH * 0.5,\n            y: SCREEN_HEIGHT * 0.5,\n          }\n        }\n      });\n\n      // TODO\n      this.tweener.wait(500).call(function() {\n        this.exit(\"arcadeMode\");\n      }.bind(this));\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.TutorialScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    init: function() {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"black\",\n      });\n      this.fromJSON({\n        children: {\n          label: {\n            className: \"ps.TitleLogoLabel\",\n            arguments: {\n              text: \"tutorial\"\n            },\n            x: GAMEAREA_WIDTH * 0.5,\n            y: GAMEAREA_HEIGHT * 0.5,\n          }\n        }\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  /**\n   * arcadeモード\n   */\n  phina.define(\"ps.ArcadeModeSequence\", {\n    superClass: \"phina.game.ManagerScene\",\n    \n    init: function() {\n      \n      var gameData = ps.GameData();\n      \n      this.superInit({\n        scenes: [\n\n          Array.range(0, 5).map(function(stageId) {\n            var stageName = \"stage{0}\".format(stageId);\n            if (stageId < 4) {\n              next = \"stage{0}preload\".format(stageId);\n            } else {\n              next = \"ending\";\n            }\n            return [\n\n              {\n                label: stageName + \"preload\",\n                className: \"ps.LoadingScene\",\n                arguments: {\n                  assetType: stageName\n                },\n              },\n\n              {\n                label: stageName + \"generate\",\n                className: \"ps.GenerateAssetScene\",\n                arguments: {\n                  assetType: stageName\n                },\n              },\n\n              {\n                label: stageName,\n                className: \"ps.GameScene\",\n                arguments: {\n                  stageId: stageId,\n                  gameData: gameData,\n                },\n              },\n\n              {\n                label: stageName + \"result\",\n                className: \"ps.ResultScene\",\n                arguments: {\n                  gameData: gameData,\n                },\n              },\n\n            ];\n          }),\n\n          {\n            label: \"ending\",\n            className: \"ps.EndingScene\",\n          },\n\n          {\n            label: \"gameover\",\n            className: \"ps.GameoverScene\",\n          },\n\n          {\n            label: \"nameEntry\",\n            className: \"ps.NameEntryScene\",\n          },\n\n        ].flatten(),\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.MainSequence\", {\n    superClass: \"phina.game.ManagerScene\",\n\n    init: function() {\n      this.superInit({\n        scenes: [\n\n          {\n            label: \"load\",\n            className: \"ps.LoadingScene\",\n            arguments: {\n              assetType: \"common\"\n            },\n          },\n\n          {\n            label: \"generate\",\n            className: \"ps.GenerateAssetScene\",\n          },\n\n          {\n            label: \"title\",\n            className: \"ps.TitleScene\",\n          },\n\n          {\n            label: \"arcadeMode\",\n            className: \"ps.ArcadeModeSequence\",\n            nextLabel: \"title\",\n          },\n\n          {\n            label: \"tutorial\",\n            className: \"ps.TutorialScene\",\n            nextLabel: \"title\",\n          },\n\n          {\n            label: \"setting\",\n            className: \"ps.SettingScene\",\n            nextLabel: \"title\",\n          },\n\n          {\n            label: \"ranking\",\n            className: \"ps.RankingScene\",\n            nextLabel: \"title\",\n          },\n\n        ],\n      });\n    }\n  });\n\n});","phina.namespace(function() {\n\n  phina.define(\"ps.RankingScene\", {\n    superClass: \"phina.display.CanvasScene\",\n\n    init: function() {\n      this.superInit({\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"black\",\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Background0\", {\n    superClass: \"ps.BackgroundLayer\",\n\n    init: function() {\n      this.superInit({\n        backgroundColor: ps.Color.pri[1],\n        fill: ps.Color.pria[7].format(0.2),\n        stroke: ps.Color.pri[4],\n      });\n\n      this.camera.x = 2;\n      this.camera.y = 35;\n      this.camera.z = 8;\n      this.camera.targetY = 3;\n      var frame = 0;\n      this.camera.on(\"enterframe\", function(e) {\n        this.y = 16 + Math.cos(frame * 0.001) * 13;\n        frame += 1;\n      });\n\n      var self = this;\n\n      var dx = 0.04;\n      var dz = 0.16;\n\n      var rangeX = 3.0 * 5.0;\n      var rangeZ = 4.0 * 5.6;\n\n      // 床\n      var vertices2 = [\n        [0, 0, 0],\n      ];\n      Array.range(-10, 10).forEach(function(z) {\n        Array.range(-10, 10).forEach(function(x) {\n          ps.bg.Polygon({\n              vertices: vertices2,\n            })\n            .setTranslation(x * 2.6, 0, z * 2.6)\n            .addChildTo(self)\n            .on(\"enterframe\", function() {\n              this.x += dx;\n              this.z += dz;\n\n              if (this.x < -rangeX) this.x += rangeX * 2;\n              if (rangeX < this.x) this.x += -rangeX * 2;\n              if (this.z < -rangeZ) this.z += rangeZ * 2;\n              if (rangeZ < this.z) this.z += -rangeZ * 2;\n            });\n        });\n      });\n\n      // 建造物\n      var vertices = [\n        [-0.7, 0, -0.7],\n        [-0.7, 0, +0.7],\n        [+0.7, 0, +0.7],\n        [+0.7, 0, -0.7],\n      ];\n      var random = phina.util.Random(12345);\n      Array.range(-5, 5).forEach(function(z) {\n        Array.range(-5, 5).forEach(function(x) {\n          Array.range(0, random.randint(6, 11)).forEach(function(y) {\n            ps.bg.Polygon({\n                vertices: vertices,\n              })\n              .setTranslation(x * 3.0, y * 0.21, z * 4.0)\n              .addChildTo(self)\n              .on(\"enterframe\", function() {\n                this.x += dx;\n                this.z += dz;\n\n                if (this.x < -rangeX) this.x += rangeX * 2;\n                if (rangeX < this.x) this.x += -rangeX * 2;\n                if (this.z < -rangeZ) this.z += rangeZ * 2;\n                if (rangeZ < this.z) this.z += -rangeZ * 2;\n              });\n          });\n        });\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Background1\", {\n    superClass: \"ps.BackgroundLayer\",\n\n    init: function() {\n      this.superInit({\n        backgroundColor: ps.Color.sec0[1],\n        fill: ps.Color.sec0a[8].format(0.1),\n        stroke: ps.Color.sec0[8],\n      });\n\n      this.camera.x = 5;\n      this.camera.y = 0.5;\n      this.camera.z = 10;\n      this.camera.targetX = 0;\n      this.camera.targetY = 0.5;\n      this.camera.targetZ = 0;\n      var frame = 0;\n      this.camera.on(\"enterframe\", function(e) {\n        this.targetY = -2 + Math.sin(frame * 0.002) * -2;\n        frame += 1;\n      });\n\n      var self = this;\n\n      var dx = 0.05;\n      var dz = 0.10;\n\n      var rangeX = 3.0 * 5.0;\n      var rangeZ = 4.0 * 5.6;\n\n      // 床\n      var vertices2 = [\n        [0, 0, 0],\n      ];\n      Array.range(-10, 10).forEach(function(z) {\n        Array.range(-10, 10).forEach(function(x) {\n          [-1, 1].forEach(function(y) {\n            ps.bg.Polygon({\n                vertices: vertices2,\n              })\n              .setTranslation(x * 2.6, y * 2.0, z * 2.6)\n              .addChildTo(self)\n              .on(\"enterframe\", function() {\n                this.x += dx;\n                this.z += dz;\n\n                if (this.x < -rangeX) this.x += rangeX * 2;\n                if (rangeX < this.x) this.x += -rangeX * 2;\n                if (this.z < -rangeZ) this.z += rangeZ * 2;\n                if (rangeZ < this.z) this.z += -rangeZ * 2;\n              });\n          });\n        });\n      });\n\n      // 建造物\n      var vertices = [\n        [-0.5, 0, -0.5],\n        [-0.5, 0, +0.5],\n        [+0.5, 0, +0.5],\n        [+0.5, 0, -0.5],\n      ];\n      var random = phina.util.Random(12345);\n      Array.range(-5, 5).forEach(function(z) {\n        Array.range(-5, 5).forEach(function(x) {\n          [-1, 1].forEach(function(y) {\n            ps.bg.Polygon({\n                vertices: vertices,\n              })\n              .setTranslation(x * 3.0, y * 2.0, z * 3.0)\n              .addChildTo(self)\n              .on(\"enterframe\", function() {\n                this.x += dx;\n                this.z += dz;\n\n                if (this.x < -rangeX) this.x += rangeX * 2;\n                if (rangeX < this.x) this.x += -rangeX * 2;\n                if (this.z < -rangeZ) this.z += rangeZ * 2;\n                if (rangeZ < this.z) this.z += -rangeZ * 2;\n              });\n          });\n        });\n      });\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Stage\", {\n    superClass: \"phina.util.EventDispatcher\",\n\n    waitFor: -1,\n    sequencer: null,\n    random: null,\n\n    block: false,\n\n    init: function() {\n      this.superInit();\n      this.sequencer = ps.StageSequancer();\n      this.random = phina.util.Random(12345);\n    },\n\n    update: function(app) {\n      var frame = app.ticker.frame;\n      while (this.sequencer.hasNext() && this.waitFor <= frame) {\n        var task = this.sequencer.next();\n        if (task) {\n          if (!((task instanceof ps.LaunchEnemyTask || task instanceof ps.LaunchEnemyUnitTask) && this.block)) {\n            task.execute(app, app.currentScene, this);\n          }\n        }\n      }\n    },\n\n    _static: {\n      create: function(stageId) {\n        switch (stageId) {\n          case 0:\n            return ps.Stage0();\n        }\n      }\n    }\n  });\n\n  phina.define(\"ps.StageSequancer\", {\n\n    init: function() {\n      this.seq = [];\n    },\n\n    hasNext: function() {\n      return this.seq.length > 0;\n    },\n\n    addTask: function(task) {\n      this.seq.push(task);\n      return this;\n    },\n\n    next: function() {\n      return this.seq.shift();\n    },\n\n    wait: function(frame) {\n      return this.addTask(ps.WaitTask(frame));\n    },\n\n    startBgm: function(bgmData) {\n      return this.addTask(ps.StartBgmTask(bgmData));\n    },\n\n    stopBgm: function(fadeOut) {\n      return this.addTask(ps.StopBgmTask(fadeOut));\n    },\n\n    warning: function() {\n      return this.addTask(ps.WarningTask());\n    },\n\n    launchEnemy: function(enemyClassName, params) {\n      return this.addTask(ps.LaunchEnemyTask(enemyClassName, params));\n    },\n\n    launchEnemyUnit: function(enemyClassName, params) {\n      return this.addTask(ps.LaunchEnemyUnitTask(enemyClassName, params));\n    },\n\n    launchBoss: function(bossClassName) {\n      return this.addTask(ps.LaunchBossTask(bossClassName));\n    },\n  });\n\n  phina.define(\"ps.StageTask\", {\n    init: function() {},\n    execute: function(app, gameScene, stage) {}\n  });\n\n  phina.define(\"ps.WaitTask\", {\n    superClass: \"ps.StageTask\",\n\n    frame: 0,\n\n    init: function(frame) {\n      this.frame = frame;\n    },\n\n    execute: function(app, gameScene, stage) {\n      stage.waitFor = app.ticker.frame + this.frame;\n    }\n  });\n\n  phina.define(\"ps.StartBgmTask\", {\n    superClass: \"ps.StageTask\",\n\n    bgmData: null,\n\n    init: function(bgmData) {\n      this.superInit();\n      this.bgmData = bgmData;\n    },\n\n    execute: function(app, gameScene, stage) {\n      ps.SoundManager.startBgm(this.bgmData);\n    }\n  });\n\n  phina.define(\"ps.StopBgmTask\", {\n    superClass: \"ps.StageTask\",\n\n    init: function(fadeOut) {\n      this.superInit();\n      this.fadeOut = fadeOut;\n    },\n\n    execute: function(app, gameScene, stage) {\n      ps.SoundManager.stopBgm(this.fadeOut);\n    }\n  });\n\n  phina.define(\"ps.WarningTask\", {\n    superClass: \"ps.StageTask\",\n\n    init: function() {\n      this.superInit();\n    },\n\n    execute: function(app, gameScene, stage) {}\n  });\n\n  phina.define(\"ps.LaunchEnemyTask\", {\n    superClass: \"ps.StageTask\",\n\n    enemyClassName: null,\n    params: null,\n\n    init: function(enemyClassName, params) {\n      this.superInit();\n      this.enemyClassName = enemyClassName;\n      this.params = params.$safe({\n        x: GAMEAREA_WIDTH * 0.5,\n        y: GAMEAREA_HEIGHT * -0.1,\n        blockFlag: false,\n        wait: 0,\n      });\n    },\n\n    execute: function(app, gameScene, stage) {\n      var EnemyClazz = phina.using(this.enemyClassName);\n      var params = this.params;\n      var enemy = EnemyClazz(params);\n      gameScene.launchEnemy(enemy);\n\n      stage.block = this.params.blockFlag;\n    }\n  });\n\n  phina.define(\"ps.LaunchEnemyUnitTask\", {\n    superClass: \"ps.StageTask\",\n\n    enemyClassName: null,\n    params: null,\n\n    init: function(enemyClassName, params) {\n      this.superInit();\n      this.enemyClassName = enemyClassName;\n      this.params = params.$safe({\n        x: GAMEAREA_WIDTH * 0.5,\n        y: GAMEAREA_HEIGHT * -0.1,\n        blockFlag: false,\n        formation: \"basic0\",\n        wait: 0,\n      });\n    },\n\n    execute: function(app, gameScene, stage) {\n      var EnemyClazz = phina.using(this.enemyClassName);\n      var params = this.params;\n      var enemy = null;\n      ps.EnemyUnit.formation[params.formation].forEach(function(f) {\n        enemy = EnemyClazz({}.$extend(params, {\n          x: params.x + f.x,\n          y: params.y + f.y,\n          wait: f.wait,\n        }));\n        gameScene.launchEnemy(enemy);\n      });\n    }\n  });\n\n  phina.define(\"ps.LaunchBossTask\", {\n    superClass: \"ps.StageTask\",\n\n    bossClassName: null,\n\n    init: function(bossClassName, params) {\n      this.superInit();\n      this.bossClassName = bossClassName;\n      this.params = params;\n    },\n\n    execute: function(app, gameScene, stage) {}\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Stage0\", {\n    superClass: \"ps.Stage\",\n\n    backgroundClassName: \"ps.Background0\",\n\n    init: function() {\n      this.superInit();\n\n      var x = function(v) {\n        return GAMEAREA_WIDTH * v * 0.1;\n      };\n      var y = function(v) {\n        return GAMEAREA_HEIGHT * v * 0.1;\n      };\n\n      this.sequencer\n        .startBgm()\n        //\n        .wait(250)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(80)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(2),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(75)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(80)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(2),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(75)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .launchEnemyUnit(\"ps.Natsuki1\", {\n          x: x(-1),\n          y: y(2),\n          direction: 45,\n          formation: \"line7\",\n        })\n        //\n        .wait(80)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(2),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(75)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(80)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(2),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(75)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(200)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        .wait(50)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(2),\n          y: y(-5),\n          formation: \"basic0\",\n        })\n        //\n        .launchEnemyUnit(\"ps.Natsuki1\", {\n          x: x(11),\n          y: y(3),\n          direction: 180,\n          formation: \"line6\",\n        })\n        //\n        .wait(75)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(80)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(2),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(75)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(75)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(80)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(2),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n        .wait(75)\n        .launchEnemyUnit(\"ps.Kujo1\", {\n          x: x(5),\n          y: y(-7),\n          formation: \"basic0\",\n        })\n        //\n      ;\n    }\n\n  });\n\n});\n","phina.namespace(function() {\n  // Color Palette by Paletton.com\n  // Palette URL: http://paletton.com/#uid=50f1n0kmGpNdfBfixtwqklHuEgU\n\n  phina.define(\"ps.Color\", {\n    init: function() {},\n    _static: {\n      pri: [],\n      sec0: [],\n      sec1: [],\n\n      initialize: function(scene) {\n        ps.Color.pri = [];\n        ps.Color.sec0 = [];\n        ps.Color.sec1 = [];\n        ps.Color.pria = [];\n        ps.Color.sec0a = [];\n        ps.Color.sec1a = [];\n\n        var p0 = 21;\n        var r = 140;\n        var s0 = (p0 - r + 360) % 360;\n        var s1 = (p0 + r + 360) % 360;\n\n        var size = 16;\n        var sMin = 48;\n        var sMax = 90;\n        var sLev = (sMax - sMin) / (size - 1);\n        var hMin = 5;\n        var hMax = 84;\n        var hLev = (hMax - hMin) / (size - 1);\n        Array.range(0, size).forEach(function(i) {\n          var s = Math.floor(sMin + sLev * i);\n          var h = Math.floor(hMin + hLev * i);\n          ps.Color.pri[i] = \"hsl({0},{1}%,{2}%)\"    .format(p0, s, h);\n          ps.Color.sec0[i] = \"hsl({0},{1}%,{2}%)\"   .format(s0, s, h);\n          ps.Color.sec1[i] = \"hsl({0},{1}%,{2}%)\"   .format(s1, s, h);\n          ps.Color.pria[i] = \"hsla({0},{1}%,{2}%,\"  .format(p0, s, h) + \"{0})\";\n          ps.Color.sec0a[i] = \"hsla({0},{1}%,{2}%,\" .format(s0, s, h) + \"{0})\";\n          ps.Color.sec1a[i] = \"hsla({0},{1}%,{2}%,\" .format(s1, s, h) + \"{0})\";\n        });\n\n        if (scene) ps.Color.test().addChildTo(scene);\n      },\n\n      test: function() {\n        var r = phina.display.CanvasElement();\n        ps.Color.pri.forEach(function(c, i) {\n          phina.display.RectangleShape({\n              width: 20,\n              height: 20,\n              fill: c,\n              stroke: null,\n            })\n            .setPosition(20 + i * 20, 20 + 20)\n            .addChildTo(r);\n        });\n\n        ps.Color.sec0.forEach(function(c, i) {\n          phina.display.RectangleShape({\n              width: 20,\n              height: 20,\n              fill: c,\n              stroke: null,\n            })\n            .setPosition(20 + i * 20, 20 + 0)\n            .addChildTo(r);\n        });\n\n        ps.Color.sec1.forEach(function(c, i) {\n          phina.display.RectangleShape({\n              width: 20,\n              height: 20,\n              fill: c,\n              stroke: null,\n            })\n            .setPosition(20 + i * 20, 20 + 40)\n            .addChildTo(r);\n        });\n\n        return r;\n      }\n    },\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.FramebasedTweener\", {\n    superClass: 'phina.accessory.Accessory',\n\n    /**\n     * @constructor\n     */\n    init: function(target) {\n      this.superInit(target);\n\n      this._loop = false;\n      this._init();\n    },\n\n    _init: function() {\n      this._tasks = [];\n      this._index = 0;\n      this.playing = true;\n      this._update = this._updateTask;\n    },\n\n    update: function(app) {\n      this._update(app);\n    },\n\n    to: function(props, duration, easing) {\n      this._add({\n        type: 'tween',\n        mode: 'to',\n        props: props,\n        duration: duration,\n        easing: easing,\n      });\n      return this;\n    },\n\n    by: function(props, duration, easing) {\n      this._add({\n        type: 'tween',\n        mode: 'by',\n        props: props,\n        duration: duration,\n        easing: easing,\n      });\n\n      return this;\n    },\n\n    from: function(props, duration, easing) {\n      this._add({\n        type: 'tween',\n        mode: 'from',\n        props: props,\n        duration: duration,\n        easing: easing,\n      });\n      return this;\n    },\n\n    wait: function(time) {\n      this._add({\n        type: 'wait',\n        data: {\n          limit: time,\n        },\n      });\n      return this;\n    },\n\n    call: function(func, self, args) {\n      this._add({\n        type: 'call',\n        data: {\n          func: func,\n          self: self || this,\n          args: args,\n        },\n      });\n      return this;\n    },\n\n    /**\n     * プロパティをセット\n     * @param {Object} key\n     * @param {Object} value\n     */\n    set: function(key, value) {\n      var values = null;\n      if (arguments.length == 2) {\n        values = {};\n        values[key] = value;\n      } else {\n        values = key;\n      }\n      this._tasks.push({\n        type: \"set\",\n        data: {\n          values: values\n        }\n      });\n\n      return this;\n    },\n\n    moveTo: function(x, y, duration, easing) {\n      return this.to({\n        x: x,\n        y: y\n      }, duration, easing);\n    },\n    moveBy: function(x, y, duration, easing) {\n      return this.by({\n        x: x,\n        y: y\n      }, duration, easing);\n    },\n\n    fade: function(value, duration, easing) {\n      return this.to({\n        alpha: value\n      }, duration, easing);\n    },\n\n    fadeOut: function(duration, easing) {\n      return this.fade(0.0, duration, easing)\n    },\n\n    fadeIn: function(duration, easing) {\n      return this.fade(1.0, duration, easing)\n    },\n\n    /**\n     * アニメーション開始\n     */\n    play: function() {\n      this.playing = true;\n      return this;\n    },\n\n    /**\n     * アニメーションを一時停止\n     */\n    pause: function() {\n      this.playing = false;\n      return this;\n    },\n\n    stop: function() {\n      this.playing = false;\n      this.rewind();\n      return this;\n    },\n\n    /**\n     * アニメーションを巻き戻す\n     */\n    rewind: function() {\n      this._update = this._updateTask;\n      this._index = 0;\n      this.play();\n      return this;\n    },\n\n    yoyo: function() {\n      // TODO: 最初の値が分からないので反転できない...\n      this._update = this._updateTask;\n      this._index = 0;\n      this._tasks.each(function(task) {\n        if (task.type === 'tween') {\n\n        }\n      });\n      this.play();\n\n      return this;\n    },\n\n    /**\n     * アニメーションループ設定\n     * @param {Boolean} flag\n     */\n    setLoop: function(flag) {\n      this._loop = flag;\n      return this;\n    },\n\n    /**\n     * アニメーションをクリア\n     */\n    clear: function() {\n      this._init();\n      return this;\n    },\n\n    fromJSON: function(json) {\n      if (json.loop !== undefined) {\n        this.setLoop(json.loop);\n      }\n\n      json.tweens.each(function(t) {\n        var t = t.clone();\n        var method = t.shift();\n        this[method].apply(this, t);\n      }, this);\n\n      return this;\n    },\n\n    _add: function(params) {\n      this._tasks.push(params);\n    },\n\n    _updateTask: function(app) {\n      if (!this.playing) return;\n\n      var task = this._tasks[this._index];\n      if (!task) {\n        if (this._loop) {\n          this.rewind();\n          this._update(app);\n        } else {\n          this.playing = false;\n        }\n        return;\n      } else {\n        ++this._index;\n      }\n\n      if (task.type === 'tween') {\n        this._tween = phina.util.Tween();\n\n        if (task.mode === 'to') {\n          this._tween.to(this.target, task.props, task.duration, task.easing);\n        } else if (task.mode === 'by') {\n          this._tween.by(this.target, task.props, task.duration, task.easing);\n        } else {\n          this._tween.from(this.target, task.props, task.duration, task.easing);\n        }\n        this._update = this._updateTween;\n        this._update(app);\n      } else if (task.type === 'wait') {\n        this._wait = {\n          time: 0,\n          limit: task.data.limit,\n        };\n\n        this._update = this._updateWait;\n        this._update(app);\n      } else if (task.type === 'call') {\n        task.data.func.apply(task.data.self, task.data.args);\n        // 1フレーム消費しないよう再帰\n        this._update(app);\n      } else if (task.type === 'set') {\n        this.target.$extend(task.data.values);\n        // 1フレーム消費しないよう再帰\n        this._update(app);\n      }\n    },\n\n    _updateTween: function(app) {\n      var tween = this._tween;\n      var time = 1;\n\n      tween.forward(time);\n      this.flare('tween');\n\n      if (tween.time >= tween.duration) {\n        delete this._tween;\n        this._tween = null;\n        this._update = this._updateTask;\n      }\n    },\n\n    _updateWait: function(app) {\n      var wait = this._wait;\n      var time = 1;\n      wait.time += time;\n\n      if (wait.time >= wait.limit) {\n        delete this._wait;\n        this._wait = null;\n        this._update = this._updateTask;\n      }\n    },\n  });\n\n  phina.app.Element.prototype.getter('ftweener', function() {\n    if (!this._tweener) {\n      this._tweener = ps.FramebasedTweener().attachTo(this);\n    }\n    return this._tweener;\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.SoundManager\", {\n    init: function() {},\n    _static: {\n      _bgmVolume: 0.2,\n      soundVolume: 1.0,\n\n      beforeBgm: null,\n      currentBgm: null,\n\n      currentFrame: 0,\n      _lastPlayFrame: {},\n\n      update: function(app) {\n        this.currentFrame = app.ticker.frame;\n\n        if (this.beforeBgm) {\n          this.beforeBgm.volume -= this._bgmVolume / (60 * 5);\n          if (this.beforeBgm.volume < 0.01) {\n            this.beforeBgm.stop();\n            this.beforeBgm = null;\n          }\n        }\n      },\n\n      startBgm: function(bgmData) {\n        bgmData = (bgmData || {}).$safe({\n          name: \"bgm\",\n          loop: true,\n          loopStart: 0,\n          loopEnd: 0,\n        });\n\n        if (this.currentBgm) {\n          if (this.beforeBgm) this.beforeBgm.stop();\n          this.beforeBgm = this.currentBgm;\n        }\n        this.currentBgm = phina.asset.AssetManager.get(\"sound\", bgmData.name).clone().play();\n        this.currentBgm.volume = this._bgmVolume;\n        this.currentBgm.loop = bgmData.loop;\n        this.currentBgm.loopStart = bgmData.loopStart;\n        this.currentBgm.loopEnd = bgmData.loopEnd;\n      },\n\n      stopBgm: function(fadeOut) {\n        if (this.beforeBgm) {\n          this.beforeBgm.stop();\n          this.beforeBgm = null;\n        }\n        if (this.currentBgm) {\n          if (fadeOut) {\n            this.beforeBgm = this.currentBgm;\n            this.currentBgm = null;\n          } else {\n            this.currentBgm.stop();\n            this.currentBgm = null;\n          }\n        }\n      },\n\n      playSound: function(name) {\n        if (this._lastPlayFrame[name] !== this.currentFrame) {\n          var sound = phina.asset.AssetManager.get(\"sound\", name).clone();\n          sound.volume = this.soundVolume;\n          sound.play();\n          this._lastPlayFrame[name] = this.currentFrame;\n        }\n      },\n\n      getBgmVolume: function() {\n        return this._bgmVolume;\n      },\n      setBgmVolume: function(v) {\n        this._bgmVolume = v;\n        if (this.currentBgm) this.currentBgm.volume = v;\n      },\n    },\n\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.TextureEdit\", {\n    init: function() {},\n    _static: {\n      outline: function(textureName, color, lineWidth) {\n        color = color || \"white\";\n        lineWidth = lineWidth || 1;\n\n        var texture = phina.asset.AssetManager.get(\"image\", textureName);\n        if (texture == null) {\n          return;\n        }\n        var w = texture.domElement.width;\n        var h = texture.domElement.height;\n\n        var src = phina.graphics.Canvas().setSize(w, h);\n        src.context.drawImage(texture.domElement, 0, 0);\n\n        var srcData = src.context.getImageData(0, 0, w, h);\n        var data = srcData.data;\n\n        var dst = phina.graphics.Canvas().setSize(w, h);\n        dst.fillStyle = color;\n        for (var y = 0; y < h; y++) {\n          for (var x = 0; x < w; x++) {\n\n            var cIndex = ((y + 0) * w + (x + 0)) * 4 + 3;\n\n            var lIndex = ((y + 0) * w + (x - 1)) * 4 + 3;\n            var rIndex = ((y + 0) * w + (x + 1)) * 4 + 3;\n            var tIndex = ((y - 1) * w + (x + 0)) * 4 + 3;\n            var bIndex = ((y + 1) * w + (x + 0)) * 4 + 3;\n            var l = (0 <= lIndex && lIndex < data.length) ? data[lIndex] : 255;\n            var r = (0 <= rIndex && rIndex < data.length) ? data[rIndex] : 255;\n            var t = (0 <= tIndex && tIndex < data.length) ? data[tIndex] : 255;\n            var b = (0 <= bIndex && bIndex < data.length) ? data[bIndex] : 255;\n\n            var a = data[cIndex];\n\n            if (a > 0 && (l == 0 || r == 0 || t == 0 || b == 0)) {\n              dst.fillRect(x - lineWidth * 0.5, y - lineWidth * 0.5, lineWidth, lineWidth);\n            }\n          }\n        }\n\n        phina.asset.AssetManager.set(\"image\", textureName + \"Outline\", dst);\n      }\n    }\n  });\n\n});\n","phina.namespace(function() {\n\n  phina.define(\"ps.Timer\", {\n    superClass: \"phina.app.Element\",\n\n    init: function(time) {\n      this.superInit();\n      this.time = time;\n    },\n\n    update: function() {\n      this.time -= 1;\n      if (this.time <= 0) {\n        this.flare(\"time\");\n        this.remove();\n      }\n    }\n  });\n\n  phina.app.Element.prototype.method(\"timer\", function(time, callback) {\n    ps.Timer(time)\n      .addChildTo(this)\n      .on(\"time\", callback);\n    return this;\n  });\n\n});\n"],"sourceRoot":"/source/"}